!(function (e, t) {
  'object' == typeof exports && 'object' == typeof module
    ? (module.exports = t())
    : 'function' == typeof define && define.amd
    ? define([], t)
    : 'object' == typeof exports
    ? (exports.katex = t())
    : (e.katex = t());
})('undefined' != typeof self ? self : this, function () {
  return (function (e) {
    var t = {};
    function r(n) {
      if (t[n]) return t[n].exports;
      var a = (t[n] = { i: n, l: !1, exports: {} });
      return e[n].call(a.exports, a, a.exports, r), (a.l = !0), a.exports;
    }
    return (
      (r.m = e),
      (r.c = t),
      (r.d = function (e, t, n) {
        r.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: n });
      }),
      (r.r = function (e) {
        'undefined' != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
          Object.defineProperty(e, '__esModule', { value: !0 });
      }),
      (r.t = function (e, t) {
        if ((1 & t && (e = r(e)), 8 & t)) return e;
        if (4 & t && 'object' == typeof e && e && e.__esModule) return e;
        var n = Object.create(null);
        if (
          (r.r(n),
          Object.defineProperty(n, 'default', { enumerable: !0, value: e }),
          2 & t && 'string' != typeof e)
        )
          for (var a in e)
            r.d(
              n,
              a,
              function (t) {
                return e[t];
              }.bind(null, a)
            );
        return n;
      }),
      (r.n = function (e) {
        var t =
          e && e.__esModule
            ? function () {
                return e.default;
              }
            : function () {
                return e;
              };
        return r.d(t, 'a', t), t;
      }),
      (r.o = function (e, t) {
        return Object.prototype.hasOwnProperty.call(e, t);
      }),
      (r.p = ''),
      r((r.s = 66))
    );
  })([
    function (e, t, r) {
      'use strict';
      (t.__esModule = !0),
        (t.default = function (e, t) {
          if (!(e instanceof t))
            throw new TypeError('Cannot call a class as a function');
        });
    },
    function (e, t, r) {
      'use strict';
      t.__esModule = !0;
      var n,
        a = r(60),
        i = (n = a) && n.__esModule ? n : { default: n };
      t.default = (function () {
        function e(e, t) {
          for (var r = 0; r < t.length; r++) {
            var n = t[r];
            (n.enumerable = n.enumerable || !1),
              (n.configurable = !0),
              'value' in n && (n.writable = !0),
              (0, i.default)(e, n.key, n);
          }
        }
        return function (t, r, n) {
          return r && e(t.prototype, r), n && e(t, n), t;
        };
      })();
    },
    function (e, t) {
      var r = (e.exports = { version: '2.5.7' });
      'number' == typeof __e && (__e = r);
    },
    function (e, t, r) {
      e.exports = { default: r(100), __esModule: !0 };
    },
    function (e, t, r) {
      'use strict';
      t.__esModule = !0;
      var n,
        a = r(113),
        i = (n = a) && n.__esModule ? n : { default: n };
      t.default = function (e) {
        if (Array.isArray(e)) {
          for (var t = 0, r = Array(e.length); t < e.length; t++) r[t] = e[t];
          return r;
        }
        return (0, i.default)(e);
      };
    },
    function (e, t, r) {
      var n = r(32)('wks'),
        a = r(25),
        i = r(7).Symbol,
        o = 'function' == typeof i;
      (e.exports = function (e) {
        return n[e] || (n[e] = (o && i[e]) || (o ? i : a)('Symbol.' + e));
      }).store = n;
    },
    function (e, t, r) {
      var n = r(12),
        a = r(59),
        i = r(38),
        o = Object.defineProperty;
      t.f = r(10)
        ? Object.defineProperty
        : function (e, t, r) {
            if ((n(e), (t = i(t, !0)), n(r), a))
              try {
                return o(e, t, r);
              } catch (e) {}
            if ('get' in r || 'set' in r)
              throw TypeError('Accessors not supported!');
            return 'value' in r && (e[t] = r.value), e;
          };
    },
    function (e, t) {
      var r = (e.exports =
        'undefined' != typeof window && window.Math == Math
          ? window
          : 'undefined' != typeof self && self.Math == Math
          ? self
          : Function('return this')());
      'number' == typeof __g && (__g = r);
    },
    function (e, t, r) {
      var n = r(7),
        a = r(2),
        i = r(39),
        o = r(16),
        s = r(9),
        l = function (e, t, r) {
          var u,
            h,
            c,
            m = e & l.F,
            p = e & l.G,
            d = e & l.S,
            f = e & l.P,
            v = e & l.B,
            g = e & l.W,
            y = p ? a : a[t] || (a[t] = {}),
            x = y.prototype,
            b = p ? n : d ? n[t] : (n[t] || {}).prototype;
          for (u in (p && (r = t), r))
            ((h = !m && b && void 0 !== b[u]) && s(y, u)) ||
              ((c = h ? b[u] : r[u]),
              (y[u] =
                p && 'function' != typeof b[u]
                  ? r[u]
                  : v && h
                  ? i(c, n)
                  : g && b[u] == c
                  ? (function (e) {
                      var t = function (t, r, n) {
                        if (this instanceof e) {
                          switch (arguments.length) {
                            case 0:
                              return new e();
                            case 1:
                              return new e(t);
                            case 2:
                              return new e(t, r);
                          }
                          return new e(t, r, n);
                        }
                        return e.apply(this, arguments);
                      };
                      return (t.prototype = e.prototype), t;
                    })(c)
                  : f && 'function' == typeof c
                  ? i(Function.call, c)
                  : c),
              f &&
                (((y.virtual || (y.virtual = {}))[u] = c),
                e & l.R && x && !x[u] && o(x, u, c)));
        };
      (l.F = 1),
        (l.G = 2),
        (l.S = 4),
        (l.P = 8),
        (l.B = 16),
        (l.W = 32),
        (l.U = 64),
        (l.R = 128),
        (e.exports = l);
    },
    function (e, t) {
      var r = {}.hasOwnProperty;
      e.exports = function (e, t) {
        return r.call(e, t);
      };
    },
    function (e, t, r) {
      e.exports = !r(15)(function () {
        return (
          7 !=
          Object.defineProperty({}, 'a', {
            get: function () {
              return 7;
            },
          }).a
        );
      });
    },
    function (e, t) {
      e.exports = function (e) {
        return 'object' == typeof e ? null !== e : 'function' == typeof e;
      };
    },
    function (e, t, r) {
      var n = r(11);
      e.exports = function (e) {
        if (!n(e)) throw TypeError(e + ' is not an object!');
        return e;
      };
    },
    function (e, t, r) {
      var n = r(53),
        a = r(36);
      e.exports = function (e) {
        return n(a(e));
      };
    },
    function (e, t) {
      e.exports = {};
    },
    function (e, t) {
      e.exports = function (e) {
        try {
          return !!e();
        } catch (e) {
          return !0;
        }
      };
    },
    function (e, t, r) {
      var n = r(6),
        a = r(19);
      e.exports = r(10)
        ? function (e, t, r) {
            return n.f(e, t, a(1, r));
          }
        : function (e, t, r) {
            return (e[t] = r), e;
          };
    },
    function (e, t, r) {
      var n = r(36);
      e.exports = function (e) {
        return Object(n(e));
      };
    },
    function (e, t, r) {
      var n = r(54),
        a = r(31);
      e.exports =
        Object.keys ||
        function (e) {
          return n(e, a);
        };
    },
    function (e, t) {
      e.exports = function (e, t) {
        return {
          enumerable: !(1 & e),
          configurable: !(2 & e),
          writable: !(4 & e),
          value: t,
        };
      };
    },
    function (e, t, r) {
      'use strict';
      t.__esModule = !0;
      var n = i(r(95)),
        a = i(r(3));
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.default = (function () {
        return function (e, t) {
          if (Array.isArray(e)) return e;
          if ((0, n.default)(Object(e)))
            return (function (e, t) {
              var r = [],
                n = !0,
                i = !1,
                o = void 0;
              try {
                for (
                  var s, l = (0, a.default)(e);
                  !(n = (s = l.next()).done) &&
                  (r.push(s.value), !t || r.length !== t);
                  n = !0
                );
              } catch (e) {
                (i = !0), (o = e);
              } finally {
                try {
                  !n && l.return && l.return();
                } finally {
                  if (i) throw o;
                }
              }
              return r;
            })(e, t);
          throw new TypeError(
            'Invalid attempt to destructure non-iterable instance'
          );
        };
      })();
    },
    function (e, t) {
      t.f = {}.propertyIsEnumerable;
    },
    function (e, t) {
      e.exports = !0;
    },
    function (e, t, r) {
      'use strict';
      var n = r(111)(!0);
      r(56)(
        String,
        'String',
        function (e) {
          (this._t = String(e)), (this._i = 0);
        },
        function () {
          var e,
            t = this._t,
            r = this._i;
          return r >= t.length
            ? { value: void 0, done: !0 }
            : ((e = n(t, r)), (this._i += e.length), { value: e, done: !1 });
        }
      );
    },
    function (e, t, r) {
      var n = r(8),
        a = r(2),
        i = r(15);
      e.exports = function (e, t) {
        var r = (a.Object || {})[e] || Object[e],
          o = {};
        (o[e] = t(r)),
          n(
            n.S +
              n.F *
                i(function () {
                  r(1);
                }),
            'Object',
            o
          );
      };
    },
    function (e, t) {
      var r = 0,
        n = Math.random();
      e.exports = function (e) {
        return 'Symbol('.concat(
          void 0 === e ? '' : e,
          ')_',
          (++r + n).toString(36)
        );
      };
    },
    function (e, t) {
      t.f = Object.getOwnPropertySymbols;
    },
    function (e, t, r) {
      var n = r(7),
        a = r(2),
        i = r(22),
        o = r(28),
        s = r(6).f;
      e.exports = function (e) {
        var t = a.Symbol || (a.Symbol = i ? {} : n.Symbol || {});
        '_' == e.charAt(0) || e in t || s(t, e, { value: o.f(e) });
      };
    },
    function (e, t, r) {
      t.f = r(5);
    },
    function (e, t, r) {
      r(99);
      for (
        var n = r(7),
          a = r(16),
          i = r(14),
          o = r(5)('toStringTag'),
          s = 'CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList'.split(
            ','
          ),
          l = 0;
        l < s.length;
        l++
      ) {
        var u = s[l],
          h = n[u],
          c = h && h.prototype;
        c && !c[o] && a(c, o, u), (i[u] = i.Array);
      }
    },
    function (e, t, r) {
      var n = r(6).f,
        a = r(9),
        i = r(5)('toStringTag');
      e.exports = function (e, t, r) {
        e &&
          !a((e = r ? e : e.prototype), i) &&
          n(e, i, { configurable: !0, value: t });
      };
    },
    function (e, t) {
      e.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(
        ','
      );
    },
    function (e, t, r) {
      var n = r(2),
        a = r(7),
        i = a['__core-js_shared__'] || (a['__core-js_shared__'] = {});
      (e.exports = function (e, t) {
        return i[e] || (i[e] = void 0 !== t ? t : {});
      })('versions', []).push({
        version: n.version,
        mode: r(22) ? 'pure' : 'global',
        copyright: '\xa9 2018 Denis Pushkarev (zloirock.ru)',
      });
    },
    function (e, t, r) {
      var n = r(32)('keys'),
        a = r(25);
      e.exports = function (e) {
        return n[e] || (n[e] = a(e));
      };
    },
    function (e, t) {
      var r = {}.toString;
      e.exports = function (e) {
        return r.call(e).slice(8, -1);
      };
    },
    function (e, t, r) {
      var n = r(12),
        a = r(109),
        i = r(31),
        o = r(33)('IE_PROTO'),
        s = function () {},
        l = function () {
          var e,
            t = r(58)('iframe'),
            n = i.length;
          for (
            t.style.display = 'none',
              r(106).appendChild(t),
              t.src = 'javascript:',
              (e = t.contentWindow.document).open(),
              e.write('<script>document.F=Object</script>'),
              e.close(),
              l = e.F;
            n--;

          )
            delete l.prototype[i[n]];
          return l();
        };
      e.exports =
        Object.create ||
        function (e, t) {
          var r;
          return (
            null !== e
              ? ((s.prototype = n(e)),
                (r = new s()),
                (s.prototype = null),
                (r[o] = e))
              : (r = l()),
            void 0 === t ? r : a(r, t)
          );
        };
    },
    function (e, t) {
      e.exports = function (e) {
        if (void 0 == e) throw TypeError("Can't call method on  " + e);
        return e;
      };
    },
    function (e, t) {
      var r = Math.ceil,
        n = Math.floor;
      e.exports = function (e) {
        return isNaN((e = +e)) ? 0 : (e > 0 ? n : r)(e);
      };
    },
    function (e, t, r) {
      var n = r(11);
      e.exports = function (e, t) {
        if (!n(e)) return e;
        var r, a;
        if (t && 'function' == typeof (r = e.toString) && !n((a = r.call(e))))
          return a;
        if ('function' == typeof (r = e.valueOf) && !n((a = r.call(e))))
          return a;
        if (!t && 'function' == typeof (r = e.toString) && !n((a = r.call(e))))
          return a;
        throw TypeError("Can't convert object to primitive value");
      };
    },
    function (e, t, r) {
      var n = r(116);
      e.exports = function (e, t, r) {
        if ((n(e), void 0 === t)) return e;
        switch (r) {
          case 1:
            return function (r) {
              return e.call(t, r);
            };
          case 2:
            return function (r, n) {
              return e.call(t, r, n);
            };
          case 3:
            return function (r, n, a) {
              return e.call(t, r, n, a);
            };
        }
        return function () {
          return e.apply(t, arguments);
        };
      };
    },
    function (e, t) {
      e.exports = {
        '\u0301': { text: "\\'", math: '\\acute' },
        '\u0300': { text: '\\`', math: '\\grave' },
        '\u0308': { text: '\\"', math: '\\ddot' },
        '\u0303': { text: '\\~', math: '\\tilde' },
        '\u0304': { text: '\\=', math: '\\bar' },
        '\u0306': { text: '\\u', math: '\\breve' },
        '\u030c': { text: '\\v', math: '\\check' },
        '\u0302': { text: '\\^', math: '\\hat' },
        '\u0307': { text: '\\.', math: '\\dot' },
        '\u030a': { text: '\\r', math: '\\mathring' },
        '\u030b': { text: '\\H' },
      };
    },
    function (e, t, r) {
      e.exports = { default: r(73), __esModule: !0 };
    },
    function (e, t, r) {
      'use strict';
      t.__esModule = !0;
      var n = o(r(80)),
        a = o(r(76)),
        i = o(r(48));
      function o(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.default = function (e, t) {
        if ('function' != typeof t && null !== t)
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              (void 0 === t ? 'undefined' : (0, i.default)(t))
          );
        (e.prototype = (0, a.default)(t && t.prototype, {
          constructor: {
            value: e,
            enumerable: !1,
            writable: !0,
            configurable: !0,
          },
        })),
          t && (n.default ? (0, n.default)(e, t) : (e.__proto__ = t));
      };
    },
    function (e, t, r) {
      'use strict';
      t.__esModule = !0;
      var n,
        a = r(48),
        i = (n = a) && n.__esModule ? n : { default: n };
      t.default = function (e, t) {
        if (!e)
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return !t ||
          ('object' !== (void 0 === t ? 'undefined' : (0, i.default)(t)) &&
            'function' != typeof t)
          ? e
          : t;
      };
    },
    function (e, t, r) {
      e.exports = { default: r(92), __esModule: !0 };
    },
    function (e, t, r) {
      var n = r(21),
        a = r(19),
        i = r(13),
        o = r(38),
        s = r(9),
        l = r(59),
        u = Object.getOwnPropertyDescriptor;
      t.f = r(10)
        ? u
        : function (e, t) {
            if (((e = i(e)), (t = o(t, !0)), l))
              try {
                return u(e, t);
              } catch (e) {}
            if (s(e, t)) return a(!n.f.call(e, t), e[t]);
          };
    },
    function (e, t, r) {
      var n = r(54),
        a = r(31).concat('length', 'prototype');
      t.f =
        Object.getOwnPropertyNames ||
        function (e) {
          return n(e, a);
        };
    },
    function (e, t, r) {
      var n = r(13),
        a = r(46).f,
        i = {}.toString,
        o =
          'object' == typeof window && window && Object.getOwnPropertyNames
            ? Object.getOwnPropertyNames(window)
            : [];
      e.exports.f = function (e) {
        return o && '[object Window]' == i.call(e)
          ? (function (e) {
              try {
                return a(e);
              } catch (e) {
                return o.slice();
              }
            })(e)
          : a(n(e));
      };
    },
    function (e, t, r) {
      'use strict';
      t.__esModule = !0;
      var n = o(r(90)),
        a = o(r(88)),
        i =
          'function' == typeof a.default && 'symbol' == typeof n.default
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  'function' == typeof a.default &&
                  e.constructor === a.default &&
                  e !== a.default.prototype
                  ? 'symbol'
                  : typeof e;
              };
      function o(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.default =
        'function' == typeof a.default && 'symbol' === i(n.default)
          ? function (e) {
              return void 0 === e ? 'undefined' : i(e);
            }
          : function (e) {
              return e &&
                'function' == typeof a.default &&
                e.constructor === a.default &&
                e !== a.default.prototype
                ? 'symbol'
                : void 0 === e
                ? 'undefined'
                : i(e);
            };
    },
    function (e, t, r) {
      var n = r(34),
        a = r(5)('toStringTag'),
        i =
          'Arguments' ==
          n(
            (function () {
              return arguments;
            })()
          );
      e.exports = function (e) {
        var t, r, o;
        return void 0 === e
          ? 'Undefined'
          : null === e
          ? 'Null'
          : 'string' ==
            typeof (r = (function (e, t) {
              try {
                return e[t];
              } catch (e) {}
            })((t = Object(e)), a))
          ? r
          : i
          ? n(t)
          : 'Object' == (o = n(t)) && 'function' == typeof t.callee
          ? 'Arguments'
          : o;
      };
    },
    function (e, t, r) {
      var n = r(49),
        a = r(5)('iterator'),
        i = r(14);
      e.exports = r(2).getIteratorMethod = function (e) {
        if (void 0 != e) return e[a] || e['@@iterator'] || i[n(e)];
      };
    },
    function (e, t, r) {
      var n = r(9),
        a = r(17),
        i = r(33)('IE_PROTO'),
        o = Object.prototype;
      e.exports =
        Object.getPrototypeOf ||
        function (e) {
          return (
            (e = a(e)),
            n(e, i)
              ? e[i]
              : 'function' == typeof e.constructor && e instanceof e.constructor
              ? e.constructor.prototype
              : e instanceof Object
              ? o
              : null
          );
        };
    },
    function (e, t, r) {
      var n = r(37),
        a = Math.min;
      e.exports = function (e) {
        return e > 0 ? a(n(e), 9007199254740991) : 0;
      };
    },
    function (e, t, r) {
      var n = r(34);
      e.exports = Object('z').propertyIsEnumerable(0)
        ? Object
        : function (e) {
            return 'String' == n(e) ? e.split('') : Object(e);
          };
    },
    function (e, t, r) {
      var n = r(9),
        a = r(13),
        i = r(108)(!1),
        o = r(33)('IE_PROTO');
      e.exports = function (e, t) {
        var r,
          s = a(e),
          l = 0,
          u = [];
        for (r in s) r != o && n(s, r) && u.push(r);
        for (; t.length > l; ) n(s, (r = t[l++])) && (~i(u, r) || u.push(r));
        return u;
      };
    },
    function (e, t, r) {
      e.exports = r(16);
    },
    function (e, t, r) {
      'use strict';
      var n = r(22),
        a = r(8),
        i = r(55),
        o = r(16),
        s = r(14),
        l = r(110),
        u = r(30),
        h = r(51),
        c = r(5)('iterator'),
        m = !([].keys && 'next' in [].keys()),
        p = function () {
          return this;
        };
      e.exports = function (e, t, r, d, f, v, g) {
        l(r, t, d);
        var y,
          x,
          b,
          w = function (e) {
            if (!m && e in z) return z[e];
            switch (e) {
              case 'keys':
              case 'values':
                return function () {
                  return new r(this, e);
                };
            }
            return function () {
              return new r(this, e);
            };
          },
          k = t + ' Iterator',
          S = 'values' == f,
          M = !1,
          z = e.prototype,
          T = z[c] || z['@@iterator'] || (f && z[f]),
          A = T || w(f),
          B = f ? (S ? w('entries') : A) : void 0,
          N = ('Array' == t && z.entries) || T;
        if (
          (N &&
            (b = h(N.call(new e()))) !== Object.prototype &&
            b.next &&
            (u(b, k, !0), n || 'function' == typeof b[c] || o(b, c, p)),
          S &&
            T &&
            'values' !== T.name &&
            ((M = !0),
            (A = function () {
              return T.call(this);
            })),
          (n && !g) || (!m && !M && z[c]) || o(z, c, A),
          (s[t] = A),
          (s[k] = p),
          f)
        )
          if (
            ((y = {
              values: S ? A : w('values'),
              keys: v ? A : w('keys'),
              entries: B,
            }),
            g)
          )
            for (x in y) x in z || i(z, x, y[x]);
          else a(a.P + a.F * (m || M), t, y);
        return y;
      };
    },
    function (e, t, r) {
      var n = r(25)('meta'),
        a = r(11),
        i = r(9),
        o = r(6).f,
        s = 0,
        l =
          Object.isExtensible ||
          function () {
            return !0;
          },
        u = !r(15)(function () {
          return l(Object.preventExtensions({}));
        }),
        h = function (e) {
          o(e, n, { value: { i: 'O' + ++s, w: {} } });
        },
        c = (e.exports = {
          KEY: n,
          NEED: !1,
          fastKey: function (e, t) {
            if (!a(e))
              return 'symbol' == typeof e
                ? e
                : ('string' == typeof e ? 'S' : 'P') + e;
            if (!i(e, n)) {
              if (!l(e)) return 'F';
              if (!t) return 'E';
              h(e);
            }
            return e[n].i;
          },
          getWeak: function (e, t) {
            if (!i(e, n)) {
              if (!l(e)) return !0;
              if (!t) return !1;
              h(e);
            }
            return e[n].w;
          },
          onFreeze: function (e) {
            return u && c.NEED && l(e) && !i(e, n) && h(e), e;
          },
        });
    },
    function (e, t, r) {
      var n = r(11),
        a = r(7).document,
        i = n(a) && n(a.createElement);
      e.exports = function (e) {
        return i ? a.createElement(e) : {};
      };
    },
    function (e, t, r) {
      e.exports =
        !r(10) &&
        !r(15)(function () {
          return (
            7 !=
            Object.defineProperty(r(58)('div'), 'a', {
              get: function () {
                return 7;
              },
            }).a
          );
        });
    },
    function (e, t, r) {
      e.exports = { default: r(118), __esModule: !0 };
    },
    function (e) {
      e.exports = { a: '0.11.0-pre' };
    },
    function (e, t, r) {
      e.exports = { default: r(68), __esModule: !0 };
    },
    function (e, t, r) {
      'use strict';
      t.__esModule = !0;
      var n,
        a = r(60),
        i = (n = a) && n.__esModule ? n : { default: n };
      t.default = function (e, t, r) {
        return (
          t in e
            ? (0, i.default)(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = r),
          e
        );
      };
    },
    function (e, t, r) {
      e.exports = { default: r(70), __esModule: !0 };
    },
    function (e, t, r) {
      e.exports = { default: r(115), __esModule: !0 };
    },
    function (e, t, r) {
      'use strict';
      r.r(t);
      r(120);
      var n = r(0),
        a = r.n(n),
        i = r(1),
        o = r.n(i),
        s = r(65),
        l = r.n(s),
        u = (function () {
          function e(t, r, n) {
            a()(this, e),
              (this.lexer = t),
              (this.start = r),
              (this.end = n),
              l()(this);
          }
          return (
            o()(e, null, [
              {
                key: 'range',
                value: function (t, r) {
                  return r
                    ? t && t.loc && r.loc && t.loc.lexer === r.loc.lexer
                      ? new e(t.loc.lexer, t.loc.start, r.loc.end)
                      : null
                    : t && t.loc;
                },
              },
            ]),
            e
          );
        })(),
        h = (function () {
          function e(t, r) {
            a()(this, e), (this.text = t), (this.loc = r);
          }
          return (
            o()(e, [
              {
                key: 'range',
                value: function (t, r) {
                  return new e(r, u.range(this, t));
                },
              },
            ]),
            e
          );
        })(),
        c = function e(t, r) {
          a()(this, e);
          var n = 'KaTeX parse error: ' + t,
            i = void 0,
            o = r && r.loc;
          if (o && o.start <= o.end) {
            var s = o.lexer.input;
            i = o.start;
            var l = o.end;
            i === s.length
              ? (n += ' at end of input: ')
              : (n += ' at position ' + (i + 1) + ': ');
            var u = s.slice(i, l).replace(/[^]/g, '$&\u0332');
            n +=
              (i > 15 ? '\u2026' + s.slice(i - 15, i) : s.slice(0, i)) +
              u +
              (l + 15 < s.length ? s.slice(l, l + 15) + '\u2026' : s.slice(l));
          }
          var h = new Error(n);
          return (
            (h.name = 'ParseError'),
            (h.__proto__ = e.prototype),
            (h.position = i),
            h
          );
        };
      c.prototype.__proto__ = Error.prototype;
      var m = c,
        p = Array.prototype.indexOf,
        d = function (e, t) {
          if (null == e) return -1;
          if (p && e.indexOf === p) return e.indexOf(t);
          for (var r = e.length, n = 0; n < r; n++) if (e[n] === t) return n;
          return -1;
        },
        f = /([A-Z])/g,
        v = {
          '&': '&amp;',
          '>': '&gt;',
          '<': '&lt;',
          '"': '&quot;',
          "'": '&#x27;',
        },
        g = /[&><"']/g;
      var y = void 0;
      if ('undefined' != typeof document) {
        var x = document.createElement('span');
        y =
          'textContent' in x
            ? function (e, t) {
                e.textContent = t;
              }
            : function (e, t) {
                e.innerText = t;
              };
      }
      var b = function e(t) {
          return 'ordgroup' === t.type
            ? 1 === t.value.length
              ? e(t.value[0])
              : t
            : 'color' === t.type
            ? 1 === t.value.value.length
              ? e(t.value.value[0])
              : t
            : 'font' === t.type
            ? e(t.value.body)
            : t;
        },
        w = function (e) {
          if (!e) throw new Error('Expected non-null, but got ' + String(e));
          return e;
        },
        k = {
          contains: function (e, t) {
            return -1 !== d(e, t);
          },
          deflt: function (e, t) {
            return void 0 === e ? t : e;
          },
          escape: function (e) {
            return String(e).replace(g, function (e) {
              return v[e];
            });
          },
          hyphenate: function (e) {
            return e.replace(f, '-$1').toLowerCase();
          },
          indexOf: d,
          setTextContent: y,
          clearNode: function (e) {
            y(e, '');
          },
          getBaseElem: b,
          isCharacterBox: function (e) {
            var t = b(e);
            return (
              'mathord' === t.type ||
              'textord' === t.type ||
              'bin' === t.type ||
              'rel' === t.type ||
              'inner' === t.type ||
              'open' === t.type ||
              'close' === t.type ||
              'punct' === t.type
            );
          },
        },
        S = (function () {
          function e(t) {
            a()(this, e),
              (t = t || {}),
              (this.displayMode = k.deflt(t.displayMode, !1)),
              (this.throwOnError = k.deflt(t.throwOnError, !0)),
              (this.errorColor = k.deflt(t.errorColor, '#cc0000')),
              (this.macros = t.macros || {}),
              (this.colorIsTextColor = k.deflt(t.colorIsTextColor, !1)),
              (this.strict = k.deflt(t.strict, 'warn')),
              (this.maxSize = Math.max(0, k.deflt(t.maxSize, 1 / 0))),
              (this.maxExpand = Math.max(0, k.deflt(t.maxExpand, 1e3))),
              (this.allowedProtocols = k.deflt(t.allowedProtocols, [
                'http',
                'https',
                'mailto',
                '_relative',
              ]));
          }
          return (
            o()(e, [
              {
                key: 'reportNonstrict',
                value: function (e, t, r) {
                  var n = this.strict;
                  if (
                    ('function' == typeof n && (n = n(e, t, r)),
                    n && 'ignore' !== n)
                  ) {
                    if (!0 === n || 'error' === n)
                      throw new m(
                        "LaTeX-incompatible input and strict mode is set to 'error': " +
                          t +
                          ' [' +
                          e +
                          ']',
                        r
                      );
                    'warn' === n
                      ? 'undefined' != typeof console &&
                        console.warn(
                          "LaTeX-incompatible input and strict mode is set to 'warn': " +
                            t +
                            ' [' +
                            e +
                            ']'
                        )
                      : 'undefined' != typeof console &&
                        console.warn(
                          "LaTeX-incompatible input and strict mode is set to unrecognized '" +
                            n +
                            "': " +
                            t +
                            ' [' +
                            e +
                            ']'
                        );
                  }
                },
              },
              {
                key: 'useStrictBehavior',
                value: function (e, t, r) {
                  var n = this.strict;
                  if ('function' == typeof n)
                    try {
                      n = n(e, t, r);
                    } catch (e) {
                      n = 'error';
                    }
                  return (
                    !(!n || 'ignore' === n) &&
                    (!0 === n ||
                      'error' === n ||
                      ('warn' === n
                        ? ('undefined' != typeof console &&
                            console.warn(
                              "LaTeX-incompatible input and strict mode is set to 'warn': " +
                                t +
                                ' [' +
                                e +
                                ']'
                            ),
                          !1)
                        : ('undefined' != typeof console &&
                            console.warn(
                              "LaTeX-incompatible input and strict mode is set to unrecognized '" +
                                n +
                                "': " +
                                t +
                                ' [' +
                                e +
                                ']'
                            ),
                          !1)))
                  );
                },
              },
            ]),
            e
          );
        })(),
        M = r(4),
        z = r.n(M),
        T = (function () {
          function e(t, r, n) {
            a()(this, e), (this.id = t), (this.size = r), (this.cramped = n);
          }
          return (
            o()(e, [
              {
                key: 'sup',
                value: function () {
                  return A[B[this.id]];
                },
              },
              {
                key: 'sub',
                value: function () {
                  return A[N[this.id]];
                },
              },
              {
                key: 'fracNum',
                value: function () {
                  return A[O[this.id]];
                },
              },
              {
                key: 'fracDen',
                value: function () {
                  return A[C[this.id]];
                },
              },
              {
                key: 'cramp',
                value: function () {
                  return A[E[this.id]];
                },
              },
              {
                key: 'text',
                value: function () {
                  return A[q[this.id]];
                },
              },
              {
                key: 'isTight',
                value: function () {
                  return this.size >= 2;
                },
              },
            ]),
            e
          );
        })(),
        A = [
          new T(0, 0, !1),
          new T(1, 0, !0),
          new T(2, 1, !1),
          new T(3, 1, !0),
          new T(4, 2, !1),
          new T(5, 2, !0),
          new T(6, 3, !1),
          new T(7, 3, !0),
        ],
        B = [4, 5, 4, 5, 6, 7, 6, 7],
        N = [5, 5, 5, 5, 7, 7, 7, 7],
        O = [2, 3, 4, 5, 6, 7, 6, 7],
        C = [3, 3, 5, 5, 7, 7, 7, 7],
        E = [1, 1, 3, 3, 5, 5, 7, 7],
        q = [0, 1, 2, 3, 2, 3, 2, 3],
        I = { DISPLAY: A[0], TEXT: A[2], SCRIPT: A[4], SCRIPTSCRIPT: A[6] },
        L = r(3),
        P = r.n(L),
        _ = r(20),
        R = r.n(_),
        D = r(44),
        H = r.n(D),
        F = r(43),
        j = r.n(F),
        V = r(42),
        G = r.n(V),
        U = r(41),
        W = r.n(U),
        Y = [
          {
            name: 'latin',
            blocks: [
              [256, 591],
              [768, 879],
            ],
          },
          { name: 'cyrillic', blocks: [[1024, 1279]] },
          { name: 'brahmic', blocks: [[2304, 4255]] },
          { name: 'georgian', blocks: [[4256, 4351]] },
          {
            name: 'cjk',
            blocks: [
              [12288, 12543],
              [19968, 40879],
              [65280, 65376],
            ],
          },
          { name: 'hangul', blocks: [[44032, 55215]] },
        ];
      var X = [];
      function $(e) {
        for (var t = 0; t < X.length; t += 2)
          if (e >= X[t] && e <= X[t + 1]) return !0;
        return !1;
      }
      Y.forEach(function (e) {
        return e.blocks.forEach(function (e) {
          return X.push.apply(X, z()(e));
        });
      });
      var Z = {
          path: {
            sqrtMain:
              'M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,\n-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,\n-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,\n35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,\n-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467\ns-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422\ns-65,47,-65,47z M834 80H400000v40H845z',
            sqrtSize1:
              'M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,\n158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067\nc4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,\n175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71\nc-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,\n-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26\ns76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z',
            sqrtSize2:
              'M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,\n572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,\n-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39\nc-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60\ns208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,\n-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z\nM1001 80H400000v40H1013z',
            sqrtSize3:
              'M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,\n-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,\n25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,\n-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079\nc169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M1001 80H400000v40H1014z',
            sqrtSize4:
              'M473,2793c339.3,-1799.3,509.3,-2700,510,-2702\nc3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,\n-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,\n-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,\n21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,\n77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606z\nM1001 80H400000v40H1017z',
            doubleleftarrow:
              'M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z',
            doublerightarrow:
              'M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z',
            leftarrow:
              'M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z',
            leftbrace:
              'M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z',
            leftbraceunder:
              'M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z',
            leftgroup:
              'M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z',
            leftgroupunder:
              'M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z',
            leftharpoon:
              'M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z',
            leftharpoonplus:
              'M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z',
            leftharpoondown:
              'M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z',
            leftharpoondownplus:
              'M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z',
            lefthook:
              'M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z',
            leftlinesegment:
              'M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z',
            leftmapsto:
              'M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z',
            leftToFrom:
              'M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z',
            longequal:
              'M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z',
            midbrace:
              'M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z',
            midbraceunder:
              'M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z',
            oiintSize1:
              'M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z',
            oiintSize2:
              'M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\nc0 110 84 276 504 276s502.4-166 502.4-276z',
            oiiintSize1:
              'M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z',
            oiiintSize2:
              'M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z',
            rightarrow:
              'M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z',
            rightbrace:
              'M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z',
            rightbraceunder:
              'M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z',
            rightgroup:
              'M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z',
            rightgroupunder:
              'M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z',
            rightharpoon:
              'M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z',
            rightharpoonplus:
              'M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z',
            rightharpoondown:
              'M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z',
            rightharpoondownplus:
              'M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z',
            righthook:
              'M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z',
            rightlinesegment:
              'M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z',
            rightToFrom:
              'M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z',
            twoheadleftarrow:
              'M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z',
            twoheadrightarrow:
              'M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z',
            tilde1:
              'M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z',
            tilde2:
              'M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z',
            tilde3:
              'M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z',
            tilde4:
              'M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z',
            vec:
              'M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z',
            widehat1:
              'M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z',
            widehat2:
              'M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z',
            widehat3:
              'M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z',
            widehat4:
              'M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z',
            widecheck1:
              'M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z',
            widecheck2:
              'M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z',
            widecheck3:
              'M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z',
            widecheck4:
              'M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z',
            baraboveleftarrow:
              'M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\nM100 241v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z',
            rightarrowabovebar:
              'M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z',
            baraboveshortleftharpoon:
              'M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z',
            rightharpoonaboveshortbar:
              'M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z',
            shortbaraboveleftharpoon:
              'M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z',
            shortrightharpoonabovebar:
              'M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z',
          },
        },
        K = function (e) {
          return e
            .filter(function (e) {
              return e;
            })
            .join(' ');
        },
        J = (function () {
          function e(t, r, n, i) {
            if (
              (a()(this, e),
              (this.classes = t || []),
              (this.children = r || []),
              (this.attributes = {}),
              (this.height = 0),
              (this.depth = 0),
              (this.maxFontSize = 0),
              (this.style = W()({}, i)),
              n)
            ) {
              n.style.isTight() && this.classes.push('mtight');
              var o = n.getColor();
              o && (this.style.color = o);
            }
          }
          return (
            o()(e, [
              {
                key: 'setAttribute',
                value: function (e, t) {
                  this.attributes[e] = t;
                },
              },
              {
                key: 'hasClass',
                value: function (e) {
                  return k.contains(this.classes, e);
                },
              },
              {
                key: 'tryCombine',
                value: function (e) {
                  return !1;
                },
              },
              {
                key: 'tagName',
                value: function () {
                  throw new Error('use of generic HtmlDomContainer tagName');
                },
              },
              {
                key: 'toNode',
                value: function () {
                  var e = document.createElement(this.tagName());
                  for (var t in ((e.className = K(this.classes)), this.style))
                    Object.prototype.hasOwnProperty.call(this.style, t) &&
                      (e.style[t] = this.style[t]);
                  for (var r in this.attributes)
                    this.attributes.hasOwnProperty(r) &&
                      e.setAttribute(r, this.attributes[r]);
                  for (var n = 0; n < this.children.length; n++)
                    e.appendChild(this.children[n].toNode());
                  return e;
                },
              },
              {
                key: 'toMarkup',
                value: function () {
                  var e = '<' + this.tagName();
                  this.classes.length &&
                    (e += ' class="' + k.escape(K(this.classes)) + '"');
                  var t = '';
                  for (var r in this.style)
                    this.style.hasOwnProperty(r) &&
                      (t += k.hyphenate(r) + ':' + this.style[r] + ';');
                  for (var n in (t && (e += ' style="' + k.escape(t) + '"'),
                  this.attributes))
                    this.attributes.hasOwnProperty(n) &&
                      ((e += ' ' + n + '="'),
                      (e += k.escape(this.attributes[n])),
                      (e += '"'));
                  e += '>';
                  for (var a = 0; a < this.children.length; a++)
                    e += this.children[a].toMarkup();
                  return (e += '</' + this.tagName() + '>');
                },
              },
            ]),
            e
          );
        })(),
        Q = (function (e) {
          function t(e, r, n, i) {
            return (
              a()(this, t),
              j()(this, (t.__proto__ || H()(t)).call(this, e, r, n, i))
            );
          }
          return (
            G()(t, e),
            o()(t, [
              {
                key: 'tagName',
                value: function () {
                  return 'span';
                },
              },
            ]),
            t
          );
        })(J),
        ee = (function (e) {
          function t(e, r, n, i) {
            a()(this, t);
            var o = j()(this, (t.__proto__ || H()(t)).call(this, r, n, i));
            return o.setAttribute('href', e), o;
          }
          return (
            G()(t, e),
            o()(t, [
              {
                key: 'tagName',
                value: function () {
                  return 'a';
                },
              },
            ]),
            t
          );
        })(J),
        te = (function () {
          function e(t) {
            a()(this, e),
              (this.children = t || []),
              (this.classes = []),
              (this.height = 0),
              (this.depth = 0),
              (this.maxFontSize = 0),
              (this.style = {});
          }
          return (
            o()(e, [
              {
                key: 'hasClass',
                value: function (e) {
                  return k.contains(this.classes, e);
                },
              },
              {
                key: 'tryCombine',
                value: function (e) {
                  return !1;
                },
              },
              {
                key: 'toNode',
                value: function () {
                  for (
                    var e = document.createDocumentFragment(), t = 0;
                    t < this.children.length;
                    t++
                  )
                    e.appendChild(this.children[t].toNode());
                  return e;
                },
              },
              {
                key: 'toMarkup',
                value: function () {
                  for (var e = '', t = 0; t < this.children.length; t++)
                    e += this.children[t].toMarkup();
                  return e;
                },
              },
            ]),
            e
          );
        })(),
        re = {
          î: '\u0131\u0302',
          ï: '\u0131\u0308',
          í: '\u0131\u0301',
          ì: '\u0131\u0300',
        },
        ne = (function () {
          function e(t, r, n, i, o, s, l, u) {
            a()(this, e),
              (this.value = t),
              (this.height = r || 0),
              (this.depth = n || 0),
              (this.italic = i || 0),
              (this.skew = o || 0),
              (this.width = s || 0),
              (this.classes = l || []),
              (this.style = W()({}, u)),
              (this.maxFontSize = 0);
            var h = (function (e) {
              var t = !0,
                r = !1,
                n = void 0;
              try {
                for (var a, i = P()(Y); !(t = (a = i.next()).done); t = !0) {
                  var o = a.value,
                    s = !0,
                    l = !1,
                    u = void 0;
                  try {
                    for (
                      var h, c = P()(o.blocks);
                      !(s = (h = c.next()).done);
                      s = !0
                    ) {
                      var m = h.value;
                      if (e >= m[0] && e <= m[1]) return o.name;
                    }
                  } catch (e) {
                    (l = !0), (u = e);
                  } finally {
                    try {
                      !s && c.return && c.return();
                    } finally {
                      if (l) throw u;
                    }
                  }
                }
              } catch (e) {
                (r = !0), (n = e);
              } finally {
                try {
                  !t && i.return && i.return();
                } finally {
                  if (r) throw n;
                }
              }
              return null;
            })(this.value.charCodeAt(0));
            h && this.classes.push(h + '_fallback'),
              /[\xee\xef\xed\xec]/.test(this.value) &&
                (this.value = re[this.value]);
          }
          return (
            o()(e, [
              {
                key: 'hasClass',
                value: function (e) {
                  return k.contains(this.classes, e);
                },
              },
              {
                key: 'tryCombine',
                value: function (t) {
                  if (
                    !t ||
                    !(t instanceof e) ||
                    this.italic > 0 ||
                    K(this.classes) !== K(t.classes) ||
                    this.skew !== t.skew ||
                    this.maxFontSize !== t.maxFontSize
                  )
                    return !1;
                  for (var r in this.style)
                    if (
                      this.style.hasOwnProperty(r) &&
                      this.style[r] !== t.style[r]
                    )
                      return !1;
                  for (var n in t.style)
                    if (
                      t.style.hasOwnProperty(n) &&
                      this.style[n] !== t.style[n]
                    )
                      return !1;
                  return (
                    (this.value += t.value),
                    (this.height = Math.max(this.height, t.height)),
                    (this.depth = Math.max(this.depth, t.depth)),
                    (this.italic = t.italic),
                    !0
                  );
                },
              },
              {
                key: 'toNode',
                value: function () {
                  var e = document.createTextNode(this.value),
                    t = null;
                  for (var r in (this.italic > 0 &&
                    ((t = document.createElement('span')).style.marginRight =
                      this.italic + 'em'),
                  this.classes.length > 0 &&
                    ((t = t || document.createElement('span')).className = K(
                      this.classes
                    )),
                  this.style))
                    this.style.hasOwnProperty(r) &&
                      ((t = t || document.createElement('span')).style[
                        r
                      ] = this.style[r]);
                  return t ? (t.appendChild(e), t) : e;
                },
              },
              {
                key: 'toMarkup',
                value: function () {
                  var e = !1,
                    t = '<span';
                  this.classes.length &&
                    ((e = !0),
                    (t += ' class="'),
                    (t += k.escape(K(this.classes))),
                    (t += '"'));
                  var r = '';
                  for (var n in (this.italic > 0 &&
                    (r += 'margin-right:' + this.italic + 'em;'),
                  this.style))
                    this.style.hasOwnProperty(n) &&
                      (r += k.hyphenate(n) + ':' + this.style[n] + ';');
                  r && ((e = !0), (t += ' style="' + k.escape(r) + '"'));
                  var a = k.escape(this.value);
                  return e ? ((t += '>'), (t += a), (t += '</span>')) : a;
                },
              },
            ]),
            e
          );
        })(),
        ae = (function () {
          function e(t, r) {
            a()(this, e),
              (this.children = t || []),
              (this.attributes = r || {});
          }
          return (
            o()(e, [
              {
                key: 'toNode',
                value: function () {
                  var e = document.createElementNS(
                    'http://www.w3.org/2000/svg',
                    'svg'
                  );
                  for (var t in this.attributes)
                    Object.prototype.hasOwnProperty.call(this.attributes, t) &&
                      e.setAttribute(t, this.attributes[t]);
                  for (var r = 0; r < this.children.length; r++)
                    e.appendChild(this.children[r].toNode());
                  return e;
                },
              },
              {
                key: 'toMarkup',
                value: function () {
                  var e = '<svg';
                  for (var t in this.attributes)
                    Object.prototype.hasOwnProperty.call(this.attributes, t) &&
                      (e += ' ' + t + "='" + this.attributes[t] + "'");
                  e += '>';
                  for (var r = 0; r < this.children.length; r++)
                    e += this.children[r].toMarkup();
                  return (e += '</svg>');
                },
              },
            ]),
            e
          );
        })(),
        ie = (function () {
          function e(t, r) {
            a()(this, e), (this.pathName = t), (this.alternate = r);
          }
          return (
            o()(e, [
              {
                key: 'toNode',
                value: function () {
                  var e = document.createElementNS(
                    'http://www.w3.org/2000/svg',
                    'path'
                  );
                  return (
                    this.alternate
                      ? e.setAttribute('d', this.alternate)
                      : e.setAttribute('d', Z.path[this.pathName]),
                    e
                  );
                },
              },
              {
                key: 'toMarkup',
                value: function () {
                  return this.alternate
                    ? "<path d='" + this.alternate + "'/>"
                    : "<path d='" + Z.path[this.pathName] + "'/>";
                },
              },
            ]),
            e
          );
        })(),
        oe = (function () {
          function e(t) {
            a()(this, e), (this.attributes = t || {});
          }
          return (
            o()(e, [
              {
                key: 'toNode',
                value: function () {
                  var e = document.createElementNS(
                    'http://www.w3.org/2000/svg',
                    'line'
                  );
                  for (var t in this.attributes)
                    Object.prototype.hasOwnProperty.call(this.attributes, t) &&
                      e.setAttribute(t, this.attributes[t]);
                  return e;
                },
              },
              {
                key: 'toMarkup',
                value: function () {
                  var e = '<line';
                  for (var t in this.attributes)
                    Object.prototype.hasOwnProperty.call(this.attributes, t) &&
                      (e += ' ' + t + "='" + this.attributes[t] + "'");
                  return (e += '/>');
                },
              },
            ]),
            e
          );
        })();
      var se = {
          span: Q,
          anchor: ee,
          documentFragment: te,
          symbolNode: ne,
          svgNode: ae,
          pathNode: ie,
          lineNode: oe,
        },
        le = {
          'AMS-Regular': {
            65: [0, 0.68889, 0, 0, 0.72222],
            66: [0, 0.68889, 0, 0, 0.66667],
            67: [0, 0.68889, 0, 0, 0.72222],
            68: [0, 0.68889, 0, 0, 0.72222],
            69: [0, 0.68889, 0, 0, 0.66667],
            70: [0, 0.68889, 0, 0, 0.61111],
            71: [0, 0.68889, 0, 0, 0.77778],
            72: [0, 0.68889, 0, 0, 0.77778],
            73: [0, 0.68889, 0, 0, 0.38889],
            74: [0.16667, 0.68889, 0, 0, 0.5],
            75: [0, 0.68889, 0, 0, 0.77778],
            76: [0, 0.68889, 0, 0, 0.66667],
            77: [0, 0.68889, 0, 0, 0.94445],
            78: [0, 0.68889, 0, 0, 0.72222],
            79: [0.16667, 0.68889, 0, 0, 0.77778],
            80: [0, 0.68889, 0, 0, 0.61111],
            81: [0.16667, 0.68889, 0, 0, 0.77778],
            82: [0, 0.68889, 0, 0, 0.72222],
            83: [0, 0.68889, 0, 0, 0.55556],
            84: [0, 0.68889, 0, 0, 0.66667],
            85: [0, 0.68889, 0, 0, 0.72222],
            86: [0, 0.68889, 0, 0, 0.72222],
            87: [0, 0.68889, 0, 0, 1],
            88: [0, 0.68889, 0, 0, 0.72222],
            89: [0, 0.68889, 0, 0, 0.72222],
            90: [0, 0.68889, 0, 0, 0.66667],
            107: [0, 0.68889, 0, 0, 0.55556],
            165: [0, 0.675, 0.025, 0, 0.75],
            174: [0.15559, 0.69224, 0, 0, 0.94666],
            240: [0, 0.68889, 0, 0, 0.55556],
            295: [0, 0.68889, 0, 0, 0.54028],
            710: [0, 0.825, 0, 0, 2.33334],
            732: [0, 0.9, 0, 0, 2.33334],
            770: [0, 0.825, 0, 0, 2.33334],
            771: [0, 0.9, 0, 0, 2.33334],
            989: [0.08167, 0.58167, 0, 0, 0.77778],
            1008: [0, 0.43056, 0.04028, 0, 0.66667],
            8245: [0, 0.54986, 0, 0, 0.275],
            8463: [0, 0.68889, 0, 0, 0.54028],
            8487: [0, 0.68889, 0, 0, 0.72222],
            8498: [0, 0.68889, 0, 0, 0.55556],
            8502: [0, 0.68889, 0, 0, 0.66667],
            8503: [0, 0.68889, 0, 0, 0.44445],
            8504: [0, 0.68889, 0, 0, 0.66667],
            8513: [0, 0.68889, 0, 0, 0.63889],
            8592: [-0.03598, 0.46402, 0, 0, 0.5],
            8594: [-0.03598, 0.46402, 0, 0, 0.5],
            8602: [-0.13313, 0.36687, 0, 0, 1],
            8603: [-0.13313, 0.36687, 0, 0, 1],
            8606: [0.01354, 0.52239, 0, 0, 1],
            8608: [0.01354, 0.52239, 0, 0, 1],
            8610: [0.01354, 0.52239, 0, 0, 1.11111],
            8611: [0.01354, 0.52239, 0, 0, 1.11111],
            8619: [0, 0.54986, 0, 0, 1],
            8620: [0, 0.54986, 0, 0, 1],
            8621: [-0.13313, 0.37788, 0, 0, 1.38889],
            8622: [-0.13313, 0.36687, 0, 0, 1],
            8624: [0, 0.69224, 0, 0, 0.5],
            8625: [0, 0.69224, 0, 0, 0.5],
            8630: [0, 0.43056, 0, 0, 1],
            8631: [0, 0.43056, 0, 0, 1],
            8634: [0.08198, 0.58198, 0, 0, 0.77778],
            8635: [0.08198, 0.58198, 0, 0, 0.77778],
            8638: [0.19444, 0.69224, 0, 0, 0.41667],
            8639: [0.19444, 0.69224, 0, 0, 0.41667],
            8642: [0.19444, 0.69224, 0, 0, 0.41667],
            8643: [0.19444, 0.69224, 0, 0, 0.41667],
            8644: [0.1808, 0.675, 0, 0, 1],
            8646: [0.1808, 0.675, 0, 0, 1],
            8647: [0.1808, 0.675, 0, 0, 1],
            8648: [0.19444, 0.69224, 0, 0, 0.83334],
            8649: [0.1808, 0.675, 0, 0, 1],
            8650: [0.19444, 0.69224, 0, 0, 0.83334],
            8651: [0.01354, 0.52239, 0, 0, 1],
            8652: [0.01354, 0.52239, 0, 0, 1],
            8653: [-0.13313, 0.36687, 0, 0, 1],
            8654: [-0.13313, 0.36687, 0, 0, 1],
            8655: [-0.13313, 0.36687, 0, 0, 1],
            8666: [0.13667, 0.63667, 0, 0, 1],
            8667: [0.13667, 0.63667, 0, 0, 1],
            8669: [-0.13313, 0.37788, 0, 0, 1],
            8672: [-0.064, 0.437, 0, 0, 1.334],
            8674: [-0.064, 0.437, 0, 0, 1.334],
            8705: [0, 0.825, 0, 0, 0.5],
            8708: [0, 0.68889, 0, 0, 0.55556],
            8709: [0.08167, 0.58167, 0, 0, 0.77778],
            8717: [0, 0.43056, 0, 0, 0.42917],
            8722: [-0.03598, 0.46402, 0, 0, 0.5],
            8724: [0.08198, 0.69224, 0, 0, 0.77778],
            8726: [0.08167, 0.58167, 0, 0, 0.77778],
            8733: [0, 0.69224, 0, 0, 0.77778],
            8736: [0, 0.69224, 0, 0, 0.72222],
            8737: [0, 0.69224, 0, 0, 0.72222],
            8738: [0.03517, 0.52239, 0, 0, 0.72222],
            8739: [0.08167, 0.58167, 0, 0, 0.22222],
            8740: [0.25142, 0.74111, 0, 0, 0.27778],
            8741: [0.08167, 0.58167, 0, 0, 0.38889],
            8742: [0.25142, 0.74111, 0, 0, 0.5],
            8756: [0, 0.69224, 0, 0, 0.66667],
            8757: [0, 0.69224, 0, 0, 0.66667],
            8764: [-0.13313, 0.36687, 0, 0, 0.77778],
            8765: [-0.13313, 0.37788, 0, 0, 0.77778],
            8769: [-0.13313, 0.36687, 0, 0, 0.77778],
            8770: [-0.03625, 0.46375, 0, 0, 0.77778],
            8774: [0.30274, 0.79383, 0, 0, 0.77778],
            8776: [-0.01688, 0.48312, 0, 0, 0.77778],
            8778: [0.08167, 0.58167, 0, 0, 0.77778],
            8782: [0.06062, 0.54986, 0, 0, 0.77778],
            8783: [0.06062, 0.54986, 0, 0, 0.77778],
            8785: [0.08198, 0.58198, 0, 0, 0.77778],
            8786: [0.08198, 0.58198, 0, 0, 0.77778],
            8787: [0.08198, 0.58198, 0, 0, 0.77778],
            8790: [0, 0.69224, 0, 0, 0.77778],
            8791: [0.22958, 0.72958, 0, 0, 0.77778],
            8796: [0.08198, 0.91667, 0, 0, 0.77778],
            8806: [0.25583, 0.75583, 0, 0, 0.77778],
            8807: [0.25583, 0.75583, 0, 0, 0.77778],
            8808: [0.25142, 0.75726, 0, 0, 0.77778],
            8809: [0.25142, 0.75726, 0, 0, 0.77778],
            8812: [0.25583, 0.75583, 0, 0, 0.5],
            8814: [0.20576, 0.70576, 0, 0, 0.77778],
            8815: [0.20576, 0.70576, 0, 0, 0.77778],
            8816: [0.30274, 0.79383, 0, 0, 0.77778],
            8817: [0.30274, 0.79383, 0, 0, 0.77778],
            8818: [0.22958, 0.72958, 0, 0, 0.77778],
            8819: [0.22958, 0.72958, 0, 0, 0.77778],
            8822: [0.1808, 0.675, 0, 0, 0.77778],
            8823: [0.1808, 0.675, 0, 0, 0.77778],
            8828: [0.13667, 0.63667, 0, 0, 0.77778],
            8829: [0.13667, 0.63667, 0, 0, 0.77778],
            8830: [0.22958, 0.72958, 0, 0, 0.77778],
            8831: [0.22958, 0.72958, 0, 0, 0.77778],
            8832: [0.20576, 0.70576, 0, 0, 0.77778],
            8833: [0.20576, 0.70576, 0, 0, 0.77778],
            8840: [0.30274, 0.79383, 0, 0, 0.77778],
            8841: [0.30274, 0.79383, 0, 0, 0.77778],
            8842: [0.13597, 0.63597, 0, 0, 0.77778],
            8843: [0.13597, 0.63597, 0, 0, 0.77778],
            8847: [0.03517, 0.54986, 0, 0, 0.77778],
            8848: [0.03517, 0.54986, 0, 0, 0.77778],
            8858: [0.08198, 0.58198, 0, 0, 0.77778],
            8859: [0.08198, 0.58198, 0, 0, 0.77778],
            8861: [0.08198, 0.58198, 0, 0, 0.77778],
            8862: [0, 0.675, 0, 0, 0.77778],
            8863: [0, 0.675, 0, 0, 0.77778],
            8864: [0, 0.675, 0, 0, 0.77778],
            8865: [0, 0.675, 0, 0, 0.77778],
            8872: [0, 0.69224, 0, 0, 0.61111],
            8873: [0, 0.69224, 0, 0, 0.72222],
            8874: [0, 0.69224, 0, 0, 0.88889],
            8876: [0, 0.68889, 0, 0, 0.61111],
            8877: [0, 0.68889, 0, 0, 0.61111],
            8878: [0, 0.68889, 0, 0, 0.72222],
            8879: [0, 0.68889, 0, 0, 0.72222],
            8882: [0.03517, 0.54986, 0, 0, 0.77778],
            8883: [0.03517, 0.54986, 0, 0, 0.77778],
            8884: [0.13667, 0.63667, 0, 0, 0.77778],
            8885: [0.13667, 0.63667, 0, 0, 0.77778],
            8888: [0, 0.54986, 0, 0, 1.11111],
            8890: [0.19444, 0.43056, 0, 0, 0.55556],
            8891: [0.19444, 0.69224, 0, 0, 0.61111],
            8892: [0.19444, 0.69224, 0, 0, 0.61111],
            8901: [0, 0.54986, 0, 0, 0.27778],
            8903: [0.08167, 0.58167, 0, 0, 0.77778],
            8905: [0.08167, 0.58167, 0, 0, 0.77778],
            8906: [0.08167, 0.58167, 0, 0, 0.77778],
            8907: [0, 0.69224, 0, 0, 0.77778],
            8908: [0, 0.69224, 0, 0, 0.77778],
            8909: [-0.03598, 0.46402, 0, 0, 0.77778],
            8910: [0, 0.54986, 0, 0, 0.76042],
            8911: [0, 0.54986, 0, 0, 0.76042],
            8912: [0.03517, 0.54986, 0, 0, 0.77778],
            8913: [0.03517, 0.54986, 0, 0, 0.77778],
            8914: [0, 0.54986, 0, 0, 0.66667],
            8915: [0, 0.54986, 0, 0, 0.66667],
            8916: [0, 0.69224, 0, 0, 0.66667],
            8918: [0.0391, 0.5391, 0, 0, 0.77778],
            8919: [0.0391, 0.5391, 0, 0, 0.77778],
            8920: [0.03517, 0.54986, 0, 0, 1.33334],
            8921: [0.03517, 0.54986, 0, 0, 1.33334],
            8922: [0.38569, 0.88569, 0, 0, 0.77778],
            8923: [0.38569, 0.88569, 0, 0, 0.77778],
            8926: [0.13667, 0.63667, 0, 0, 0.77778],
            8927: [0.13667, 0.63667, 0, 0, 0.77778],
            8928: [0.30274, 0.79383, 0, 0, 0.77778],
            8929: [0.30274, 0.79383, 0, 0, 0.77778],
            8934: [0.23222, 0.74111, 0, 0, 0.77778],
            8935: [0.23222, 0.74111, 0, 0, 0.77778],
            8936: [0.23222, 0.74111, 0, 0, 0.77778],
            8937: [0.23222, 0.74111, 0, 0, 0.77778],
            8938: [0.20576, 0.70576, 0, 0, 0.77778],
            8939: [0.20576, 0.70576, 0, 0, 0.77778],
            8940: [0.30274, 0.79383, 0, 0, 0.77778],
            8941: [0.30274, 0.79383, 0, 0, 0.77778],
            8994: [0.19444, 0.69224, 0, 0, 0.77778],
            8995: [0.19444, 0.69224, 0, 0, 0.77778],
            9416: [0.15559, 0.69224, 0, 0, 0.90222],
            9484: [0, 0.69224, 0, 0, 0.5],
            9488: [0, 0.69224, 0, 0, 0.5],
            9492: [0, 0.37788, 0, 0, 0.5],
            9496: [0, 0.37788, 0, 0, 0.5],
            9585: [0.19444, 0.68889, 0, 0, 0.88889],
            9586: [0.19444, 0.74111, 0, 0, 0.88889],
            9632: [0, 0.675, 0, 0, 0.77778],
            9633: [0, 0.675, 0, 0, 0.77778],
            9650: [0, 0.54986, 0, 0, 0.72222],
            9651: [0, 0.54986, 0, 0, 0.72222],
            9654: [0.03517, 0.54986, 0, 0, 0.77778],
            9660: [0, 0.54986, 0, 0, 0.72222],
            9661: [0, 0.54986, 0, 0, 0.72222],
            9664: [0.03517, 0.54986, 0, 0, 0.77778],
            9674: [0.11111, 0.69224, 0, 0, 0.66667],
            9733: [0.19444, 0.69224, 0, 0, 0.94445],
            10003: [0, 0.69224, 0, 0, 0.83334],
            10016: [0, 0.69224, 0, 0, 0.83334],
            10731: [0.11111, 0.69224, 0, 0, 0.66667],
            10846: [0.19444, 0.75583, 0, 0, 0.61111],
            10877: [0.13667, 0.63667, 0, 0, 0.77778],
            10878: [0.13667, 0.63667, 0, 0, 0.77778],
            10885: [0.25583, 0.75583, 0, 0, 0.77778],
            10886: [0.25583, 0.75583, 0, 0, 0.77778],
            10887: [0.13597, 0.63597, 0, 0, 0.77778],
            10888: [0.13597, 0.63597, 0, 0, 0.77778],
            10889: [0.26167, 0.75726, 0, 0, 0.77778],
            10890: [0.26167, 0.75726, 0, 0, 0.77778],
            10891: [0.48256, 0.98256, 0, 0, 0.77778],
            10892: [0.48256, 0.98256, 0, 0, 0.77778],
            10901: [0.13667, 0.63667, 0, 0, 0.77778],
            10902: [0.13667, 0.63667, 0, 0, 0.77778],
            10933: [0.25142, 0.75726, 0, 0, 0.77778],
            10934: [0.25142, 0.75726, 0, 0, 0.77778],
            10935: [0.26167, 0.75726, 0, 0, 0.77778],
            10936: [0.26167, 0.75726, 0, 0, 0.77778],
            10937: [0.26167, 0.75726, 0, 0, 0.77778],
            10938: [0.26167, 0.75726, 0, 0, 0.77778],
            10949: [0.25583, 0.75583, 0, 0, 0.77778],
            10950: [0.25583, 0.75583, 0, 0, 0.77778],
            10955: [0.28481, 0.79383, 0, 0, 0.77778],
            10956: [0.28481, 0.79383, 0, 0, 0.77778],
            57350: [0.08167, 0.58167, 0, 0, 0.22222],
            57351: [0.08167, 0.58167, 0, 0, 0.38889],
            57352: [0.08167, 0.58167, 0, 0, 0.77778],
            57353: [0, 0.43056, 0.04028, 0, 0.66667],
            57356: [0.25142, 0.75726, 0, 0, 0.77778],
            57357: [0.25142, 0.75726, 0, 0, 0.77778],
            57358: [0.41951, 0.91951, 0, 0, 0.77778],
            57359: [0.30274, 0.79383, 0, 0, 0.77778],
            57360: [0.30274, 0.79383, 0, 0, 0.77778],
            57361: [0.41951, 0.91951, 0, 0, 0.77778],
            57366: [0.25142, 0.75726, 0, 0, 0.77778],
            57367: [0.25142, 0.75726, 0, 0, 0.77778],
            57368: [0.25142, 0.75726, 0, 0, 0.77778],
            57369: [0.25142, 0.75726, 0, 0, 0.77778],
            57370: [0.13597, 0.63597, 0, 0, 0.77778],
            57371: [0.13597, 0.63597, 0, 0, 0.77778],
          },
          'Caligraphic-Regular': {
            48: [0, 0.43056, 0, 0, 0.5],
            49: [0, 0.43056, 0, 0, 0.5],
            50: [0, 0.43056, 0, 0, 0.5],
            51: [0.19444, 0.43056, 0, 0, 0.5],
            52: [0.19444, 0.43056, 0, 0, 0.5],
            53: [0.19444, 0.43056, 0, 0, 0.5],
            54: [0, 0.64444, 0, 0, 0.5],
            55: [0.19444, 0.43056, 0, 0, 0.5],
            56: [0, 0.64444, 0, 0, 0.5],
            57: [0.19444, 0.43056, 0, 0, 0.5],
            65: [0, 0.68333, 0, 0.19445, 0.79847],
            66: [0, 0.68333, 0.03041, 0.13889, 0.65681],
            67: [0, 0.68333, 0.05834, 0.13889, 0.52653],
            68: [0, 0.68333, 0.02778, 0.08334, 0.77139],
            69: [0, 0.68333, 0.08944, 0.11111, 0.52778],
            70: [0, 0.68333, 0.09931, 0.11111, 0.71875],
            71: [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],
            72: [0, 0.68333, 0.00965, 0.11111, 0.84452],
            73: [0, 0.68333, 0.07382, 0, 0.54452],
            74: [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],
            75: [0, 0.68333, 0.01445, 0.05556, 0.76195],
            76: [0, 0.68333, 0, 0.13889, 0.68972],
            77: [0, 0.68333, 0, 0.13889, 1.2009],
            78: [0, 0.68333, 0.14736, 0.08334, 0.82049],
            79: [0, 0.68333, 0.02778, 0.11111, 0.79611],
            80: [0, 0.68333, 0.08222, 0.08334, 0.69556],
            81: [0.09722, 0.68333, 0, 0.11111, 0.81667],
            82: [0, 0.68333, 0, 0.08334, 0.8475],
            83: [0, 0.68333, 0.075, 0.13889, 0.60556],
            84: [0, 0.68333, 0.25417, 0, 0.54464],
            85: [0, 0.68333, 0.09931, 0.08334, 0.62583],
            86: [0, 0.68333, 0.08222, 0, 0.61278],
            87: [0, 0.68333, 0.08222, 0.08334, 0.98778],
            88: [0, 0.68333, 0.14643, 0.13889, 0.7133],
            89: [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],
            90: [0, 0.68333, 0.07944, 0.13889, 0.72473],
          },
          'Fraktur-Regular': {
            33: [0, 0.69141, 0, 0, 0.29574],
            34: [0, 0.69141, 0, 0, 0.21471],
            38: [0, 0.69141, 0, 0, 0.73786],
            39: [0, 0.69141, 0, 0, 0.21201],
            40: [0.24982, 0.74947, 0, 0, 0.38865],
            41: [0.24982, 0.74947, 0, 0, 0.38865],
            42: [0, 0.62119, 0, 0, 0.27764],
            43: [0.08319, 0.58283, 0, 0, 0.75623],
            44: [0, 0.10803, 0, 0, 0.27764],
            45: [0.08319, 0.58283, 0, 0, 0.75623],
            46: [0, 0.10803, 0, 0, 0.27764],
            47: [0.24982, 0.74947, 0, 0, 0.50181],
            48: [0, 0.47534, 0, 0, 0.50181],
            49: [0, 0.47534, 0, 0, 0.50181],
            50: [0, 0.47534, 0, 0, 0.50181],
            51: [0.18906, 0.47534, 0, 0, 0.50181],
            52: [0.18906, 0.47534, 0, 0, 0.50181],
            53: [0.18906, 0.47534, 0, 0, 0.50181],
            54: [0, 0.69141, 0, 0, 0.50181],
            55: [0.18906, 0.47534, 0, 0, 0.50181],
            56: [0, 0.69141, 0, 0, 0.50181],
            57: [0.18906, 0.47534, 0, 0, 0.50181],
            58: [0, 0.47534, 0, 0, 0.21606],
            59: [0.12604, 0.47534, 0, 0, 0.21606],
            61: [-0.13099, 0.36866, 0, 0, 0.75623],
            63: [0, 0.69141, 0, 0, 0.36245],
            65: [0, 0.69141, 0, 0, 0.7176],
            66: [0, 0.69141, 0, 0, 0.88397],
            67: [0, 0.69141, 0, 0, 0.61254],
            68: [0, 0.69141, 0, 0, 0.83158],
            69: [0, 0.69141, 0, 0, 0.66278],
            70: [0.12604, 0.69141, 0, 0, 0.61119],
            71: [0, 0.69141, 0, 0, 0.78539],
            72: [0.06302, 0.69141, 0, 0, 0.7203],
            73: [0, 0.69141, 0, 0, 0.55448],
            74: [0.12604, 0.69141, 0, 0, 0.55231],
            75: [0, 0.69141, 0, 0, 0.66845],
            76: [0, 0.69141, 0, 0, 0.66602],
            77: [0, 0.69141, 0, 0, 1.04953],
            78: [0, 0.69141, 0, 0, 0.83212],
            79: [0, 0.69141, 0, 0, 0.82699],
            80: [0.18906, 0.69141, 0, 0, 0.82753],
            81: [0.03781, 0.69141, 0, 0, 0.82699],
            82: [0, 0.69141, 0, 0, 0.82807],
            83: [0, 0.69141, 0, 0, 0.82861],
            84: [0, 0.69141, 0, 0, 0.66899],
            85: [0, 0.69141, 0, 0, 0.64576],
            86: [0, 0.69141, 0, 0, 0.83131],
            87: [0, 0.69141, 0, 0, 1.04602],
            88: [0, 0.69141, 0, 0, 0.71922],
            89: [0.18906, 0.69141, 0, 0, 0.83293],
            90: [0.12604, 0.69141, 0, 0, 0.60201],
            91: [0.24982, 0.74947, 0, 0, 0.27764],
            93: [0.24982, 0.74947, 0, 0, 0.27764],
            94: [0, 0.69141, 0, 0, 0.49965],
            97: [0, 0.47534, 0, 0, 0.50046],
            98: [0, 0.69141, 0, 0, 0.51315],
            99: [0, 0.47534, 0, 0, 0.38946],
            100: [0, 0.62119, 0, 0, 0.49857],
            101: [0, 0.47534, 0, 0, 0.40053],
            102: [0.18906, 0.69141, 0, 0, 0.32626],
            103: [0.18906, 0.47534, 0, 0, 0.5037],
            104: [0.18906, 0.69141, 0, 0, 0.52126],
            105: [0, 0.69141, 0, 0, 0.27899],
            106: [0, 0.69141, 0, 0, 0.28088],
            107: [0, 0.69141, 0, 0, 0.38946],
            108: [0, 0.69141, 0, 0, 0.27953],
            109: [0, 0.47534, 0, 0, 0.76676],
            110: [0, 0.47534, 0, 0, 0.52666],
            111: [0, 0.47534, 0, 0, 0.48885],
            112: [0.18906, 0.52396, 0, 0, 0.50046],
            113: [0.18906, 0.47534, 0, 0, 0.48912],
            114: [0, 0.47534, 0, 0, 0.38919],
            115: [0, 0.47534, 0, 0, 0.44266],
            116: [0, 0.62119, 0, 0, 0.33301],
            117: [0, 0.47534, 0, 0, 0.5172],
            118: [0, 0.52396, 0, 0, 0.5118],
            119: [0, 0.52396, 0, 0, 0.77351],
            120: [0.18906, 0.47534, 0, 0, 0.38865],
            121: [0.18906, 0.47534, 0, 0, 0.49884],
            122: [0.18906, 0.47534, 0, 0, 0.39054],
            8216: [0, 0.69141, 0, 0, 0.21471],
            8217: [0, 0.69141, 0, 0, 0.21471],
            58112: [0, 0.62119, 0, 0, 0.49749],
            58113: [0, 0.62119, 0, 0, 0.4983],
            58114: [0.18906, 0.69141, 0, 0, 0.33328],
            58115: [0.18906, 0.69141, 0, 0, 0.32923],
            58116: [0.18906, 0.47534, 0, 0, 0.50343],
            58117: [0, 0.69141, 0, 0, 0.33301],
            58118: [0, 0.62119, 0, 0, 0.33409],
            58119: [0, 0.47534, 0, 0, 0.50073],
          },
          'Main-Bold': {
            33: [0, 0.69444, 0, 0, 0.35],
            34: [0, 0.69444, 0, 0, 0.60278],
            35: [0.19444, 0.69444, 0, 0, 0.95833],
            36: [0.05556, 0.75, 0, 0, 0.575],
            37: [0.05556, 0.75, 0, 0, 0.95833],
            38: [0, 0.69444, 0, 0, 0.89444],
            39: [0, 0.69444, 0, 0, 0.31944],
            40: [0.25, 0.75, 0, 0, 0.44722],
            41: [0.25, 0.75, 0, 0, 0.44722],
            42: [0, 0.75, 0, 0, 0.575],
            43: [0.13333, 0.63333, 0, 0, 0.89444],
            44: [0.19444, 0.15556, 0, 0, 0.31944],
            45: [0, 0.44444, 0, 0, 0.38333],
            46: [0, 0.15556, 0, 0, 0.31944],
            47: [0.25, 0.75, 0, 0, 0.575],
            48: [0, 0.64444, 0, 0, 0.575],
            49: [0, 0.64444, 0, 0, 0.575],
            50: [0, 0.64444, 0, 0, 0.575],
            51: [0, 0.64444, 0, 0, 0.575],
            52: [0, 0.64444, 0, 0, 0.575],
            53: [0, 0.64444, 0, 0, 0.575],
            54: [0, 0.64444, 0, 0, 0.575],
            55: [0, 0.64444, 0, 0, 0.575],
            56: [0, 0.64444, 0, 0, 0.575],
            57: [0, 0.64444, 0, 0, 0.575],
            58: [0, 0.44444, 0, 0, 0.31944],
            59: [0.19444, 0.44444, 0, 0, 0.31944],
            60: [0.08556, 0.58556, 0, 0, 0.89444],
            61: [-0.10889, 0.39111, 0, 0, 0.89444],
            62: [0.08556, 0.58556, 0, 0, 0.89444],
            63: [0, 0.69444, 0, 0, 0.54305],
            64: [0, 0.69444, 0, 0, 0.89444],
            65: [0, 0.68611, 0, 0, 0.86944],
            66: [0, 0.68611, 0, 0, 0.81805],
            67: [0, 0.68611, 0, 0, 0.83055],
            68: [0, 0.68611, 0, 0, 0.88194],
            69: [0, 0.68611, 0, 0, 0.75555],
            70: [0, 0.68611, 0, 0, 0.72361],
            71: [0, 0.68611, 0, 0, 0.90416],
            72: [0, 0.68611, 0, 0, 0.9],
            73: [0, 0.68611, 0, 0, 0.43611],
            74: [0, 0.68611, 0, 0, 0.59444],
            75: [0, 0.68611, 0, 0, 0.90138],
            76: [0, 0.68611, 0, 0, 0.69166],
            77: [0, 0.68611, 0, 0, 1.09166],
            78: [0, 0.68611, 0, 0, 0.9],
            79: [0, 0.68611, 0, 0, 0.86388],
            80: [0, 0.68611, 0, 0, 0.78611],
            81: [0.19444, 0.68611, 0, 0, 0.86388],
            82: [0, 0.68611, 0, 0, 0.8625],
            83: [0, 0.68611, 0, 0, 0.63889],
            84: [0, 0.68611, 0, 0, 0.8],
            85: [0, 0.68611, 0, 0, 0.88472],
            86: [0, 0.68611, 0.01597, 0, 0.86944],
            87: [0, 0.68611, 0.01597, 0, 1.18888],
            88: [0, 0.68611, 0, 0, 0.86944],
            89: [0, 0.68611, 0.02875, 0, 0.86944],
            90: [0, 0.68611, 0, 0, 0.70277],
            91: [0.25, 0.75, 0, 0, 0.31944],
            92: [0.25, 0.75, 0, 0, 0.575],
            93: [0.25, 0.75, 0, 0, 0.31944],
            94: [0, 0.69444, 0, 0, 0.575],
            95: [0.31, 0.13444, 0.03194, 0, 0.575],
            97: [0, 0.44444, 0, 0, 0.55902],
            98: [0, 0.69444, 0, 0, 0.63889],
            99: [0, 0.44444, 0, 0, 0.51111],
            100: [0, 0.69444, 0, 0, 0.63889],
            101: [0, 0.44444, 0, 0, 0.52708],
            102: [0, 0.69444, 0.10903, 0, 0.35139],
            103: [0.19444, 0.44444, 0.01597, 0, 0.575],
            104: [0, 0.69444, 0, 0, 0.63889],
            105: [0, 0.69444, 0, 0, 0.31944],
            106: [0.19444, 0.69444, 0, 0, 0.35139],
            107: [0, 0.69444, 0, 0, 0.60694],
            108: [0, 0.69444, 0, 0, 0.31944],
            109: [0, 0.44444, 0, 0, 0.95833],
            110: [0, 0.44444, 0, 0, 0.63889],
            111: [0, 0.44444, 0, 0, 0.575],
            112: [0.19444, 0.44444, 0, 0, 0.63889],
            113: [0.19444, 0.44444, 0, 0, 0.60694],
            114: [0, 0.44444, 0, 0, 0.47361],
            115: [0, 0.44444, 0, 0, 0.45361],
            116: [0, 0.63492, 0, 0, 0.44722],
            117: [0, 0.44444, 0, 0, 0.63889],
            118: [0, 0.44444, 0.01597, 0, 0.60694],
            119: [0, 0.44444, 0.01597, 0, 0.83055],
            120: [0, 0.44444, 0, 0, 0.60694],
            121: [0.19444, 0.44444, 0.01597, 0, 0.60694],
            122: [0, 0.44444, 0, 0, 0.51111],
            123: [0.25, 0.75, 0, 0, 0.575],
            124: [0.25, 0.75, 0, 0, 0.31944],
            125: [0.25, 0.75, 0, 0, 0.575],
            126: [0.35, 0.34444, 0, 0, 0.575],
            168: [0, 0.69444, 0, 0, 0.575],
            172: [0, 0.44444, 0, 0, 0.76666],
            176: [0, 0.69444, 0, 0, 0.86944],
            177: [0.13333, 0.63333, 0, 0, 0.89444],
            184: [0.17014, 0, 0, 0, 0.51111],
            198: [0, 0.68611, 0, 0, 1.04166],
            215: [0.13333, 0.63333, 0, 0, 0.89444],
            216: [0.04861, 0.73472, 0, 0, 0.89444],
            223: [0, 0.69444, 0, 0, 0.59722],
            230: [0, 0.44444, 0, 0, 0.83055],
            247: [0.13333, 0.63333, 0, 0, 0.89444],
            248: [0.09722, 0.54167, 0, 0, 0.575],
            305: [0, 0.44444, 0, 0, 0.31944],
            338: [0, 0.68611, 0, 0, 1.16944],
            339: [0, 0.44444, 0, 0, 0.89444],
            567: [0.19444, 0.44444, 0, 0, 0.35139],
            710: [0, 0.69444, 0, 0, 0.575],
            711: [0, 0.63194, 0, 0, 0.575],
            713: [0, 0.59611, 0, 0, 0.575],
            714: [0, 0.69444, 0, 0, 0.575],
            715: [0, 0.69444, 0, 0, 0.575],
            728: [0, 0.69444, 0, 0, 0.575],
            729: [0, 0.69444, 0, 0, 0.31944],
            730: [0, 0.69444, 0, 0, 0.86944],
            732: [0, 0.69444, 0, 0, 0.575],
            733: [0, 0.69444, 0, 0, 0.575],
            824: [0.19444, 0.69444, 0, 0, 0],
            915: [0, 0.68611, 0, 0, 0.69166],
            916: [0, 0.68611, 0, 0, 0.95833],
            920: [0, 0.68611, 0, 0, 0.89444],
            923: [0, 0.68611, 0, 0, 0.80555],
            926: [0, 0.68611, 0, 0, 0.76666],
            928: [0, 0.68611, 0, 0, 0.9],
            931: [0, 0.68611, 0, 0, 0.83055],
            933: [0, 0.68611, 0, 0, 0.89444],
            934: [0, 0.68611, 0, 0, 0.83055],
            936: [0, 0.68611, 0, 0, 0.89444],
            937: [0, 0.68611, 0, 0, 0.83055],
            8211: [0, 0.44444, 0.03194, 0, 0.575],
            8212: [0, 0.44444, 0.03194, 0, 1.14999],
            8216: [0, 0.69444, 0, 0, 0.31944],
            8217: [0, 0.69444, 0, 0, 0.31944],
            8220: [0, 0.69444, 0, 0, 0.60278],
            8221: [0, 0.69444, 0, 0, 0.60278],
            8224: [0.19444, 0.69444, 0, 0, 0.51111],
            8225: [0.19444, 0.69444, 0, 0, 0.51111],
            8242: [0, 0.55556, 0, 0, 0.34444],
            8407: [0, 0.72444, 0.15486, 0, 0.575],
            8463: [0, 0.69444, 0, 0, 0.66759],
            8465: [0, 0.69444, 0, 0, 0.83055],
            8467: [0, 0.69444, 0, 0, 0.47361],
            8472: [0.19444, 0.44444, 0, 0, 0.74027],
            8476: [0, 0.69444, 0, 0, 0.83055],
            8501: [0, 0.69444, 0, 0, 0.70277],
            8592: [-0.10889, 0.39111, 0, 0, 1.14999],
            8593: [0.19444, 0.69444, 0, 0, 0.575],
            8594: [-0.10889, 0.39111, 0, 0, 1.14999],
            8595: [0.19444, 0.69444, 0, 0, 0.575],
            8596: [-0.10889, 0.39111, 0, 0, 1.14999],
            8597: [0.25, 0.75, 0, 0, 0.575],
            8598: [0.19444, 0.69444, 0, 0, 1.14999],
            8599: [0.19444, 0.69444, 0, 0, 1.14999],
            8600: [0.19444, 0.69444, 0, 0, 1.14999],
            8601: [0.19444, 0.69444, 0, 0, 1.14999],
            8636: [-0.10889, 0.39111, 0, 0, 1.14999],
            8637: [-0.10889, 0.39111, 0, 0, 1.14999],
            8640: [-0.10889, 0.39111, 0, 0, 1.14999],
            8641: [-0.10889, 0.39111, 0, 0, 1.14999],
            8656: [-0.10889, 0.39111, 0, 0, 1.14999],
            8657: [0.19444, 0.69444, 0, 0, 0.70277],
            8658: [-0.10889, 0.39111, 0, 0, 1.14999],
            8659: [0.19444, 0.69444, 0, 0, 0.70277],
            8660: [-0.10889, 0.39111, 0, 0, 1.14999],
            8661: [0.25, 0.75, 0, 0, 0.70277],
            8704: [0, 0.69444, 0, 0, 0.63889],
            8706: [0, 0.69444, 0.06389, 0, 0.62847],
            8707: [0, 0.69444, 0, 0, 0.63889],
            8709: [0.05556, 0.75, 0, 0, 0.575],
            8711: [0, 0.68611, 0, 0, 0.95833],
            8712: [0.08556, 0.58556, 0, 0, 0.76666],
            8715: [0.08556, 0.58556, 0, 0, 0.76666],
            8722: [0.13333, 0.63333, 0, 0, 0.89444],
            8723: [0.13333, 0.63333, 0, 0, 0.89444],
            8725: [0.25, 0.75, 0, 0, 0.575],
            8726: [0.25, 0.75, 0, 0, 0.575],
            8727: [-0.02778, 0.47222, 0, 0, 0.575],
            8728: [-0.02639, 0.47361, 0, 0, 0.575],
            8729: [-0.02639, 0.47361, 0, 0, 0.575],
            8730: [0.18, 0.82, 0, 0, 0.95833],
            8733: [0, 0.44444, 0, 0, 0.89444],
            8734: [0, 0.44444, 0, 0, 1.14999],
            8736: [0, 0.69224, 0, 0, 0.72222],
            8739: [0.25, 0.75, 0, 0, 0.31944],
            8741: [0.25, 0.75, 0, 0, 0.575],
            8743: [0, 0.55556, 0, 0, 0.76666],
            8744: [0, 0.55556, 0, 0, 0.76666],
            8745: [0, 0.55556, 0, 0, 0.76666],
            8746: [0, 0.55556, 0, 0, 0.76666],
            8747: [0.19444, 0.69444, 0.12778, 0, 0.56875],
            8764: [-0.10889, 0.39111, 0, 0, 0.89444],
            8768: [0.19444, 0.69444, 0, 0, 0.31944],
            8771: [0.00222, 0.50222, 0, 0, 0.89444],
            8776: [0.02444, 0.52444, 0, 0, 0.89444],
            8781: [0.00222, 0.50222, 0, 0, 0.89444],
            8801: [0.00222, 0.50222, 0, 0, 0.89444],
            8804: [0.19667, 0.69667, 0, 0, 0.89444],
            8805: [0.19667, 0.69667, 0, 0, 0.89444],
            8810: [0.08556, 0.58556, 0, 0, 1.14999],
            8811: [0.08556, 0.58556, 0, 0, 1.14999],
            8826: [0.08556, 0.58556, 0, 0, 0.89444],
            8827: [0.08556, 0.58556, 0, 0, 0.89444],
            8834: [0.08556, 0.58556, 0, 0, 0.89444],
            8835: [0.08556, 0.58556, 0, 0, 0.89444],
            8838: [0.19667, 0.69667, 0, 0, 0.89444],
            8839: [0.19667, 0.69667, 0, 0, 0.89444],
            8846: [0, 0.55556, 0, 0, 0.76666],
            8849: [0.19667, 0.69667, 0, 0, 0.89444],
            8850: [0.19667, 0.69667, 0, 0, 0.89444],
            8851: [0, 0.55556, 0, 0, 0.76666],
            8852: [0, 0.55556, 0, 0, 0.76666],
            8853: [0.13333, 0.63333, 0, 0, 0.89444],
            8854: [0.13333, 0.63333, 0, 0, 0.89444],
            8855: [0.13333, 0.63333, 0, 0, 0.89444],
            8856: [0.13333, 0.63333, 0, 0, 0.89444],
            8857: [0.13333, 0.63333, 0, 0, 0.89444],
            8866: [0, 0.69444, 0, 0, 0.70277],
            8867: [0, 0.69444, 0, 0, 0.70277],
            8868: [0, 0.69444, 0, 0, 0.89444],
            8869: [0, 0.69444, 0, 0, 0.89444],
            8900: [-0.02639, 0.47361, 0, 0, 0.575],
            8901: [-0.02639, 0.47361, 0, 0, 0.31944],
            8902: [-0.02778, 0.47222, 0, 0, 0.575],
            8968: [0.25, 0.75, 0, 0, 0.51111],
            8969: [0.25, 0.75, 0, 0, 0.51111],
            8970: [0.25, 0.75, 0, 0, 0.51111],
            8971: [0.25, 0.75, 0, 0, 0.51111],
            8994: [-0.13889, 0.36111, 0, 0, 1.14999],
            8995: [-0.13889, 0.36111, 0, 0, 1.14999],
            9651: [0.19444, 0.69444, 0, 0, 1.02222],
            9657: [-0.02778, 0.47222, 0, 0, 0.575],
            9661: [0.19444, 0.69444, 0, 0, 1.02222],
            9667: [-0.02778, 0.47222, 0, 0, 0.575],
            9711: [0.19444, 0.69444, 0, 0, 1.14999],
            9824: [0.12963, 0.69444, 0, 0, 0.89444],
            9825: [0.12963, 0.69444, 0, 0, 0.89444],
            9826: [0.12963, 0.69444, 0, 0, 0.89444],
            9827: [0.12963, 0.69444, 0, 0, 0.89444],
            9837: [0, 0.75, 0, 0, 0.44722],
            9838: [0.19444, 0.69444, 0, 0, 0.44722],
            9839: [0.19444, 0.69444, 0, 0, 0.44722],
            10216: [0.25, 0.75, 0, 0, 0.44722],
            10217: [0.25, 0.75, 0, 0, 0.44722],
            10815: [0, 0.68611, 0, 0, 0.9],
            10927: [0.19667, 0.69667, 0, 0, 0.89444],
            10928: [0.19667, 0.69667, 0, 0, 0.89444],
          },
          'Main-BoldItalic': {
            33: [0, 0.69444, 0.11417, 0, 0.38611],
            34: [0, 0.69444, 0.07939, 0, 0.62055],
            35: [0.19444, 0.69444, 0.06833, 0, 0.94444],
            37: [0.05556, 0.75, 0.12861, 0, 0.94444],
            38: [0, 0.69444, 0.08528, 0, 0.88555],
            39: [0, 0.69444, 0.12945, 0, 0.35555],
            40: [0.25, 0.75, 0.15806, 0, 0.47333],
            41: [0.25, 0.75, 0.03306, 0, 0.47333],
            42: [0, 0.75, 0.14333, 0, 0.59111],
            43: [0.10333, 0.60333, 0.03306, 0, 0.88555],
            44: [0.19444, 0.14722, 0, 0, 0.35555],
            45: [0, 0.44444, 0.02611, 0, 0.41444],
            46: [0, 0.14722, 0, 0, 0.35555],
            47: [0.25, 0.75, 0.15806, 0, 0.59111],
            48: [0, 0.64444, 0.13167, 0, 0.59111],
            49: [0, 0.64444, 0.13167, 0, 0.59111],
            50: [0, 0.64444, 0.13167, 0, 0.59111],
            51: [0, 0.64444, 0.13167, 0, 0.59111],
            52: [0.19444, 0.64444, 0.13167, 0, 0.59111],
            53: [0, 0.64444, 0.13167, 0, 0.59111],
            54: [0, 0.64444, 0.13167, 0, 0.59111],
            55: [0.19444, 0.64444, 0.13167, 0, 0.59111],
            56: [0, 0.64444, 0.13167, 0, 0.59111],
            57: [0, 0.64444, 0.13167, 0, 0.59111],
            58: [0, 0.44444, 0.06695, 0, 0.35555],
            59: [0.19444, 0.44444, 0.06695, 0, 0.35555],
            61: [-0.10889, 0.39111, 0.06833, 0, 0.88555],
            63: [0, 0.69444, 0.11472, 0, 0.59111],
            64: [0, 0.69444, 0.09208, 0, 0.88555],
            65: [0, 0.68611, 0, 0, 0.86555],
            66: [0, 0.68611, 0.0992, 0, 0.81666],
            67: [0, 0.68611, 0.14208, 0, 0.82666],
            68: [0, 0.68611, 0.09062, 0, 0.87555],
            69: [0, 0.68611, 0.11431, 0, 0.75666],
            70: [0, 0.68611, 0.12903, 0, 0.72722],
            71: [0, 0.68611, 0.07347, 0, 0.89527],
            72: [0, 0.68611, 0.17208, 0, 0.8961],
            73: [0, 0.68611, 0.15681, 0, 0.47166],
            74: [0, 0.68611, 0.145, 0, 0.61055],
            75: [0, 0.68611, 0.14208, 0, 0.89499],
            76: [0, 0.68611, 0, 0, 0.69777],
            77: [0, 0.68611, 0.17208, 0, 1.07277],
            78: [0, 0.68611, 0.17208, 0, 0.8961],
            79: [0, 0.68611, 0.09062, 0, 0.85499],
            80: [0, 0.68611, 0.0992, 0, 0.78721],
            81: [0.19444, 0.68611, 0.09062, 0, 0.85499],
            82: [0, 0.68611, 0.02559, 0, 0.85944],
            83: [0, 0.68611, 0.11264, 0, 0.64999],
            84: [0, 0.68611, 0.12903, 0, 0.7961],
            85: [0, 0.68611, 0.17208, 0, 0.88083],
            86: [0, 0.68611, 0.18625, 0, 0.86555],
            87: [0, 0.68611, 0.18625, 0, 1.15999],
            88: [0, 0.68611, 0.15681, 0, 0.86555],
            89: [0, 0.68611, 0.19803, 0, 0.86555],
            90: [0, 0.68611, 0.14208, 0, 0.70888],
            91: [0.25, 0.75, 0.1875, 0, 0.35611],
            93: [0.25, 0.75, 0.09972, 0, 0.35611],
            94: [0, 0.69444, 0.06709, 0, 0.59111],
            95: [0.31, 0.13444, 0.09811, 0, 0.59111],
            97: [0, 0.44444, 0.09426, 0, 0.59111],
            98: [0, 0.69444, 0.07861, 0, 0.53222],
            99: [0, 0.44444, 0.05222, 0, 0.53222],
            100: [0, 0.69444, 0.10861, 0, 0.59111],
            101: [0, 0.44444, 0.085, 0, 0.53222],
            102: [0.19444, 0.69444, 0.21778, 0, 0.4],
            103: [0.19444, 0.44444, 0.105, 0, 0.53222],
            104: [0, 0.69444, 0.09426, 0, 0.59111],
            105: [0, 0.69326, 0.11387, 0, 0.35555],
            106: [0.19444, 0.69326, 0.1672, 0, 0.35555],
            107: [0, 0.69444, 0.11111, 0, 0.53222],
            108: [0, 0.69444, 0.10861, 0, 0.29666],
            109: [0, 0.44444, 0.09426, 0, 0.94444],
            110: [0, 0.44444, 0.09426, 0, 0.64999],
            111: [0, 0.44444, 0.07861, 0, 0.59111],
            112: [0.19444, 0.44444, 0.07861, 0, 0.59111],
            113: [0.19444, 0.44444, 0.105, 0, 0.53222],
            114: [0, 0.44444, 0.11111, 0, 0.50167],
            115: [0, 0.44444, 0.08167, 0, 0.48694],
            116: [0, 0.63492, 0.09639, 0, 0.385],
            117: [0, 0.44444, 0.09426, 0, 0.62055],
            118: [0, 0.44444, 0.11111, 0, 0.53222],
            119: [0, 0.44444, 0.11111, 0, 0.76777],
            120: [0, 0.44444, 0.12583, 0, 0.56055],
            121: [0.19444, 0.44444, 0.105, 0, 0.56166],
            122: [0, 0.44444, 0.13889, 0, 0.49055],
            126: [0.35, 0.34444, 0.11472, 0, 0.59111],
            163: [0, 0.69444, 0, 0, 0.86853],
            168: [0, 0.69444, 0.11473, 0, 0.59111],
            176: [0, 0.69444, 0, 0, 0.94888],
            184: [0.17014, 0, 0, 0, 0.53222],
            198: [0, 0.68611, 0.11431, 0, 1.02277],
            216: [0.04861, 0.73472, 0.09062, 0, 0.88555],
            223: [0.19444, 0.69444, 0.09736, 0, 0.665],
            230: [0, 0.44444, 0.085, 0, 0.82666],
            248: [0.09722, 0.54167, 0.09458, 0, 0.59111],
            305: [0, 0.44444, 0.09426, 0, 0.35555],
            338: [0, 0.68611, 0.11431, 0, 1.14054],
            339: [0, 0.44444, 0.085, 0, 0.82666],
            567: [0.19444, 0.44444, 0.04611, 0, 0.385],
            710: [0, 0.69444, 0.06709, 0, 0.59111],
            711: [0, 0.63194, 0.08271, 0, 0.59111],
            713: [0, 0.59444, 0.10444, 0, 0.59111],
            714: [0, 0.69444, 0.08528, 0, 0.59111],
            715: [0, 0.69444, 0, 0, 0.59111],
            728: [0, 0.69444, 0.10333, 0, 0.59111],
            729: [0, 0.69444, 0.12945, 0, 0.35555],
            730: [0, 0.69444, 0, 0, 0.94888],
            732: [0, 0.69444, 0.11472, 0, 0.59111],
            733: [0, 0.69444, 0.11472, 0, 0.59111],
            915: [0, 0.68611, 0.12903, 0, 0.69777],
            916: [0, 0.68611, 0, 0, 0.94444],
            920: [0, 0.68611, 0.09062, 0, 0.88555],
            923: [0, 0.68611, 0, 0, 0.80666],
            926: [0, 0.68611, 0.15092, 0, 0.76777],
            928: [0, 0.68611, 0.17208, 0, 0.8961],
            931: [0, 0.68611, 0.11431, 0, 0.82666],
            933: [0, 0.68611, 0.10778, 0, 0.88555],
            934: [0, 0.68611, 0.05632, 0, 0.82666],
            936: [0, 0.68611, 0.10778, 0, 0.88555],
            937: [0, 0.68611, 0.0992, 0, 0.82666],
            8211: [0, 0.44444, 0.09811, 0, 0.59111],
            8212: [0, 0.44444, 0.09811, 0, 1.18221],
            8216: [0, 0.69444, 0.12945, 0, 0.35555],
            8217: [0, 0.69444, 0.12945, 0, 0.35555],
            8220: [0, 0.69444, 0.16772, 0, 0.62055],
            8221: [0, 0.69444, 0.07939, 0, 0.62055],
          },
          'Main-Italic': {
            33: [0, 0.69444, 0.12417, 0, 0.30667],
            34: [0, 0.69444, 0.06961, 0, 0.51444],
            35: [0.19444, 0.69444, 0.06616, 0, 0.81777],
            37: [0.05556, 0.75, 0.13639, 0, 0.81777],
            38: [0, 0.69444, 0.09694, 0, 0.76666],
            39: [0, 0.69444, 0.12417, 0, 0.30667],
            40: [0.25, 0.75, 0.16194, 0, 0.40889],
            41: [0.25, 0.75, 0.03694, 0, 0.40889],
            42: [0, 0.75, 0.14917, 0, 0.51111],
            43: [0.05667, 0.56167, 0.03694, 0, 0.76666],
            44: [0.19444, 0.10556, 0, 0, 0.30667],
            45: [0, 0.43056, 0.02826, 0, 0.35778],
            46: [0, 0.10556, 0, 0, 0.30667],
            47: [0.25, 0.75, 0.16194, 0, 0.51111],
            48: [0, 0.64444, 0.13556, 0, 0.51111],
            49: [0, 0.64444, 0.13556, 0, 0.51111],
            50: [0, 0.64444, 0.13556, 0, 0.51111],
            51: [0, 0.64444, 0.13556, 0, 0.51111],
            52: [0.19444, 0.64444, 0.13556, 0, 0.51111],
            53: [0, 0.64444, 0.13556, 0, 0.51111],
            54: [0, 0.64444, 0.13556, 0, 0.51111],
            55: [0.19444, 0.64444, 0.13556, 0, 0.51111],
            56: [0, 0.64444, 0.13556, 0, 0.51111],
            57: [0, 0.64444, 0.13556, 0, 0.51111],
            58: [0, 0.43056, 0.0582, 0, 0.30667],
            59: [0.19444, 0.43056, 0.0582, 0, 0.30667],
            61: [-0.13313, 0.36687, 0.06616, 0, 0.76666],
            63: [0, 0.69444, 0.1225, 0, 0.51111],
            64: [0, 0.69444, 0.09597, 0, 0.76666],
            65: [0, 0.68333, 0, 0, 0.74333],
            66: [0, 0.68333, 0.10257, 0, 0.70389],
            67: [0, 0.68333, 0.14528, 0, 0.71555],
            68: [0, 0.68333, 0.09403, 0, 0.755],
            69: [0, 0.68333, 0.12028, 0, 0.67833],
            70: [0, 0.68333, 0.13305, 0, 0.65277],
            71: [0, 0.68333, 0.08722, 0, 0.77361],
            72: [0, 0.68333, 0.16389, 0, 0.74333],
            73: [0, 0.68333, 0.15806, 0, 0.38555],
            74: [0, 0.68333, 0.14028, 0, 0.525],
            75: [0, 0.68333, 0.14528, 0, 0.76888],
            76: [0, 0.68333, 0, 0, 0.62722],
            77: [0, 0.68333, 0.16389, 0, 0.89666],
            78: [0, 0.68333, 0.16389, 0, 0.74333],
            79: [0, 0.68333, 0.09403, 0, 0.76666],
            80: [0, 0.68333, 0.10257, 0, 0.67833],
            81: [0.19444, 0.68333, 0.09403, 0, 0.76666],
            82: [0, 0.68333, 0.03868, 0, 0.72944],
            83: [0, 0.68333, 0.11972, 0, 0.56222],
            84: [0, 0.68333, 0.13305, 0, 0.71555],
            85: [0, 0.68333, 0.16389, 0, 0.74333],
            86: [0, 0.68333, 0.18361, 0, 0.74333],
            87: [0, 0.68333, 0.18361, 0, 0.99888],
            88: [0, 0.68333, 0.15806, 0, 0.74333],
            89: [0, 0.68333, 0.19383, 0, 0.74333],
            90: [0, 0.68333, 0.14528, 0, 0.61333],
            91: [0.25, 0.75, 0.1875, 0, 0.30667],
            93: [0.25, 0.75, 0.10528, 0, 0.30667],
            94: [0, 0.69444, 0.06646, 0, 0.51111],
            95: [0.31, 0.12056, 0.09208, 0, 0.51111],
            97: [0, 0.43056, 0.07671, 0, 0.51111],
            98: [0, 0.69444, 0.06312, 0, 0.46],
            99: [0, 0.43056, 0.05653, 0, 0.46],
            100: [0, 0.69444, 0.10333, 0, 0.51111],
            101: [0, 0.43056, 0.07514, 0, 0.46],
            102: [0.19444, 0.69444, 0.21194, 0, 0.30667],
            103: [0.19444, 0.43056, 0.08847, 0, 0.46],
            104: [0, 0.69444, 0.07671, 0, 0.51111],
            105: [0, 0.65536, 0.1019, 0, 0.30667],
            106: [0.19444, 0.65536, 0.14467, 0, 0.30667],
            107: [0, 0.69444, 0.10764, 0, 0.46],
            108: [0, 0.69444, 0.10333, 0, 0.25555],
            109: [0, 0.43056, 0.07671, 0, 0.81777],
            110: [0, 0.43056, 0.07671, 0, 0.56222],
            111: [0, 0.43056, 0.06312, 0, 0.51111],
            112: [0.19444, 0.43056, 0.06312, 0, 0.51111],
            113: [0.19444, 0.43056, 0.08847, 0, 0.46],
            114: [0, 0.43056, 0.10764, 0, 0.42166],
            115: [0, 0.43056, 0.08208, 0, 0.40889],
            116: [0, 0.61508, 0.09486, 0, 0.33222],
            117: [0, 0.43056, 0.07671, 0, 0.53666],
            118: [0, 0.43056, 0.10764, 0, 0.46],
            119: [0, 0.43056, 0.10764, 0, 0.66444],
            120: [0, 0.43056, 0.12042, 0, 0.46389],
            121: [0.19444, 0.43056, 0.08847, 0, 0.48555],
            122: [0, 0.43056, 0.12292, 0, 0.40889],
            126: [0.35, 0.31786, 0.11585, 0, 0.51111],
            163: [0, 0.69444, 0, 0, 0.76909],
            168: [0, 0.66786, 0.10474, 0, 0.51111],
            176: [0, 0.69444, 0, 0, 0.83129],
            184: [0.17014, 0, 0, 0, 0.46],
            198: [0, 0.68333, 0.12028, 0, 0.88277],
            216: [0.04861, 0.73194, 0.09403, 0, 0.76666],
            223: [0.19444, 0.69444, 0.10514, 0, 0.53666],
            230: [0, 0.43056, 0.07514, 0, 0.71555],
            248: [0.09722, 0.52778, 0.09194, 0, 0.51111],
            305: [0, 0.43056, 0, 0.02778, 0.32246],
            338: [0, 0.68333, 0.12028, 0, 0.98499],
            339: [0, 0.43056, 0.07514, 0, 0.71555],
            567: [0.19444, 0.43056, 0, 0.08334, 0.38403],
            710: [0, 0.69444, 0.06646, 0, 0.51111],
            711: [0, 0.62847, 0.08295, 0, 0.51111],
            713: [0, 0.56167, 0.10333, 0, 0.51111],
            714: [0, 0.69444, 0.09694, 0, 0.51111],
            715: [0, 0.69444, 0, 0, 0.51111],
            728: [0, 0.69444, 0.10806, 0, 0.51111],
            729: [0, 0.66786, 0.11752, 0, 0.30667],
            730: [0, 0.69444, 0, 0, 0.83129],
            732: [0, 0.66786, 0.11585, 0, 0.51111],
            733: [0, 0.69444, 0.1225, 0, 0.51111],
            915: [0, 0.68333, 0.13305, 0, 0.62722],
            916: [0, 0.68333, 0, 0, 0.81777],
            920: [0, 0.68333, 0.09403, 0, 0.76666],
            923: [0, 0.68333, 0, 0, 0.69222],
            926: [0, 0.68333, 0.15294, 0, 0.66444],
            928: [0, 0.68333, 0.16389, 0, 0.74333],
            931: [0, 0.68333, 0.12028, 0, 0.71555],
            933: [0, 0.68333, 0.11111, 0, 0.76666],
            934: [0, 0.68333, 0.05986, 0, 0.71555],
            936: [0, 0.68333, 0.11111, 0, 0.76666],
            937: [0, 0.68333, 0.10257, 0, 0.71555],
            8211: [0, 0.43056, 0.09208, 0, 0.51111],
            8212: [0, 0.43056, 0.09208, 0, 1.02222],
            8216: [0, 0.69444, 0.12417, 0, 0.30667],
            8217: [0, 0.69444, 0.12417, 0, 0.30667],
            8220: [0, 0.69444, 0.1685, 0, 0.51444],
            8221: [0, 0.69444, 0.06961, 0, 0.51444],
            8463: [0, 0.68889, 0, 0, 0.54028],
          },
          'Main-Regular': {
            32: [0, 0, 0, 0, 0.25],
            33: [0, 0.69444, 0, 0, 0.27778],
            34: [0, 0.69444, 0, 0, 0.5],
            35: [0.19444, 0.69444, 0, 0, 0.83334],
            36: [0.05556, 0.75, 0, 0, 0.5],
            37: [0.05556, 0.75, 0, 0, 0.83334],
            38: [0, 0.69444, 0, 0, 0.77778],
            39: [0, 0.69444, 0, 0, 0.27778],
            40: [0.25, 0.75, 0, 0, 0.38889],
            41: [0.25, 0.75, 0, 0, 0.38889],
            42: [0, 0.75, 0, 0, 0.5],
            43: [0.08333, 0.58333, 0, 0, 0.77778],
            44: [0.19444, 0.10556, 0, 0, 0.27778],
            45: [0, 0.43056, 0, 0, 0.33333],
            46: [0, 0.10556, 0, 0, 0.27778],
            47: [0.25, 0.75, 0, 0, 0.5],
            48: [0, 0.64444, 0, 0, 0.5],
            49: [0, 0.64444, 0, 0, 0.5],
            50: [0, 0.64444, 0, 0, 0.5],
            51: [0, 0.64444, 0, 0, 0.5],
            52: [0, 0.64444, 0, 0, 0.5],
            53: [0, 0.64444, 0, 0, 0.5],
            54: [0, 0.64444, 0, 0, 0.5],
            55: [0, 0.64444, 0, 0, 0.5],
            56: [0, 0.64444, 0, 0, 0.5],
            57: [0, 0.64444, 0, 0, 0.5],
            58: [0, 0.43056, 0, 0, 0.27778],
            59: [0.19444, 0.43056, 0, 0, 0.27778],
            60: [0.0391, 0.5391, 0, 0, 0.77778],
            61: [-0.13313, 0.36687, 0, 0, 0.77778],
            62: [0.0391, 0.5391, 0, 0, 0.77778],
            63: [0, 0.69444, 0, 0, 0.47222],
            64: [0, 0.69444, 0, 0, 0.77778],
            65: [0, 0.68333, 0, 0, 0.75],
            66: [0, 0.68333, 0, 0, 0.70834],
            67: [0, 0.68333, 0, 0, 0.72222],
            68: [0, 0.68333, 0, 0, 0.76389],
            69: [0, 0.68333, 0, 0, 0.68056],
            70: [0, 0.68333, 0, 0, 0.65278],
            71: [0, 0.68333, 0, 0, 0.78472],
            72: [0, 0.68333, 0, 0, 0.75],
            73: [0, 0.68333, 0, 0, 0.36111],
            74: [0, 0.68333, 0, 0, 0.51389],
            75: [0, 0.68333, 0, 0, 0.77778],
            76: [0, 0.68333, 0, 0, 0.625],
            77: [0, 0.68333, 0, 0, 0.91667],
            78: [0, 0.68333, 0, 0, 0.75],
            79: [0, 0.68333, 0, 0, 0.77778],
            80: [0, 0.68333, 0, 0, 0.68056],
            81: [0.19444, 0.68333, 0, 0, 0.77778],
            82: [0, 0.68333, 0, 0, 0.73611],
            83: [0, 0.68333, 0, 0, 0.55556],
            84: [0, 0.68333, 0, 0, 0.72222],
            85: [0, 0.68333, 0, 0, 0.75],
            86: [0, 0.68333, 0.01389, 0, 0.75],
            87: [0, 0.68333, 0.01389, 0, 1.02778],
            88: [0, 0.68333, 0, 0, 0.75],
            89: [0, 0.68333, 0.025, 0, 0.75],
            90: [0, 0.68333, 0, 0, 0.61111],
            91: [0.25, 0.75, 0, 0, 0.27778],
            92: [0.25, 0.75, 0, 0, 0.5],
            93: [0.25, 0.75, 0, 0, 0.27778],
            94: [0, 0.69444, 0, 0, 0.5],
            95: [0.31, 0.12056, 0.02778, 0, 0.5],
            97: [0, 0.43056, 0, 0, 0.5],
            98: [0, 0.69444, 0, 0, 0.55556],
            99: [0, 0.43056, 0, 0, 0.44445],
            100: [0, 0.69444, 0, 0, 0.55556],
            101: [0, 0.43056, 0, 0, 0.44445],
            102: [0, 0.69444, 0.07778, 0, 0.30556],
            103: [0.19444, 0.43056, 0.01389, 0, 0.5],
            104: [0, 0.69444, 0, 0, 0.55556],
            105: [0, 0.66786, 0, 0, 0.27778],
            106: [0.19444, 0.66786, 0, 0, 0.30556],
            107: [0, 0.69444, 0, 0, 0.52778],
            108: [0, 0.69444, 0, 0, 0.27778],
            109: [0, 0.43056, 0, 0, 0.83334],
            110: [0, 0.43056, 0, 0, 0.55556],
            111: [0, 0.43056, 0, 0, 0.5],
            112: [0.19444, 0.43056, 0, 0, 0.55556],
            113: [0.19444, 0.43056, 0, 0, 0.52778],
            114: [0, 0.43056, 0, 0, 0.39167],
            115: [0, 0.43056, 0, 0, 0.39445],
            116: [0, 0.61508, 0, 0, 0.38889],
            117: [0, 0.43056, 0, 0, 0.55556],
            118: [0, 0.43056, 0.01389, 0, 0.52778],
            119: [0, 0.43056, 0.01389, 0, 0.72222],
            120: [0, 0.43056, 0, 0, 0.52778],
            121: [0.19444, 0.43056, 0.01389, 0, 0.52778],
            122: [0, 0.43056, 0, 0, 0.44445],
            123: [0.25, 0.75, 0, 0, 0.5],
            124: [0.25, 0.75, 0, 0, 0.27778],
            125: [0.25, 0.75, 0, 0, 0.5],
            126: [0.35, 0.31786, 0, 0, 0.5],
            160: [0, 0, 0, 0, 0.25],
            161: [0, 0.69444, 0, 0, 0.27778], // ¡ upside-down ! - metrics copied from 33
            167: [0.19444, 0.69444, 0, 0, 0.44445],
            168: [0, 0.66786, 0, 0, 0.5],
            172: [0, 0.43056, 0, 0, 0.66667],
            176: [0, 0.69444, 0, 0, 0.75],
            177: [0.08333, 0.58333, 0, 0, 0.77778],
            182: [0.19444, 0.69444, 0, 0, 0.61111],
            184: [0.17014, 0, 0, 0, 0.44445],
            191: [0, 0.69444, 0, 0, 0.47222],
            198: [0, 0.68333, 0, 0, 0.90278],
            215: [0.08333, 0.58333, 0, 0, 0.77778],
            216: [0.04861, 0.73194, 0, 0, 0.77778],
            223: [0, 0.69444, 0, 0, 0.5],
            230: [0, 0.43056, 0, 0, 0.72222],
            247: [0.08333, 0.58333, 0, 0, 0.77778],
            248: [0.09722, 0.52778, 0, 0, 0.5],
            305: [0, 0.43056, 0, 0, 0.27778],
            338: [0, 0.68333, 0, 0, 1.01389],
            339: [0, 0.43056, 0, 0, 0.77778],
            567: [0.19444, 0.43056, 0, 0, 0.30556],
            710: [0, 0.69444, 0, 0, 0.5],
            711: [0, 0.62847, 0, 0, 0.5],
            713: [0, 0.56778, 0, 0, 0.5],
            714: [0, 0.69444, 0, 0, 0.5],
            715: [0, 0.69444, 0, 0, 0.5],
            728: [0, 0.69444, 0, 0, 0.5],
            729: [0, 0.66786, 0, 0, 0.27778],
            730: [0, 0.69444, 0, 0, 0.75],
            732: [0, 0.66786, 0, 0, 0.5],
            733: [0, 0.69444, 0, 0, 0.5],
            824: [0.19444, 0.69444, 0, 0, 0],
            915: [0, 0.68333, 0, 0, 0.625],
            916: [0, 0.68333, 0, 0, 0.83334],
            920: [0, 0.68333, 0, 0, 0.77778],
            923: [0, 0.68333, 0, 0, 0.69445],
            926: [0, 0.68333, 0, 0, 0.66667],
            928: [0, 0.68333, 0, 0, 0.75],
            931: [0, 0.68333, 0, 0, 0.72222],
            933: [0, 0.68333, 0, 0, 0.77778],
            934: [0, 0.68333, 0, 0, 0.72222],
            936: [0, 0.68333, 0, 0, 0.77778],
            937: [0, 0.68333, 0, 0, 0.72222],
            8211: [0, 0.43056, 0.02778, 0, 0.5],
            8212: [0, 0.43056, 0.02778, 0, 1],
            8216: [0, 0.69444, 0, 0, 0.27778],
            8217: [0, 0.69444, 0, 0, 0.27778],
            8220: [0, 0.69444, 0, 0, 0.5],
            8221: [0, 0.69444, 0, 0, 0.5],
            8224: [0.19444, 0.69444, 0, 0, 0.44445],
            8225: [0.19444, 0.69444, 0, 0, 0.44445],
            8230: [0, 0.12, 0, 0, 1.172],
            8242: [0, 0.55556, 0, 0, 0.275],
            8407: [0, 0.71444, 0.15382, 0, 0.5],
            8463: [0, 0.68889, 0, 0, 0.54028],
            8465: [0, 0.69444, 0, 0, 0.72222],
            8467: [0, 0.69444, 0, 0.11111, 0.41667],
            8472: [0.19444, 0.43056, 0, 0.11111, 0.63646],
            8476: [0, 0.69444, 0, 0, 0.72222],
            8501: [0, 0.69444, 0, 0, 0.61111],
            8592: [-0.13313, 0.36687, 0, 0, 1],
            8593: [0.19444, 0.69444, 0, 0, 0.5],
            8594: [-0.13313, 0.36687, 0, 0, 1],
            8595: [0.19444, 0.69444, 0, 0, 0.5],
            8596: [-0.13313, 0.36687, 0, 0, 1],
            8597: [0.25, 0.75, 0, 0, 0.5],
            8598: [0.19444, 0.69444, 0, 0, 1],
            8599: [0.19444, 0.69444, 0, 0, 1],
            8600: [0.19444, 0.69444, 0, 0, 1],
            8601: [0.19444, 0.69444, 0, 0, 1],
            8614: [0.011, 0.511, 0, 0, 1],
            8617: [0.011, 0.511, 0, 0, 1.126],
            8618: [0.011, 0.511, 0, 0, 1.126],
            8636: [-0.13313, 0.36687, 0, 0, 1],
            8637: [-0.13313, 0.36687, 0, 0, 1],
            8640: [-0.13313, 0.36687, 0, 0, 1],
            8641: [-0.13313, 0.36687, 0, 0, 1],
            8652: [0.011, 0.671, 0, 0, 1],
            8656: [-0.13313, 0.36687, 0, 0, 1],
            8657: [0.19444, 0.69444, 0, 0, 0.61111],
            8658: [-0.13313, 0.36687, 0, 0, 1],
            8659: [0.19444, 0.69444, 0, 0, 0.61111],
            8660: [-0.13313, 0.36687, 0, 0, 1],
            8661: [0.25, 0.75, 0, 0, 0.61111],
            8704: [0, 0.69444, 0, 0, 0.55556],
            8706: [0, 0.69444, 0.05556, 0.08334, 0.5309],
            8707: [0, 0.69444, 0, 0, 0.55556],
            8709: [0.05556, 0.75, 0, 0, 0.5],
            8711: [0, 0.68333, 0, 0, 0.83334],
            8712: [0.0391, 0.5391, 0, 0, 0.66667],
            8715: [0.0391, 0.5391, 0, 0, 0.66667],
            8722: [0.08333, 0.58333, 0, 0, 0.77778],
            8723: [0.08333, 0.58333, 0, 0, 0.77778],
            8725: [0.25, 0.75, 0, 0, 0.5],
            8726: [0.25, 0.75, 0, 0, 0.5],
            8727: [-0.03472, 0.46528, 0, 0, 0.5],
            8728: [-0.05555, 0.44445, 0, 0, 0.5],
            8729: [-0.05555, 0.44445, 0, 0, 0.5],
            8730: [0.2, 0.8, 0, 0, 0.83334],
            8733: [0, 0.43056, 0, 0, 0.77778],
            8734: [0, 0.43056, 0, 0, 1],
            8736: [0, 0.69224, 0, 0, 0.72222],
            8739: [0.25, 0.75, 0, 0, 0.27778],
            8741: [0.25, 0.75, 0, 0, 0.5],
            8743: [0, 0.55556, 0, 0, 0.66667],
            8744: [0, 0.55556, 0, 0, 0.66667],
            8745: [0, 0.55556, 0, 0, 0.66667],
            8746: [0, 0.55556, 0, 0, 0.66667],
            8747: [0.19444, 0.69444, 0.11111, 0, 0.41667],
            8764: [-0.13313, 0.36687, 0, 0, 0.77778],
            8768: [0.19444, 0.69444, 0, 0, 0.27778],
            8771: [-0.03625, 0.46375, 0, 0, 0.77778],
            8773: [-0.022, 0.589, 0, 0, 1],
            8776: [-0.01688, 0.48312, 0, 0, 0.77778],
            8781: [-0.03625, 0.46375, 0, 0, 0.77778],
            8784: [-0.133, 0.67, 0, 0, 0.778],
            8800: [0.215, 0.716, 0, 0, 0.778],
            8801: [-0.03625, 0.46375, 0, 0, 0.77778],
            8804: [0.13597, 0.63597, 0, 0, 0.77778],
            8805: [0.13597, 0.63597, 0, 0, 0.77778],
            8810: [0.0391, 0.5391, 0, 0, 1],
            8811: [0.0391, 0.5391, 0, 0, 1],
            8826: [0.0391, 0.5391, 0, 0, 0.77778],
            8827: [0.0391, 0.5391, 0, 0, 0.77778],
            8834: [0.0391, 0.5391, 0, 0, 0.77778],
            8835: [0.0391, 0.5391, 0, 0, 0.77778],
            8838: [0.13597, 0.63597, 0, 0, 0.77778],
            8839: [0.13597, 0.63597, 0, 0, 0.77778],
            8846: [0, 0.55556, 0, 0, 0.66667],
            8849: [0.13597, 0.63597, 0, 0, 0.77778],
            8850: [0.13597, 0.63597, 0, 0, 0.77778],
            8851: [0, 0.55556, 0, 0, 0.66667],
            8852: [0, 0.55556, 0, 0, 0.66667],
            8853: [0.08333, 0.58333, 0, 0, 0.77778],
            8854: [0.08333, 0.58333, 0, 0, 0.77778],
            8855: [0.08333, 0.58333, 0, 0, 0.77778],
            8856: [0.08333, 0.58333, 0, 0, 0.77778],
            8857: [0.08333, 0.58333, 0, 0, 0.77778],
            8866: [0, 0.69444, 0, 0, 0.61111],
            8867: [0, 0.69444, 0, 0, 0.61111],
            8868: [0, 0.69444, 0, 0, 0.77778],
            8869: [0, 0.69444, 0, 0, 0.77778],
            8872: [0.249, 0.75, 0, 0, 0.867],
            8900: [-0.05555, 0.44445, 0, 0, 0.5],
            8901: [-0.05555, 0.44445, 0, 0, 0.27778],
            8902: [-0.03472, 0.46528, 0, 0, 0.5],
            8904: [0.005, 0.505, 0, 0, 0.9],
            8942: [0.03, 0.9, 0, 0, 0.278],
            8943: [-0.19, 0.31, 0, 0, 1.172],
            8945: [-0.1, 0.82, 0, 0, 1.282],
            8968: [0.25, 0.75, 0, 0, 0.44445],
            8969: [0.25, 0.75, 0, 0, 0.44445],
            8970: [0.25, 0.75, 0, 0, 0.44445],
            8971: [0.25, 0.75, 0, 0, 0.44445],
            8994: [-0.14236, 0.35764, 0, 0, 1],
            8995: [-0.14236, 0.35764, 0, 0, 1],
            9136: [0.244, 0.744, 0, 0, 0.412],
            9137: [0.244, 0.744, 0, 0, 0.412],
            9651: [0.19444, 0.69444, 0, 0, 0.88889],
            9657: [-0.03472, 0.46528, 0, 0, 0.5],
            9661: [0.19444, 0.69444, 0, 0, 0.88889],
            9667: [-0.03472, 0.46528, 0, 0, 0.5],
            9711: [0.19444, 0.69444, 0, 0, 1],
            9824: [0.12963, 0.69444, 0, 0, 0.77778],
            9825: [0.12963, 0.69444, 0, 0, 0.77778],
            9826: [0.12963, 0.69444, 0, 0, 0.77778],
            9827: [0.12963, 0.69444, 0, 0, 0.77778],
            9837: [0, 0.75, 0, 0, 0.38889],
            9838: [0.19444, 0.69444, 0, 0, 0.38889],
            9839: [0.19444, 0.69444, 0, 0, 0.38889],
            10216: [0.25, 0.75, 0, 0, 0.38889],
            10217: [0.25, 0.75, 0, 0, 0.38889],
            10222: [0.244, 0.744, 0, 0, 0.412],
            10223: [0.244, 0.744, 0, 0, 0.412],
            10229: [0.011, 0.511, 0, 0, 1.609],
            10230: [0.011, 0.511, 0, 0, 1.638],
            10231: [0.011, 0.511, 0, 0, 1.859],
            10232: [0.024, 0.525, 0, 0, 1.609],
            10233: [0.024, 0.525, 0, 0, 1.638],
            10234: [0.024, 0.525, 0, 0, 1.858],
            10236: [0.011, 0.511, 0, 0, 1.638],
            10815: [0, 0.68333, 0, 0, 0.75],
            10927: [0.13597, 0.63597, 0, 0, 0.77778],
            10928: [0.13597, 0.63597, 0, 0, 0.77778],
          },
          'Math-BoldItalic': {
            47: [0.19444, 0.69444, 0, 0, 0],
            65: [0, 0.68611, 0, 0, 0.86944],
            66: [0, 0.68611, 0.04835, 0, 0.8664],
            67: [0, 0.68611, 0.06979, 0, 0.81694],
            68: [0, 0.68611, 0.03194, 0, 0.93812],
            69: [0, 0.68611, 0.05451, 0, 0.81007],
            70: [0, 0.68611, 0.15972, 0, 0.68889],
            71: [0, 0.68611, 0, 0, 0.88673],
            72: [0, 0.68611, 0.08229, 0, 0.98229],
            73: [0, 0.68611, 0.07778, 0, 0.51111],
            74: [0, 0.68611, 0.10069, 0, 0.63125],
            75: [0, 0.68611, 0.06979, 0, 0.97118],
            76: [0, 0.68611, 0, 0, 0.75555],
            77: [0, 0.68611, 0.11424, 0, 1.14201],
            78: [0, 0.68611, 0.11424, 0, 0.95034],
            79: [0, 0.68611, 0.03194, 0, 0.83666],
            80: [0, 0.68611, 0.15972, 0, 0.72309],
            81: [0.19444, 0.68611, 0, 0, 0.86861],
            82: [0, 0.68611, 0.00421, 0, 0.87235],
            83: [0, 0.68611, 0.05382, 0, 0.69271],
            84: [0, 0.68611, 0.15972, 0, 0.63663],
            85: [0, 0.68611, 0.11424, 0, 0.80027],
            86: [0, 0.68611, 0.25555, 0, 0.67778],
            87: [0, 0.68611, 0.15972, 0, 1.09305],
            88: [0, 0.68611, 0.07778, 0, 0.94722],
            89: [0, 0.68611, 0.25555, 0, 0.67458],
            90: [0, 0.68611, 0.06979, 0, 0.77257],
            97: [0, 0.44444, 0, 0, 0.63287],
            98: [0, 0.69444, 0, 0, 0.52083],
            99: [0, 0.44444, 0, 0, 0.51342],
            100: [0, 0.69444, 0, 0, 0.60972],
            101: [0, 0.44444, 0, 0, 0.55361],
            102: [0.19444, 0.69444, 0.11042, 0, 0.56806],
            103: [0.19444, 0.44444, 0.03704, 0, 0.5449],
            104: [0, 0.69444, 0, 0, 0.66759],
            105: [0, 0.69326, 0, 0, 0.4048],
            106: [0.19444, 0.69326, 0.0622, 0, 0.47083],
            107: [0, 0.69444, 0.01852, 0, 0.6037],
            108: [0, 0.69444, 0.0088, 0, 0.34815],
            109: [0, 0.44444, 0, 0, 1.0324],
            110: [0, 0.44444, 0, 0, 0.71296],
            111: [0, 0.44444, 0, 0, 0.58472],
            112: [0.19444, 0.44444, 0, 0, 0.60092],
            113: [0.19444, 0.44444, 0.03704, 0, 0.54213],
            114: [0, 0.44444, 0.03194, 0, 0.5287],
            115: [0, 0.44444, 0, 0, 0.53125],
            116: [0, 0.63492, 0, 0, 0.41528],
            117: [0, 0.44444, 0, 0, 0.68102],
            118: [0, 0.44444, 0.03704, 0, 0.56666],
            119: [0, 0.44444, 0.02778, 0, 0.83148],
            120: [0, 0.44444, 0, 0, 0.65903],
            121: [0.19444, 0.44444, 0.03704, 0, 0.59028],
            122: [0, 0.44444, 0.04213, 0, 0.55509],
            915: [0, 0.68611, 0.15972, 0, 0.65694],
            916: [0, 0.68611, 0, 0, 0.95833],
            920: [0, 0.68611, 0.03194, 0, 0.86722],
            923: [0, 0.68611, 0, 0, 0.80555],
            926: [0, 0.68611, 0.07458, 0, 0.84125],
            928: [0, 0.68611, 0.08229, 0, 0.98229],
            931: [0, 0.68611, 0.05451, 0, 0.88507],
            933: [0, 0.68611, 0.15972, 0, 0.67083],
            934: [0, 0.68611, 0, 0, 0.76666],
            936: [0, 0.68611, 0.11653, 0, 0.71402],
            937: [0, 0.68611, 0.04835, 0, 0.8789],
            945: [0, 0.44444, 0, 0, 0.76064],
            946: [0.19444, 0.69444, 0.03403, 0, 0.65972],
            947: [0.19444, 0.44444, 0.06389, 0, 0.59003],
            948: [0, 0.69444, 0.03819, 0, 0.52222],
            949: [0, 0.44444, 0, 0, 0.52882],
            950: [0.19444, 0.69444, 0.06215, 0, 0.50833],
            951: [0.19444, 0.44444, 0.03704, 0, 0.6],
            952: [0, 0.69444, 0.03194, 0, 0.5618],
            953: [0, 0.44444, 0, 0, 0.41204],
            954: [0, 0.44444, 0, 0, 0.66759],
            955: [0, 0.69444, 0, 0, 0.67083],
            956: [0.19444, 0.44444, 0, 0, 0.70787],
            957: [0, 0.44444, 0.06898, 0, 0.57685],
            958: [0.19444, 0.69444, 0.03021, 0, 0.50833],
            959: [0, 0.44444, 0, 0, 0.58472],
            960: [0, 0.44444, 0.03704, 0, 0.68241],
            961: [0.19444, 0.44444, 0, 0, 0.6118],
            962: [0.09722, 0.44444, 0.07917, 0, 0.42361],
            963: [0, 0.44444, 0.03704, 0, 0.68588],
            964: [0, 0.44444, 0.13472, 0, 0.52083],
            965: [0, 0.44444, 0.03704, 0, 0.63055],
            966: [0.19444, 0.44444, 0, 0, 0.74722],
            967: [0.19444, 0.44444, 0, 0, 0.71805],
            968: [0.19444, 0.69444, 0.03704, 0, 0.75833],
            969: [0, 0.44444, 0.03704, 0, 0.71782],
            977: [0, 0.69444, 0, 0, 0.69155],
            981: [0.19444, 0.69444, 0, 0, 0.7125],
            982: [0, 0.44444, 0.03194, 0, 0.975],
            1009: [0.19444, 0.44444, 0, 0, 0.6118],
            1013: [0, 0.44444, 0, 0, 0.48333],
          },
          'Math-Italic': {
            47: [0.19444, 0.69444, 0, 0, 0],
            65: [0, 0.68333, 0, 0.13889, 0.75],
            66: [0, 0.68333, 0.05017, 0.08334, 0.75851],
            67: [0, 0.68333, 0.07153, 0.08334, 0.71472],
            68: [0, 0.68333, 0.02778, 0.05556, 0.82792],
            69: [0, 0.68333, 0.05764, 0.08334, 0.7382],
            70: [0, 0.68333, 0.13889, 0.08334, 0.64306],
            71: [0, 0.68333, 0, 0.08334, 0.78625],
            72: [0, 0.68333, 0.08125, 0.05556, 0.83125],
            73: [0, 0.68333, 0.07847, 0.11111, 0.43958],
            74: [0, 0.68333, 0.09618, 0.16667, 0.55451],
            75: [0, 0.68333, 0.07153, 0.05556, 0.84931],
            76: [0, 0.68333, 0, 0.02778, 0.68056],
            77: [0, 0.68333, 0.10903, 0.08334, 0.97014],
            78: [0, 0.68333, 0.10903, 0.08334, 0.80347],
            79: [0, 0.68333, 0.02778, 0.08334, 0.76278],
            80: [0, 0.68333, 0.13889, 0.08334, 0.64201],
            81: [0.19444, 0.68333, 0, 0.08334, 0.79056],
            82: [0, 0.68333, 0.00773, 0.08334, 0.75929],
            83: [0, 0.68333, 0.05764, 0.08334, 0.6132],
            84: [0, 0.68333, 0.13889, 0.08334, 0.58438],
            85: [0, 0.68333, 0.10903, 0.02778, 0.68278],
            86: [0, 0.68333, 0.22222, 0, 0.58333],
            87: [0, 0.68333, 0.13889, 0, 0.94445],
            88: [0, 0.68333, 0.07847, 0.08334, 0.82847],
            89: [0, 0.68333, 0.22222, 0, 0.58056],
            90: [0, 0.68333, 0.07153, 0.08334, 0.68264],
            97: [0, 0.43056, 0, 0, 0.52859],
            98: [0, 0.69444, 0, 0, 0.42917],
            99: [0, 0.43056, 0, 0.05556, 0.43276],
            100: [0, 0.69444, 0, 0.16667, 0.52049],
            101: [0, 0.43056, 0, 0.05556, 0.46563],
            102: [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],
            103: [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],
            104: [0, 0.69444, 0, 0, 0.57616],
            105: [0, 0.65952, 0, 0, 0.34451],
            106: [0.19444, 0.65952, 0.05724, 0, 0.41181],
            107: [0, 0.69444, 0.03148, 0, 0.5206],
            108: [0, 0.69444, 0.01968, 0.08334, 0.29838],
            109: [0, 0.43056, 0, 0, 0.87801],
            110: [0, 0.43056, 0, 0, 0.60023],
            111: [0, 0.43056, 0, 0.05556, 0.48472],
            112: [0.19444, 0.43056, 0, 0.08334, 0.50313],
            113: [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],
            114: [0, 0.43056, 0.02778, 0.05556, 0.45116],
            115: [0, 0.43056, 0, 0.05556, 0.46875],
            116: [0, 0.61508, 0, 0.08334, 0.36111],
            117: [0, 0.43056, 0, 0.02778, 0.57246],
            118: [0, 0.43056, 0.03588, 0.02778, 0.48472],
            119: [0, 0.43056, 0.02691, 0.08334, 0.71592],
            120: [0, 0.43056, 0, 0.02778, 0.57153],
            121: [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],
            122: [0, 0.43056, 0.04398, 0.05556, 0.46505],
            915: [0, 0.68333, 0.13889, 0.08334, 0.61528],
            916: [0, 0.68333, 0, 0.16667, 0.83334],
            920: [0, 0.68333, 0.02778, 0.08334, 0.76278],
            923: [0, 0.68333, 0, 0.16667, 0.69445],
            926: [0, 0.68333, 0.07569, 0.08334, 0.74236],
            928: [0, 0.68333, 0.08125, 0.05556, 0.83125],
            931: [0, 0.68333, 0.05764, 0.08334, 0.77986],
            933: [0, 0.68333, 0.13889, 0.05556, 0.58333],
            934: [0, 0.68333, 0, 0.08334, 0.66667],
            936: [0, 0.68333, 0.11, 0.05556, 0.61222],
            937: [0, 0.68333, 0.05017, 0.08334, 0.7724],
            945: [0, 0.43056, 0.0037, 0.02778, 0.6397],
            946: [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],
            947: [0.19444, 0.43056, 0.05556, 0, 0.51773],
            948: [0, 0.69444, 0.03785, 0.05556, 0.44444],
            949: [0, 0.43056, 0, 0.08334, 0.46632],
            950: [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],
            951: [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],
            952: [0, 0.69444, 0.02778, 0.08334, 0.46944],
            953: [0, 0.43056, 0, 0.05556, 0.35394],
            954: [0, 0.43056, 0, 0, 0.57616],
            955: [0, 0.69444, 0, 0, 0.58334],
            956: [0.19444, 0.43056, 0, 0.02778, 0.60255],
            957: [0, 0.43056, 0.06366, 0.02778, 0.49398],
            958: [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],
            959: [0, 0.43056, 0, 0.05556, 0.48472],
            960: [0, 0.43056, 0.03588, 0, 0.57003],
            961: [0.19444, 0.43056, 0, 0.08334, 0.51702],
            962: [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],
            963: [0, 0.43056, 0.03588, 0, 0.57141],
            964: [0, 0.43056, 0.1132, 0.02778, 0.43715],
            965: [0, 0.43056, 0.03588, 0.02778, 0.54028],
            966: [0.19444, 0.43056, 0, 0.08334, 0.65417],
            967: [0.19444, 0.43056, 0, 0.05556, 0.62569],
            968: [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],
            969: [0, 0.43056, 0.03588, 0, 0.62245],
            977: [0, 0.69444, 0, 0.08334, 0.59144],
            981: [0.19444, 0.69444, 0, 0.08334, 0.59583],
            982: [0, 0.43056, 0.02778, 0, 0.82813],
            1009: [0.19444, 0.43056, 0, 0.08334, 0.51702],
            1013: [0, 0.43056, 0, 0.05556, 0.4059],
          },
          'Math-Regular': {
            65: [0, 0.68333, 0, 0.13889, 0.75],
            66: [0, 0.68333, 0.05017, 0.08334, 0.75851],
            67: [0, 0.68333, 0.07153, 0.08334, 0.71472],
            68: [0, 0.68333, 0.02778, 0.05556, 0.82792],
            69: [0, 0.68333, 0.05764, 0.08334, 0.7382],
            70: [0, 0.68333, 0.13889, 0.08334, 0.64306],
            71: [0, 0.68333, 0, 0.08334, 0.78625],
            72: [0, 0.68333, 0.08125, 0.05556, 0.83125],
            73: [0, 0.68333, 0.07847, 0.11111, 0.43958],
            74: [0, 0.68333, 0.09618, 0.16667, 0.55451],
            75: [0, 0.68333, 0.07153, 0.05556, 0.84931],
            76: [0, 0.68333, 0, 0.02778, 0.68056],
            77: [0, 0.68333, 0.10903, 0.08334, 0.97014],
            78: [0, 0.68333, 0.10903, 0.08334, 0.80347],
            79: [0, 0.68333, 0.02778, 0.08334, 0.76278],
            80: [0, 0.68333, 0.13889, 0.08334, 0.64201],
            81: [0.19444, 0.68333, 0, 0.08334, 0.79056],
            82: [0, 0.68333, 0.00773, 0.08334, 0.75929],
            83: [0, 0.68333, 0.05764, 0.08334, 0.6132],
            84: [0, 0.68333, 0.13889, 0.08334, 0.58438],
            85: [0, 0.68333, 0.10903, 0.02778, 0.68278],
            86: [0, 0.68333, 0.22222, 0, 0.58333],
            87: [0, 0.68333, 0.13889, 0, 0.94445],
            88: [0, 0.68333, 0.07847, 0.08334, 0.82847],
            89: [0, 0.68333, 0.22222, 0, 0.58056],
            90: [0, 0.68333, 0.07153, 0.08334, 0.68264],
            97: [0, 0.43056, 0, 0, 0.52859],
            98: [0, 0.69444, 0, 0, 0.42917],
            99: [0, 0.43056, 0, 0.05556, 0.43276],
            100: [0, 0.69444, 0, 0.16667, 0.52049],
            101: [0, 0.43056, 0, 0.05556, 0.46563],
            102: [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],
            103: [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],
            104: [0, 0.69444, 0, 0, 0.57616],
            105: [0, 0.65952, 0, 0, 0.34451],
            106: [0.19444, 0.65952, 0.05724, 0, 0.41181],
            107: [0, 0.69444, 0.03148, 0, 0.5206],
            108: [0, 0.69444, 0.01968, 0.08334, 0.29838],
            109: [0, 0.43056, 0, 0, 0.87801],
            110: [0, 0.43056, 0, 0, 0.60023],
            111: [0, 0.43056, 0, 0.05556, 0.48472],
            112: [0.19444, 0.43056, 0, 0.08334, 0.50313],
            113: [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],
            114: [0, 0.43056, 0.02778, 0.05556, 0.45116],
            115: [0, 0.43056, 0, 0.05556, 0.46875],
            116: [0, 0.61508, 0, 0.08334, 0.36111],
            117: [0, 0.43056, 0, 0.02778, 0.57246],
            118: [0, 0.43056, 0.03588, 0.02778, 0.48472],
            119: [0, 0.43056, 0.02691, 0.08334, 0.71592],
            120: [0, 0.43056, 0, 0.02778, 0.57153],
            121: [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],
            122: [0, 0.43056, 0.04398, 0.05556, 0.46505],
            915: [0, 0.68333, 0.13889, 0.08334, 0.61528],
            916: [0, 0.68333, 0, 0.16667, 0.83334],
            920: [0, 0.68333, 0.02778, 0.08334, 0.76278],
            923: [0, 0.68333, 0, 0.16667, 0.69445],
            926: [0, 0.68333, 0.07569, 0.08334, 0.74236],
            928: [0, 0.68333, 0.08125, 0.05556, 0.83125],
            931: [0, 0.68333, 0.05764, 0.08334, 0.77986],
            933: [0, 0.68333, 0.13889, 0.05556, 0.58333],
            934: [0, 0.68333, 0, 0.08334, 0.66667],
            936: [0, 0.68333, 0.11, 0.05556, 0.61222],
            937: [0, 0.68333, 0.05017, 0.08334, 0.7724],
            945: [0, 0.43056, 0.0037, 0.02778, 0.6397],
            946: [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],
            947: [0.19444, 0.43056, 0.05556, 0, 0.51773],
            948: [0, 0.69444, 0.03785, 0.05556, 0.44444],
            949: [0, 0.43056, 0, 0.08334, 0.46632],
            950: [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],
            951: [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],
            952: [0, 0.69444, 0.02778, 0.08334, 0.46944],
            953: [0, 0.43056, 0, 0.05556, 0.35394],
            954: [0, 0.43056, 0, 0, 0.57616],
            955: [0, 0.69444, 0, 0, 0.58334],
            956: [0.19444, 0.43056, 0, 0.02778, 0.60255],
            957: [0, 0.43056, 0.06366, 0.02778, 0.49398],
            958: [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],
            959: [0, 0.43056, 0, 0.05556, 0.48472],
            960: [0, 0.43056, 0.03588, 0, 0.57003],
            961: [0.19444, 0.43056, 0, 0.08334, 0.51702],
            962: [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],
            963: [0, 0.43056, 0.03588, 0, 0.57141],
            964: [0, 0.43056, 0.1132, 0.02778, 0.43715],
            965: [0, 0.43056, 0.03588, 0.02778, 0.54028],
            966: [0.19444, 0.43056, 0, 0.08334, 0.65417],
            967: [0.19444, 0.43056, 0, 0.05556, 0.62569],
            968: [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],
            969: [0, 0.43056, 0.03588, 0, 0.62245],
            977: [0, 0.69444, 0, 0.08334, 0.59144],
            981: [0.19444, 0.69444, 0, 0.08334, 0.59583],
            982: [0, 0.43056, 0.02778, 0, 0.82813],
            1009: [0.19444, 0.43056, 0, 0.08334, 0.51702],
            1013: [0, 0.43056, 0, 0.05556, 0.4059],
          },
          'SansSerif-Bold': {
            33: [0, 0.69444, 0, 0, 0.36667],
            34: [0, 0.69444, 0, 0, 0.55834],
            35: [0.19444, 0.69444, 0, 0, 0.91667],
            36: [0.05556, 0.75, 0, 0, 0.55],
            37: [0.05556, 0.75, 0, 0, 1.02912],
            38: [0, 0.69444, 0, 0, 0.83056],
            39: [0, 0.69444, 0, 0, 0.30556],
            40: [0.25, 0.75, 0, 0, 0.42778],
            41: [0.25, 0.75, 0, 0, 0.42778],
            42: [0, 0.75, 0, 0, 0.55],
            43: [0.11667, 0.61667, 0, 0, 0.85556],
            44: [0.10556, 0.13056, 0, 0, 0.30556],
            45: [0, 0.45833, 0, 0, 0.36667],
            46: [0, 0.13056, 0, 0, 0.30556],
            47: [0.25, 0.75, 0, 0, 0.55],
            48: [0, 0.69444, 0, 0, 0.55],
            49: [0, 0.69444, 0, 0, 0.55],
            50: [0, 0.69444, 0, 0, 0.55],
            51: [0, 0.69444, 0, 0, 0.55],
            52: [0, 0.69444, 0, 0, 0.55],
            53: [0, 0.69444, 0, 0, 0.55],
            54: [0, 0.69444, 0, 0, 0.55],
            55: [0, 0.69444, 0, 0, 0.55],
            56: [0, 0.69444, 0, 0, 0.55],
            57: [0, 0.69444, 0, 0, 0.55],
            58: [0, 0.45833, 0, 0, 0.30556],
            59: [0.10556, 0.45833, 0, 0, 0.30556],
            61: [-0.09375, 0.40625, 0, 0, 0.85556],
            63: [0, 0.69444, 0, 0, 0.51945],
            64: [0, 0.69444, 0, 0, 0.73334],
            65: [0, 0.69444, 0, 0, 0.73334],
            66: [0, 0.69444, 0, 0, 0.73334],
            67: [0, 0.69444, 0, 0, 0.70278],
            68: [0, 0.69444, 0, 0, 0.79445],
            69: [0, 0.69444, 0, 0, 0.64167],
            70: [0, 0.69444, 0, 0, 0.61111],
            71: [0, 0.69444, 0, 0, 0.73334],
            72: [0, 0.69444, 0, 0, 0.79445],
            73: [0, 0.69444, 0, 0, 0.33056],
            74: [0, 0.69444, 0, 0, 0.51945],
            75: [0, 0.69444, 0, 0, 0.76389],
            76: [0, 0.69444, 0, 0, 0.58056],
            77: [0, 0.69444, 0, 0, 0.97778],
            78: [0, 0.69444, 0, 0, 0.79445],
            79: [0, 0.69444, 0, 0, 0.79445],
            80: [0, 0.69444, 0, 0, 0.70278],
            81: [0.10556, 0.69444, 0, 0, 0.79445],
            82: [0, 0.69444, 0, 0, 0.70278],
            83: [0, 0.69444, 0, 0, 0.61111],
            84: [0, 0.69444, 0, 0, 0.73334],
            85: [0, 0.69444, 0, 0, 0.76389],
            86: [0, 0.69444, 0.01528, 0, 0.73334],
            87: [0, 0.69444, 0.01528, 0, 1.03889],
            88: [0, 0.69444, 0, 0, 0.73334],
            89: [0, 0.69444, 0.0275, 0, 0.73334],
            90: [0, 0.69444, 0, 0, 0.67223],
            91: [0.25, 0.75, 0, 0, 0.34306],
            93: [0.25, 0.75, 0, 0, 0.34306],
            94: [0, 0.69444, 0, 0, 0.55],
            95: [0.35, 0.10833, 0.03056, 0, 0.55],
            97: [0, 0.45833, 0, 0, 0.525],
            98: [0, 0.69444, 0, 0, 0.56111],
            99: [0, 0.45833, 0, 0, 0.48889],
            100: [0, 0.69444, 0, 0, 0.56111],
            101: [0, 0.45833, 0, 0, 0.51111],
            102: [0, 0.69444, 0.07639, 0, 0.33611],
            103: [0.19444, 0.45833, 0.01528, 0, 0.55],
            104: [0, 0.69444, 0, 0, 0.56111],
            105: [0, 0.69444, 0, 0, 0.25556],
            106: [0.19444, 0.69444, 0, 0, 0.28611],
            107: [0, 0.69444, 0, 0, 0.53056],
            108: [0, 0.69444, 0, 0, 0.25556],
            109: [0, 0.45833, 0, 0, 0.86667],
            110: [0, 0.45833, 0, 0, 0.56111],
            111: [0, 0.45833, 0, 0, 0.55],
            112: [0.19444, 0.45833, 0, 0, 0.56111],
            113: [0.19444, 0.45833, 0, 0, 0.56111],
            114: [0, 0.45833, 0.01528, 0, 0.37222],
            115: [0, 0.45833, 0, 0, 0.42167],
            116: [0, 0.58929, 0, 0, 0.40417],
            117: [0, 0.45833, 0, 0, 0.56111],
            118: [0, 0.45833, 0.01528, 0, 0.5],
            119: [0, 0.45833, 0.01528, 0, 0.74445],
            120: [0, 0.45833, 0, 0, 0.5],
            121: [0.19444, 0.45833, 0.01528, 0, 0.5],
            122: [0, 0.45833, 0, 0, 0.47639],
            126: [0.35, 0.34444, 0, 0, 0.55],
            168: [0, 0.69444, 0, 0, 0.55],
            176: [0, 0.69444, 0, 0, 0.73334],
            180: [0, 0.69444, 0, 0, 0.55],
            184: [0.17014, 0, 0, 0, 0.48889],
            305: [0, 0.45833, 0, 0, 0.25556],
            567: [0.19444, 0.45833, 0, 0, 0.28611],
            710: [0, 0.69444, 0, 0, 0.55],
            711: [0, 0.63542, 0, 0, 0.55],
            713: [0, 0.63778, 0, 0, 0.55],
            728: [0, 0.69444, 0, 0, 0.55],
            729: [0, 0.69444, 0, 0, 0.30556],
            730: [0, 0.69444, 0, 0, 0.73334],
            732: [0, 0.69444, 0, 0, 0.55],
            733: [0, 0.69444, 0, 0, 0.55],
            915: [0, 0.69444, 0, 0, 0.58056],
            916: [0, 0.69444, 0, 0, 0.91667],
            920: [0, 0.69444, 0, 0, 0.85556],
            923: [0, 0.69444, 0, 0, 0.67223],
            926: [0, 0.69444, 0, 0, 0.73334],
            928: [0, 0.69444, 0, 0, 0.79445],
            931: [0, 0.69444, 0, 0, 0.79445],
            933: [0, 0.69444, 0, 0, 0.85556],
            934: [0, 0.69444, 0, 0, 0.79445],
            936: [0, 0.69444, 0, 0, 0.85556],
            937: [0, 0.69444, 0, 0, 0.79445],
            8211: [0, 0.45833, 0.03056, 0, 0.55],
            8212: [0, 0.45833, 0.03056, 0, 1.10001],
            8216: [0, 0.69444, 0, 0, 0.30556],
            8217: [0, 0.69444, 0, 0, 0.30556],
            8220: [0, 0.69444, 0, 0, 0.55834],
            8221: [0, 0.69444, 0, 0, 0.55834],
          },
          'SansSerif-Italic': {
            33: [0, 0.69444, 0.05733, 0, 0.31945],
            34: [0, 0.69444, 0.00316, 0, 0.5],
            35: [0.19444, 0.69444, 0.05087, 0, 0.83334],
            36: [0.05556, 0.75, 0.11156, 0, 0.5],
            37: [0.05556, 0.75, 0.03126, 0, 0.83334],
            38: [0, 0.69444, 0.03058, 0, 0.75834],
            39: [0, 0.69444, 0.07816, 0, 0.27778],
            40: [0.25, 0.75, 0.13164, 0, 0.38889],
            41: [0.25, 0.75, 0.02536, 0, 0.38889],
            42: [0, 0.75, 0.11775, 0, 0.5],
            43: [0.08333, 0.58333, 0.02536, 0, 0.77778],
            44: [0.125, 0.08333, 0, 0, 0.27778],
            45: [0, 0.44444, 0.01946, 0, 0.33333],
            46: [0, 0.08333, 0, 0, 0.27778],
            47: [0.25, 0.75, 0.13164, 0, 0.5],
            48: [0, 0.65556, 0.11156, 0, 0.5],
            49: [0, 0.65556, 0.11156, 0, 0.5],
            50: [0, 0.65556, 0.11156, 0, 0.5],
            51: [0, 0.65556, 0.11156, 0, 0.5],
            52: [0, 0.65556, 0.11156, 0, 0.5],
            53: [0, 0.65556, 0.11156, 0, 0.5],
            54: [0, 0.65556, 0.11156, 0, 0.5],
            55: [0, 0.65556, 0.11156, 0, 0.5],
            56: [0, 0.65556, 0.11156, 0, 0.5],
            57: [0, 0.65556, 0.11156, 0, 0.5],
            58: [0, 0.44444, 0.02502, 0, 0.27778],
            59: [0.125, 0.44444, 0.02502, 0, 0.27778],
            61: [-0.13, 0.37, 0.05087, 0, 0.77778],
            63: [0, 0.69444, 0.11809, 0, 0.47222],
            64: [0, 0.69444, 0.07555, 0, 0.66667],
            65: [0, 0.69444, 0, 0, 0.66667],
            66: [0, 0.69444, 0.08293, 0, 0.66667],
            67: [0, 0.69444, 0.11983, 0, 0.63889],
            68: [0, 0.69444, 0.07555, 0, 0.72223],
            69: [0, 0.69444, 0.11983, 0, 0.59722],
            70: [0, 0.69444, 0.13372, 0, 0.56945],
            71: [0, 0.69444, 0.11983, 0, 0.66667],
            72: [0, 0.69444, 0.08094, 0, 0.70834],
            73: [0, 0.69444, 0.13372, 0, 0.27778],
            74: [0, 0.69444, 0.08094, 0, 0.47222],
            75: [0, 0.69444, 0.11983, 0, 0.69445],
            76: [0, 0.69444, 0, 0, 0.54167],
            77: [0, 0.69444, 0.08094, 0, 0.875],
            78: [0, 0.69444, 0.08094, 0, 0.70834],
            79: [0, 0.69444, 0.07555, 0, 0.73611],
            80: [0, 0.69444, 0.08293, 0, 0.63889],
            81: [0.125, 0.69444, 0.07555, 0, 0.73611],
            82: [0, 0.69444, 0.08293, 0, 0.64584],
            83: [0, 0.69444, 0.09205, 0, 0.55556],
            84: [0, 0.69444, 0.13372, 0, 0.68056],
            85: [0, 0.69444, 0.08094, 0, 0.6875],
            86: [0, 0.69444, 0.1615, 0, 0.66667],
            87: [0, 0.69444, 0.1615, 0, 0.94445],
            88: [0, 0.69444, 0.13372, 0, 0.66667],
            89: [0, 0.69444, 0.17261, 0, 0.66667],
            90: [0, 0.69444, 0.11983, 0, 0.61111],
            91: [0.25, 0.75, 0.15942, 0, 0.28889],
            93: [0.25, 0.75, 0.08719, 0, 0.28889],
            94: [0, 0.69444, 0.0799, 0, 0.5],
            95: [0.35, 0.09444, 0.08616, 0, 0.5],
            97: [0, 0.44444, 0.00981, 0, 0.48056],
            98: [0, 0.69444, 0.03057, 0, 0.51667],
            99: [0, 0.44444, 0.08336, 0, 0.44445],
            100: [0, 0.69444, 0.09483, 0, 0.51667],
            101: [0, 0.44444, 0.06778, 0, 0.44445],
            102: [0, 0.69444, 0.21705, 0, 0.30556],
            103: [0.19444, 0.44444, 0.10836, 0, 0.5],
            104: [0, 0.69444, 0.01778, 0, 0.51667],
            105: [0, 0.67937, 0.09718, 0, 0.23889],
            106: [0.19444, 0.67937, 0.09162, 0, 0.26667],
            107: [0, 0.69444, 0.08336, 0, 0.48889],
            108: [0, 0.69444, 0.09483, 0, 0.23889],
            109: [0, 0.44444, 0.01778, 0, 0.79445],
            110: [0, 0.44444, 0.01778, 0, 0.51667],
            111: [0, 0.44444, 0.06613, 0, 0.5],
            112: [0.19444, 0.44444, 0.0389, 0, 0.51667],
            113: [0.19444, 0.44444, 0.04169, 0, 0.51667],
            114: [0, 0.44444, 0.10836, 0, 0.34167],
            115: [0, 0.44444, 0.0778, 0, 0.38333],
            116: [0, 0.57143, 0.07225, 0, 0.36111],
            117: [0, 0.44444, 0.04169, 0, 0.51667],
            118: [0, 0.44444, 0.10836, 0, 0.46111],
            119: [0, 0.44444, 0.10836, 0, 0.68334],
            120: [0, 0.44444, 0.09169, 0, 0.46111],
            121: [0.19444, 0.44444, 0.10836, 0, 0.46111],
            122: [0, 0.44444, 0.08752, 0, 0.43472],
            126: [0.35, 0.32659, 0.08826, 0, 0.5],
            168: [0, 0.67937, 0.06385, 0, 0.5],
            176: [0, 0.69444, 0, 0, 0.73752],
            184: [0.17014, 0, 0, 0, 0.44445],
            305: [0, 0.44444, 0.04169, 0, 0.23889],
            567: [0.19444, 0.44444, 0.04169, 0, 0.26667],
            710: [0, 0.69444, 0.0799, 0, 0.5],
            711: [0, 0.63194, 0.08432, 0, 0.5],
            713: [0, 0.60889, 0.08776, 0, 0.5],
            714: [0, 0.69444, 0.09205, 0, 0.5],
            715: [0, 0.69444, 0, 0, 0.5],
            728: [0, 0.69444, 0.09483, 0, 0.5],
            729: [0, 0.67937, 0.07774, 0, 0.27778],
            730: [0, 0.69444, 0, 0, 0.73752],
            732: [0, 0.67659, 0.08826, 0, 0.5],
            733: [0, 0.69444, 0.09205, 0, 0.5],
            915: [0, 0.69444, 0.13372, 0, 0.54167],
            916: [0, 0.69444, 0, 0, 0.83334],
            920: [0, 0.69444, 0.07555, 0, 0.77778],
            923: [0, 0.69444, 0, 0, 0.61111],
            926: [0, 0.69444, 0.12816, 0, 0.66667],
            928: [0, 0.69444, 0.08094, 0, 0.70834],
            931: [0, 0.69444, 0.11983, 0, 0.72222],
            933: [0, 0.69444, 0.09031, 0, 0.77778],
            934: [0, 0.69444, 0.04603, 0, 0.72222],
            936: [0, 0.69444, 0.09031, 0, 0.77778],
            937: [0, 0.69444, 0.08293, 0, 0.72222],
            8211: [0, 0.44444, 0.08616, 0, 0.5],
            8212: [0, 0.44444, 0.08616, 0, 1],
            8216: [0, 0.69444, 0.07816, 0, 0.27778],
            8217: [0, 0.69444, 0.07816, 0, 0.27778],
            8220: [0, 0.69444, 0.14205, 0, 0.5],
            8221: [0, 0.69444, 0.00316, 0, 0.5],
          },
          'SansSerif-Regular': {
            33: [0, 0.69444, 0, 0, 0.31945],
            34: [0, 0.69444, 0, 0, 0.5],
            35: [0.19444, 0.69444, 0, 0, 0.83334],
            36: [0.05556, 0.75, 0, 0, 0.5],
            37: [0.05556, 0.75, 0, 0, 0.83334],
            38: [0, 0.69444, 0, 0, 0.75834],
            39: [0, 0.69444, 0, 0, 0.27778],
            40: [0.25, 0.75, 0, 0, 0.38889],
            41: [0.25, 0.75, 0, 0, 0.38889],
            42: [0, 0.75, 0, 0, 0.5],
            43: [0.08333, 0.58333, 0, 0, 0.77778],
            44: [0.125, 0.08333, 0, 0, 0.27778],
            45: [0, 0.44444, 0, 0, 0.33333],
            46: [0, 0.08333, 0, 0, 0.27778],
            47: [0.25, 0.75, 0, 0, 0.5],
            48: [0, 0.65556, 0, 0, 0.5],
            49: [0, 0.65556, 0, 0, 0.5],
            50: [0, 0.65556, 0, 0, 0.5],
            51: [0, 0.65556, 0, 0, 0.5],
            52: [0, 0.65556, 0, 0, 0.5],
            53: [0, 0.65556, 0, 0, 0.5],
            54: [0, 0.65556, 0, 0, 0.5],
            55: [0, 0.65556, 0, 0, 0.5],
            56: [0, 0.65556, 0, 0, 0.5],
            57: [0, 0.65556, 0, 0, 0.5],
            58: [0, 0.44444, 0, 0, 0.27778],
            59: [0.125, 0.44444, 0, 0, 0.27778],
            61: [-0.13, 0.37, 0, 0, 0.77778],
            63: [0, 0.69444, 0, 0, 0.47222],
            64: [0, 0.69444, 0, 0, 0.66667],
            65: [0, 0.69444, 0, 0, 0.66667],
            66: [0, 0.69444, 0, 0, 0.66667],
            67: [0, 0.69444, 0, 0, 0.63889],
            68: [0, 0.69444, 0, 0, 0.72223],
            69: [0, 0.69444, 0, 0, 0.59722],
            70: [0, 0.69444, 0, 0, 0.56945],
            71: [0, 0.69444, 0, 0, 0.66667],
            72: [0, 0.69444, 0, 0, 0.70834],
            73: [0, 0.69444, 0, 0, 0.27778],
            74: [0, 0.69444, 0, 0, 0.47222],
            75: [0, 0.69444, 0, 0, 0.69445],
            76: [0, 0.69444, 0, 0, 0.54167],
            77: [0, 0.69444, 0, 0, 0.875],
            78: [0, 0.69444, 0, 0, 0.70834],
            79: [0, 0.69444, 0, 0, 0.73611],
            80: [0, 0.69444, 0, 0, 0.63889],
            81: [0.125, 0.69444, 0, 0, 0.73611],
            82: [0, 0.69444, 0, 0, 0.64584],
            83: [0, 0.69444, 0, 0, 0.55556],
            84: [0, 0.69444, 0, 0, 0.68056],
            85: [0, 0.69444, 0, 0, 0.6875],
            86: [0, 0.69444, 0.01389, 0, 0.66667],
            87: [0, 0.69444, 0.01389, 0, 0.94445],
            88: [0, 0.69444, 0, 0, 0.66667],
            89: [0, 0.69444, 0.025, 0, 0.66667],
            90: [0, 0.69444, 0, 0, 0.61111],
            91: [0.25, 0.75, 0, 0, 0.28889],
            93: [0.25, 0.75, 0, 0, 0.28889],
            94: [0, 0.69444, 0, 0, 0.5],
            95: [0.35, 0.09444, 0.02778, 0, 0.5],
            97: [0, 0.44444, 0, 0, 0.48056],
            98: [0, 0.69444, 0, 0, 0.51667],
            99: [0, 0.44444, 0, 0, 0.44445],
            100: [0, 0.69444, 0, 0, 0.51667],
            101: [0, 0.44444, 0, 0, 0.44445],
            102: [0, 0.69444, 0.06944, 0, 0.30556],
            103: [0.19444, 0.44444, 0.01389, 0, 0.5],
            104: [0, 0.69444, 0, 0, 0.51667],
            105: [0, 0.67937, 0, 0, 0.23889],
            106: [0.19444, 0.67937, 0, 0, 0.26667],
            107: [0, 0.69444, 0, 0, 0.48889],
            108: [0, 0.69444, 0, 0, 0.23889],
            109: [0, 0.44444, 0, 0, 0.79445],
            110: [0, 0.44444, 0, 0, 0.51667],
            111: [0, 0.44444, 0, 0, 0.5],
            112: [0.19444, 0.44444, 0, 0, 0.51667],
            113: [0.19444, 0.44444, 0, 0, 0.51667],
            114: [0, 0.44444, 0.01389, 0, 0.34167],
            115: [0, 0.44444, 0, 0, 0.38333],
            116: [0, 0.57143, 0, 0, 0.36111],
            117: [0, 0.44444, 0, 0, 0.51667],
            118: [0, 0.44444, 0.01389, 0, 0.46111],
            119: [0, 0.44444, 0.01389, 0, 0.68334],
            120: [0, 0.44444, 0, 0, 0.46111],
            121: [0.19444, 0.44444, 0.01389, 0, 0.46111],
            122: [0, 0.44444, 0, 0, 0.43472],
            126: [0.35, 0.32659, 0, 0, 0.5],
            161: [0, 0.69444, 0, 0, 0.31945], // ¡ upside-down ! - metrics copied from 33
            168: [0, 0.67937, 0, 0, 0.5],
            176: [0, 0.69444, 0, 0, 0.66667],
            184: [0.17014, 0, 0, 0, 0.44445],
            191: [0, 0.69444, 0, 0, 0.47222], // ¿ upside-down ? - metrics copied from 63
            305: [0, 0.44444, 0, 0, 0.23889],
            567: [0.19444, 0.44444, 0, 0, 0.26667],
            710: [0, 0.69444, 0, 0, 0.5],
            711: [0, 0.63194, 0, 0, 0.5],
            713: [0, 0.60889, 0, 0, 0.5],
            714: [0, 0.69444, 0, 0, 0.5],
            715: [0, 0.69444, 0, 0, 0.5],
            728: [0, 0.69444, 0, 0, 0.5],
            729: [0, 0.67937, 0, 0, 0.27778],
            730: [0, 0.69444, 0, 0, 0.66667],
            732: [0, 0.67659, 0, 0, 0.5],
            733: [0, 0.69444, 0, 0, 0.5],
            915: [0, 0.69444, 0, 0, 0.54167],
            916: [0, 0.69444, 0, 0, 0.83334],
            920: [0, 0.69444, 0, 0, 0.77778],
            923: [0, 0.69444, 0, 0, 0.61111],
            926: [0, 0.69444, 0, 0, 0.66667],
            928: [0, 0.69444, 0, 0, 0.70834],
            931: [0, 0.69444, 0, 0, 0.72222],
            933: [0, 0.69444, 0, 0, 0.77778],
            934: [0, 0.69444, 0, 0, 0.72222],
            936: [0, 0.69444, 0, 0, 0.77778],
            937: [0, 0.69444, 0, 0, 0.72222],
            8211: [0, 0.44444, 0.02778, 0, 0.5],
            8212: [0, 0.44444, 0.02778, 0, 1],
            8216: [0, 0.69444, 0, 0, 0.27778],
            8217: [0, 0.69444, 0, 0, 0.27778],
            8220: [0, 0.69444, 0, 0, 0.5],
            8221: [0, 0.69444, 0, 0, 0.5],
          },
          'Script-Regular': {
            65: [0, 0.7, 0.22925, 0, 0.80253],
            66: [0, 0.7, 0.04087, 0, 0.90757],
            67: [0, 0.7, 0.1689, 0, 0.66619],
            68: [0, 0.7, 0.09371, 0, 0.77443],
            69: [0, 0.7, 0.18583, 0, 0.56162],
            70: [0, 0.7, 0.13634, 0, 0.89544],
            71: [0, 0.7, 0.17322, 0, 0.60961],
            72: [0, 0.7, 0.29694, 0, 0.96919],
            73: [0, 0.7, 0.19189, 0, 0.80907],
            74: [0.27778, 0.7, 0.19189, 0, 1.05159],
            75: [0, 0.7, 0.31259, 0, 0.91364],
            76: [0, 0.7, 0.19189, 0, 0.87373],
            77: [0, 0.7, 0.15981, 0, 1.08031],
            78: [0, 0.7, 0.3525, 0, 0.9015],
            79: [0, 0.7, 0.08078, 0, 0.73787],
            80: [0, 0.7, 0.08078, 0, 1.01262],
            81: [0, 0.7, 0.03305, 0, 0.88282],
            82: [0, 0.7, 0.06259, 0, 0.85],
            83: [0, 0.7, 0.19189, 0, 0.86767],
            84: [0, 0.7, 0.29087, 0, 0.74697],
            85: [0, 0.7, 0.25815, 0, 0.79996],
            86: [0, 0.7, 0.27523, 0, 0.62204],
            87: [0, 0.7, 0.27523, 0, 0.80532],
            88: [0, 0.7, 0.26006, 0, 0.94445],
            89: [0, 0.7, 0.2939, 0, 0.70961],
            90: [0, 0.7, 0.24037, 0, 0.8212],
          },
          'Size1-Regular': {
            40: [0.35001, 0.85, 0, 0, 0.45834],
            41: [0.35001, 0.85, 0, 0, 0.45834],
            47: [0.35001, 0.85, 0, 0, 0.57778],
            91: [0.35001, 0.85, 0, 0, 0.41667],
            92: [0.35001, 0.85, 0, 0, 0.57778],
            93: [0.35001, 0.85, 0, 0, 0.41667],
            123: [0.35001, 0.85, 0, 0, 0.58334],
            125: [0.35001, 0.85, 0, 0, 0.58334],
            710: [0, 0.72222, 0, 0, 0.55556],
            732: [0, 0.72222, 0, 0, 0.55556],
            770: [0, 0.72222, 0, 0, 0.55556],
            771: [0, 0.72222, 0, 0, 0.55556],
            8214: [-99e-5, 0.601, 0, 0, 0.77778],
            8593: [1e-5, 0.6, 0, 0, 0.66667],
            8595: [1e-5, 0.6, 0, 0, 0.66667],
            8657: [1e-5, 0.6, 0, 0, 0.77778],
            8659: [1e-5, 0.6, 0, 0, 0.77778],
            8719: [0.25001, 0.75, 0, 0, 0.94445],
            8720: [0.25001, 0.75, 0, 0, 0.94445],
            8721: [0.25001, 0.75, 0, 0, 1.05556],
            8730: [0.35001, 0.85, 0, 0, 1],
            8739: [-0.00599, 0.606, 0, 0, 0.33333],
            8741: [-0.00599, 0.606, 0, 0, 0.55556],
            8747: [0.30612, 0.805, 0.19445, 0, 0.47222],
            8748: [0.306, 0.805, 0.19445, 0, 0.47222],
            8749: [0.306, 0.805, 0.19445, 0, 0.47222],
            8750: [0.30612, 0.805, 0.19445, 0, 0.47222],
            8896: [0.25001, 0.75, 0, 0, 0.83334],
            8897: [0.25001, 0.75, 0, 0, 0.83334],
            8898: [0.25001, 0.75, 0, 0, 0.83334],
            8899: [0.25001, 0.75, 0, 0, 0.83334],
            8968: [0.35001, 0.85, 0, 0, 0.47222],
            8969: [0.35001, 0.85, 0, 0, 0.47222],
            8970: [0.35001, 0.85, 0, 0, 0.47222],
            8971: [0.35001, 0.85, 0, 0, 0.47222],
            9168: [-99e-5, 0.601, 0, 0, 0.66667],
            10216: [0.35001, 0.85, 0, 0, 0.47222],
            10217: [0.35001, 0.85, 0, 0, 0.47222],
            10752: [0.25001, 0.75, 0, 0, 1.11111],
            10753: [0.25001, 0.75, 0, 0, 1.11111],
            10754: [0.25001, 0.75, 0, 0, 1.11111],
            10756: [0.25001, 0.75, 0, 0, 0.83334],
            10758: [0.25001, 0.75, 0, 0, 0.83334],
          },
          'Size2-Regular': {
            40: [0.65002, 1.15, 0, 0, 0.59722],
            41: [0.65002, 1.15, 0, 0, 0.59722],
            47: [0.65002, 1.15, 0, 0, 0.81111],
            91: [0.65002, 1.15, 0, 0, 0.47222],
            92: [0.65002, 1.15, 0, 0, 0.81111],
            93: [0.65002, 1.15, 0, 0, 0.47222],
            123: [0.65002, 1.15, 0, 0, 0.66667],
            125: [0.65002, 1.15, 0, 0, 0.66667],
            710: [0, 0.75, 0, 0, 1],
            732: [0, 0.75, 0, 0, 1],
            770: [0, 0.75, 0, 0, 1],
            771: [0, 0.75, 0, 0, 1],
            8719: [0.55001, 1.05, 0, 0, 1.27778],
            8720: [0.55001, 1.05, 0, 0, 1.27778],
            8721: [0.55001, 1.05, 0, 0, 1.44445],
            8730: [0.65002, 1.15, 0, 0, 1],
            8747: [0.86225, 1.36, 0.44445, 0, 0.55556],
            8748: [0.862, 1.36, 0.44445, 0, 0.55556],
            8749: [0.862, 1.36, 0.44445, 0, 0.55556],
            8750: [0.86225, 1.36, 0.44445, 0, 0.55556],
            8896: [0.55001, 1.05, 0, 0, 1.11111],
            8897: [0.55001, 1.05, 0, 0, 1.11111],
            8898: [0.55001, 1.05, 0, 0, 1.11111],
            8899: [0.55001, 1.05, 0, 0, 1.11111],
            8968: [0.65002, 1.15, 0, 0, 0.52778],
            8969: [0.65002, 1.15, 0, 0, 0.52778],
            8970: [0.65002, 1.15, 0, 0, 0.52778],
            8971: [0.65002, 1.15, 0, 0, 0.52778],
            10216: [0.65002, 1.15, 0, 0, 0.61111],
            10217: [0.65002, 1.15, 0, 0, 0.61111],
            10752: [0.55001, 1.05, 0, 0, 1.51112],
            10753: [0.55001, 1.05, 0, 0, 1.51112],
            10754: [0.55001, 1.05, 0, 0, 1.51112],
            10756: [0.55001, 1.05, 0, 0, 1.11111],
            10758: [0.55001, 1.05, 0, 0, 1.11111],
          },
          'Size3-Regular': {
            40: [0.95003, 1.45, 0, 0, 0.73611],
            41: [0.95003, 1.45, 0, 0, 0.73611],
            47: [0.95003, 1.45, 0, 0, 1.04445],
            91: [0.95003, 1.45, 0, 0, 0.52778],
            92: [0.95003, 1.45, 0, 0, 1.04445],
            93: [0.95003, 1.45, 0, 0, 0.52778],
            123: [0.95003, 1.45, 0, 0, 0.75],
            125: [0.95003, 1.45, 0, 0, 0.75],
            710: [0, 0.75, 0, 0, 1.44445],
            732: [0, 0.75, 0, 0, 1.44445],
            770: [0, 0.75, 0, 0, 1.44445],
            771: [0, 0.75, 0, 0, 1.44445],
            8730: [0.95003, 1.45, 0, 0, 1],
            8968: [0.95003, 1.45, 0, 0, 0.58334],
            8969: [0.95003, 1.45, 0, 0, 0.58334],
            8970: [0.95003, 1.45, 0, 0, 0.58334],
            8971: [0.95003, 1.45, 0, 0, 0.58334],
            10216: [0.95003, 1.45, 0, 0, 0.75],
            10217: [0.95003, 1.45, 0, 0, 0.75],
          },
          'Size4-Regular': {
            40: [1.25003, 1.75, 0, 0, 0.79167],
            41: [1.25003, 1.75, 0, 0, 0.79167],
            47: [1.25003, 1.75, 0, 0, 1.27778],
            91: [1.25003, 1.75, 0, 0, 0.58334],
            92: [1.25003, 1.75, 0, 0, 1.27778],
            93: [1.25003, 1.75, 0, 0, 0.58334],
            123: [1.25003, 1.75, 0, 0, 0.80556],
            125: [1.25003, 1.75, 0, 0, 0.80556],
            710: [0, 0.825, 0, 0, 1.8889],
            732: [0, 0.825, 0, 0, 1.8889],
            770: [0, 0.825, 0, 0, 1.8889],
            771: [0, 0.825, 0, 0, 1.8889],
            8730: [1.25003, 1.75, 0, 0, 1],
            8968: [1.25003, 1.75, 0, 0, 0.63889],
            8969: [1.25003, 1.75, 0, 0, 0.63889],
            8970: [1.25003, 1.75, 0, 0, 0.63889],
            8971: [1.25003, 1.75, 0, 0, 0.63889],
            9115: [0.64502, 1.155, 0, 0, 0.875],
            9116: [1e-5, 0.6, 0, 0, 0.875],
            9117: [0.64502, 1.155, 0, 0, 0.875],
            9118: [0.64502, 1.155, 0, 0, 0.875],
            9119: [1e-5, 0.6, 0, 0, 0.875],
            9120: [0.64502, 1.155, 0, 0, 0.875],
            9121: [0.64502, 1.155, 0, 0, 0.66667],
            9122: [-99e-5, 0.601, 0, 0, 0.66667],
            9123: [0.64502, 1.155, 0, 0, 0.66667],
            9124: [0.64502, 1.155, 0, 0, 0.66667],
            9125: [-99e-5, 0.601, 0, 0, 0.66667],
            9126: [0.64502, 1.155, 0, 0, 0.66667],
            9127: [1e-5, 0.9, 0, 0, 0.88889],
            9128: [0.65002, 1.15, 0, 0, 0.88889],
            9129: [0.90001, 0, 0, 0, 0.88889],
            9130: [0, 0.3, 0, 0, 0.88889],
            9131: [1e-5, 0.9, 0, 0, 0.88889],
            9132: [0.65002, 1.15, 0, 0, 0.88889],
            9133: [0.90001, 0, 0, 0, 0.88889],
            9143: [0.88502, 0.915, 0, 0, 1.05556],
            10216: [1.25003, 1.75, 0, 0, 0.80556],
            10217: [1.25003, 1.75, 0, 0, 0.80556],
            57344: [-0.00499, 0.605, 0, 0, 1.05556],
            57345: [-0.00499, 0.605, 0, 0, 1.05556],
            57680: [0, 0.12, 0, 0, 0.45],
            57681: [0, 0.12, 0, 0, 0.45],
            57682: [0, 0.12, 0, 0, 0.45],
            57683: [0, 0.12, 0, 0, 0.45],
          },
          'Typewriter-Regular': {
            32: [0, 0, 0, 0, 0.525],
            33: [0, 0.61111, 0, 0, 0.525],
            34: [0, 0.61111, 0, 0, 0.525],
            35: [0, 0.61111, 0, 0, 0.525],
            36: [0.08333, 0.69444, 0, 0, 0.525],
            37: [0.08333, 0.69444, 0, 0, 0.525],
            38: [0, 0.61111, 0, 0, 0.525],
            39: [0, 0.61111, 0, 0, 0.525],
            40: [0.08333, 0.69444, 0, 0, 0.525],
            41: [0.08333, 0.69444, 0, 0, 0.525],
            42: [0, 0.52083, 0, 0, 0.525],
            43: [-0.08056, 0.53055, 0, 0, 0.525],
            44: [0.13889, 0.125, 0, 0, 0.525],
            45: [-0.08056, 0.53055, 0, 0, 0.525],
            46: [0, 0.125, 0, 0, 0.525],
            47: [0.08333, 0.69444, 0, 0, 0.525],
            48: [0, 0.61111, 0, 0, 0.525],
            49: [0, 0.61111, 0, 0, 0.525],
            50: [0, 0.61111, 0, 0, 0.525],
            51: [0, 0.61111, 0, 0, 0.525],
            52: [0, 0.61111, 0, 0, 0.525],
            53: [0, 0.61111, 0, 0, 0.525],
            54: [0, 0.61111, 0, 0, 0.525],
            55: [0, 0.61111, 0, 0, 0.525],
            56: [0, 0.61111, 0, 0, 0.525],
            57: [0, 0.61111, 0, 0, 0.525],
            58: [0, 0.43056, 0, 0, 0.525],
            59: [0.13889, 0.43056, 0, 0, 0.525],
            60: [-0.05556, 0.55556, 0, 0, 0.525],
            61: [-0.19549, 0.41562, 0, 0, 0.525],
            62: [-0.05556, 0.55556, 0, 0, 0.525],
            63: [0, 0.61111, 0, 0, 0.525],
            64: [0, 0.61111, 0, 0, 0.525],
            65: [0, 0.61111, 0, 0, 0.525],
            66: [0, 0.61111, 0, 0, 0.525],
            67: [0, 0.61111, 0, 0, 0.525],
            68: [0, 0.61111, 0, 0, 0.525],
            69: [0, 0.61111, 0, 0, 0.525],
            70: [0, 0.61111, 0, 0, 0.525],
            71: [0, 0.61111, 0, 0, 0.525],
            72: [0, 0.61111, 0, 0, 0.525],
            73: [0, 0.61111, 0, 0, 0.525],
            74: [0, 0.61111, 0, 0, 0.525],
            75: [0, 0.61111, 0, 0, 0.525],
            76: [0, 0.61111, 0, 0, 0.525],
            77: [0, 0.61111, 0, 0, 0.525],
            78: [0, 0.61111, 0, 0, 0.525],
            79: [0, 0.61111, 0, 0, 0.525],
            80: [0, 0.61111, 0, 0, 0.525],
            81: [0.13889, 0.61111, 0, 0, 0.525],
            82: [0, 0.61111, 0, 0, 0.525],
            83: [0, 0.61111, 0, 0, 0.525],
            84: [0, 0.61111, 0, 0, 0.525],
            85: [0, 0.61111, 0, 0, 0.525],
            86: [0, 0.61111, 0, 0, 0.525],
            87: [0, 0.61111, 0, 0, 0.525],
            88: [0, 0.61111, 0, 0, 0.525],
            89: [0, 0.61111, 0, 0, 0.525],
            90: [0, 0.61111, 0, 0, 0.525],
            91: [0.08333, 0.69444, 0, 0, 0.525],
            92: [0.08333, 0.69444, 0, 0, 0.525],
            93: [0.08333, 0.69444, 0, 0, 0.525],
            94: [0, 0.61111, 0, 0, 0.525],
            95: [0.09514, 0, 0, 0, 0.525],
            96: [0, 0.61111, 0, 0, 0.525],
            97: [0, 0.43056, 0, 0, 0.525],
            98: [0, 0.61111, 0, 0, 0.525],
            99: [0, 0.43056, 0, 0, 0.525],
            100: [0, 0.61111, 0, 0, 0.525],
            101: [0, 0.43056, 0, 0, 0.525],
            102: [0, 0.61111, 0, 0, 0.525],
            103: [0.22222, 0.43056, 0, 0, 0.525],
            104: [0, 0.61111, 0, 0, 0.525],
            105: [0, 0.61111, 0, 0, 0.525],
            106: [0.22222, 0.61111, 0, 0, 0.525],
            107: [0, 0.61111, 0, 0, 0.525],
            108: [0, 0.61111, 0, 0, 0.525],
            109: [0, 0.43056, 0, 0, 0.525],
            110: [0, 0.43056, 0, 0, 0.525],
            111: [0, 0.43056, 0, 0, 0.525],
            112: [0.22222, 0.43056, 0, 0, 0.525],
            113: [0.22222, 0.43056, 0, 0, 0.525],
            114: [0, 0.43056, 0, 0, 0.525],
            115: [0, 0.43056, 0, 0, 0.525],
            116: [0, 0.55358, 0, 0, 0.525],
            117: [0, 0.43056, 0, 0, 0.525],
            118: [0, 0.43056, 0, 0, 0.525],
            119: [0, 0.43056, 0, 0, 0.525],
            120: [0, 0.43056, 0, 0, 0.525],
            121: [0.22222, 0.43056, 0, 0, 0.525],
            122: [0, 0.43056, 0, 0, 0.525],
            123: [0.08333, 0.69444, 0, 0, 0.525],
            124: [0.08333, 0.69444, 0, 0, 0.525],
            125: [0.08333, 0.69444, 0, 0, 0.525],
            126: [0, 0.61111, 0, 0, 0.525],
            127: [0, 0.61111, 0, 0, 0.525],
            160: [0, 0, 0, 0, 0.525],
            176: [0, 0.61111, 0, 0, 0.525],
            184: [0.19445, 0, 0, 0, 0.525],
            305: [0, 0.43056, 0, 0, 0.525],
            567: [0.22222, 0.43056, 0, 0, 0.525],
            711: [0, 0.56597, 0, 0, 0.525],
            713: [0, 0.56555, 0, 0, 0.525],
            714: [0, 0.61111, 0, 0, 0.525],
            715: [0, 0.61111, 0, 0, 0.525],
            728: [0, 0.61111, 0, 0, 0.525],
            730: [0, 0.61111, 0, 0, 0.525],
            770: [0, 0.61111, 0, 0, 0.525],
            771: [0, 0.61111, 0, 0, 0.525],
            776: [0, 0.61111, 0, 0, 0.525],
            915: [0, 0.61111, 0, 0, 0.525],
            916: [0, 0.61111, 0, 0, 0.525],
            920: [0, 0.61111, 0, 0, 0.525],
            923: [0, 0.61111, 0, 0, 0.525],
            926: [0, 0.61111, 0, 0, 0.525],
            928: [0, 0.61111, 0, 0, 0.525],
            931: [0, 0.61111, 0, 0, 0.525],
            933: [0, 0.61111, 0, 0, 0.525],
            934: [0, 0.61111, 0, 0, 0.525],
            936: [0, 0.61111, 0, 0, 0.525],
            937: [0, 0.61111, 0, 0, 0.525],
            8216: [0, 0.61111, 0, 0, 0.525],
            8217: [0, 0.61111, 0, 0, 0.525],
            8242: [0, 0.61111, 0, 0, 0.525],
            9251: [0.11111, 0.21944, 0, 0, 0.525],
          },
        },
        ue = {
          slant: [0.25, 0.25, 0.25],
          space: [0, 0, 0],
          stretch: [0, 0, 0],
          shrink: [0, 0, 0],
          xHeight: [0.431, 0.431, 0.431],
          quad: [1, 1.171, 1.472],
          extraSpace: [0, 0, 0],
          num1: [0.677, 0.732, 0.925],
          num2: [0.394, 0.384, 0.387],
          num3: [0.444, 0.471, 0.504],
          denom1: [0.686, 0.752, 1.025],
          denom2: [0.345, 0.344, 0.532],
          sup1: [0.413, 0.503, 0.504],
          sup2: [0.363, 0.431, 0.404],
          sup3: [0.289, 0.286, 0.294],
          sub1: [0.15, 0.143, 0.2],
          sub2: [0.247, 0.286, 0.4],
          supDrop: [0.386, 0.353, 0.494],
          subDrop: [0.05, 0.071, 0.1],
          delim1: [2.39, 1.7, 1.98],
          delim2: [1.01, 1.157, 1.42],
          axisHeight: [0.25, 0.25, 0.25],
          defaultRuleThickness: [0.04, 0.049, 0.049],
          bigOpSpacing1: [0.111, 0.111, 0.111],
          bigOpSpacing2: [0.166, 0.166, 0.166],
          bigOpSpacing3: [0.2, 0.2, 0.2],
          bigOpSpacing4: [0.6, 0.611, 0.611],
          bigOpSpacing5: [0.1, 0.143, 0.143],
          sqrtRuleThickness: [0.04, 0.04, 0.04],
          ptPerEm: [10, 10, 10],
          doubleRuleSep: [0.2, 0.2, 0.2],
        },
        he = {
          Å: 'A',
          Ç: 'C',
          Ð: 'D',
          Þ: 'o',
          å: 'a',
          ç: 'c',
          ð: 'd',
          þ: 'o',
          А: 'A',
          Б: 'B',
          В: 'B',
          Г: 'F',
          Д: 'A',
          Е: 'E',
          Ж: 'K',
          З: '3',
          И: 'N',
          Й: 'N',
          К: 'K',
          Л: 'N',
          М: 'M',
          Н: 'H',
          О: 'O',
          П: 'N',
          Р: 'P',
          С: 'C',
          Т: 'T',
          У: 'y',
          Ф: 'O',
          Х: 'X',
          Ц: 'U',
          Ч: 'h',
          Ш: 'W',
          Щ: 'W',
          Ъ: 'B',
          Ы: 'X',
          Ь: 'B',
          Э: '3',
          Ю: 'X',
          Я: 'R',
          а: 'a',
          б: 'b',
          в: 'a',
          г: 'r',
          д: 'y',
          е: 'e',
          ж: 'm',
          з: 'e',
          и: 'n',
          й: 'n',
          к: 'n',
          л: 'n',
          м: 'm',
          н: 'n',
          о: 'o',
          п: 'n',
          р: 'p',
          с: 'c',
          т: 'o',
          у: 'y',
          ф: 'b',
          х: 'x',
          ц: 'n',
          ч: 'n',
          ш: 'w',
          щ: 'w',
          ъ: 'a',
          ы: 'm',
          ь: 'a',
          э: 'e',
          ю: 'm',
          я: 'r',
        };
      function ce(e, t, r) {
        if (!le[t])
          throw new Error('Font metrics not found for font: ' + t + '.');
        var n = e.charCodeAt(0);
        e[0] in he && (n = he[e[0]].charCodeAt(0));
        var a = le[t][n];
        if ((a || 'text' !== r || ($(n) && (a = le[t][77])), a))
          return {
            depth: a[0],
            height: a[1],
            italic: a[2],
            skew: a[3],
            width: a[4],
          };
      }
      var me = {};
      var pe = {
          'accent-token': 1,
          bin: 1,
          close: 1,
          inner: 1,
          mathord: 1,
          'op-token': 1,
          open: 1,
          punct: 1,
          rel: 1,
          spacing: 1,
          textord: 1,
        },
        de = { math: {}, text: {} },
        fe = de;
      function ve(e, t, r, n, a, i) {
        (de[e][a] = { font: t, group: r, replace: n }),
          i && n && (de[e][n] = de[e][a]);
      }
      var ge = 'main',
        ye = 'ams',
        xe = 'bin',
        be = 'mathord',
        we = 'op-token',
        ke = 'rel',
        Se = 'spacing';
      ve('math', ge, ke, '\u2261', '\\equiv', !0),
        ve('math', ge, ke, '\u227a', '\\prec', !0),
        ve('math', ge, ke, '\u227b', '\\succ', !0),
        ve('math', ge, ke, '\u223c', '\\sim', !0),
        ve('math', ge, ke, '\u22a5', '\\perp'),
        ve('math', ge, ke, '\u2aaf', '\\preceq', !0),
        ve('math', ge, ke, '\u2ab0', '\\succeq', !0),
        ve('math', ge, ke, '\u2243', '\\simeq', !0),
        ve('math', ge, ke, '\u2223', '\\mid', !0),
        ve('math', ge, ke, '\u226a', '\\ll', !0),
        ve('math', ge, ke, '\u226b', '\\gg', !0),
        ve('math', ge, ke, '\u224d', '\\asymp', !0),
        ve('math', ge, ke, '\u2225', '\\parallel'),
        ve('math', ge, ke, '\u22c8', '\\bowtie', !0),
        ve('math', ge, ke, '\u2323', '\\smile', !0),
        ve('math', ge, ke, '\u2291', '\\sqsubseteq', !0),
        ve('math', ge, ke, '\u2292', '\\sqsupseteq', !0),
        ve('math', ge, ke, '\u2250', '\\doteq', !0),
        ve('math', ge, ke, '\u2322', '\\frown', !0),
        ve('math', ge, ke, '\u220b', '\\ni', !0),
        ve('math', ge, ke, '\u221d', '\\propto', !0),
        ve('math', ge, ke, '\u22a2', '\\vdash', !0),
        ve('math', ge, ke, '\u22a3', '\\dashv', !0),
        ve('math', ge, ke, '\u220b', '\\owns'),
        ve('math', ge, 'punct', '.', '\\ldotp'),
        ve('math', ge, 'punct', '\u22c5', '\\cdotp'),
        ve('math', ge, 'textord', '#', '\\#'),
        ve('text', ge, 'textord', '#', '\\#'),
        ve('math', ge, 'textord', '&', '\\&'),
        ve('text', ge, 'textord', '&', '\\&'),
        ve('math', ge, 'textord', '\u2135', '\\aleph', !0),
        ve('math', ge, 'textord', '\u2200', '\\forall', !0),
        ve('math', ge, 'textord', '\u210f', '\\hbar', !0),
        ve('math', ge, 'textord', '\u2203', '\\exists', !0),
        ve('math', ge, 'textord', '\u2207', '\\nabla', !0),
        ve('math', ge, 'textord', '\u266d', '\\flat', !0),
        ve('math', ge, 'textord', '\u2113', '\\ell', !0),
        ve('math', ge, 'textord', '\u266e', '\\natural', !0),
        ve('math', ge, 'textord', '\u2663', '\\clubsuit', !0),
        ve('math', ge, 'textord', '\u2118', '\\wp', !0),
        ve('math', ge, 'textord', '\u266f', '\\sharp', !0),
        ve('math', ge, 'textord', '\u2662', '\\diamondsuit', !0),
        ve('math', ge, 'textord', '\u211c', '\\Re', !0),
        ve('math', ge, 'textord', '\u2661', '\\heartsuit', !0),
        ve('math', ge, 'textord', '\u2111', '\\Im', !0),
        ve('math', ge, 'textord', '\u2660', '\\spadesuit', !0),
        ve('text', ge, 'textord', '\xa7', '\\S', !0),
        ve('text', ge, 'textord', '\xb6', '\\P', !0),
        ve('math', ge, 'textord', '\u2020', '\\dag'),
        ve('text', ge, 'textord', '\u2020', '\\dag'),
        ve('text', ge, 'textord', '\u2020', '\\textdagger'),
        ve('math', ge, 'textord', '\u2021', '\\ddag'),
        ve('text', ge, 'textord', '\u2021', '\\ddag'),
        ve('text', ge, 'textord', '\u2020', '\\textdaggerdbl'),
        ve('math', ge, 'close', '\u23b1', '\\rmoustache', !0),
        ve('math', ge, 'open', '\u23b0', '\\lmoustache', !0),
        ve('math', ge, 'close', '\u27ef', '\\rgroup', !0),
        ve('math', ge, 'open', '\u27ee', '\\lgroup', !0),
        ve('math', ge, xe, '\u2213', '\\mp', !0),
        ve('math', ge, xe, '\u2296', '\\ominus', !0),
        ve('math', ge, xe, '\u228e', '\\uplus', !0),
        ve('math', ge, xe, '\u2293', '\\sqcap', !0),
        ve('math', ge, xe, '\u2217', '\\ast'),
        ve('math', ge, xe, '\u2294', '\\sqcup', !0),
        ve('math', ge, xe, '\u25ef', '\\bigcirc'),
        ve('math', ge, xe, '\u2219', '\\bullet'),
        ve('math', ge, xe, '\u2021', '\\ddagger'),
        ve('math', ge, xe, '\u2240', '\\wr', !0),
        ve('math', ge, xe, '\u2a3f', '\\amalg'),
        ve('math', ge, xe, '&', '\\And'),
        ve('math', ge, ke, '\u27f5', '\\longleftarrow', !0),
        ve('math', ge, ke, '\u21d0', '\\Leftarrow', !0),
        ve('math', ge, ke, '\u27f8', '\\Longleftarrow', !0),
        ve('math', ge, ke, '\u27f6', '\\longrightarrow', !0),
        ve('math', ge, ke, '\u21d2', '\\Rightarrow', !0),
        ve('math', ge, ke, '\u27f9', '\\Longrightarrow', !0),
        ve('math', ge, ke, '\u2194', '\\leftrightarrow', !0),
        ve('math', ge, ke, '\u27f7', '\\longleftrightarrow', !0),
        ve('math', ge, ke, '\u21d4', '\\Leftrightarrow', !0),
        ve('math', ge, ke, '\u27fa', '\\Longleftrightarrow', !0),
        ve('math', ge, ke, '\u21a6', '\\mapsto', !0),
        ve('math', ge, ke, '\u27fc', '\\longmapsto', !0),
        ve('math', ge, ke, '\u2197', '\\nearrow', !0),
        ve('math', ge, ke, '\u21a9', '\\hookleftarrow', !0),
        ve('math', ge, ke, '\u21aa', '\\hookrightarrow', !0),
        ve('math', ge, ke, '\u2198', '\\searrow', !0),
        ve('math', ge, ke, '\u21bc', '\\leftharpoonup', !0),
        ve('math', ge, ke, '\u21c0', '\\rightharpoonup', !0),
        ve('math', ge, ke, '\u2199', '\\swarrow', !0),
        ve('math', ge, ke, '\u21bd', '\\leftharpoondown', !0),
        ve('math', ge, ke, '\u21c1', '\\rightharpoondown', !0),
        ve('math', ge, ke, '\u2196', '\\nwarrow', !0),
        ve('math', ge, ke, '\u21cc', '\\rightleftharpoons', !0),
        ve('math', ye, ke, '\u226e', '\\nless', !0),
        ve('math', ye, ke, '\ue010', '\\nleqslant'),
        ve('math', ye, ke, '\ue011', '\\nleqq'),
        ve('math', ye, ke, '\u2a87', '\\lneq', !0),
        ve('math', ye, ke, '\u2268', '\\lneqq', !0),
        ve('math', ye, ke, '\ue00c', '\\lvertneqq'),
        ve('math', ye, ke, '\u22e6', '\\lnsim', !0),
        ve('math', ye, ke, '\u2a89', '\\lnapprox', !0),
        ve('math', ye, ke, '\u2280', '\\nprec', !0),
        ve('math', ye, ke, '\u22e0', '\\npreceq', !0),
        ve('math', ye, ke, '\u22e8', '\\precnsim', !0),
        ve('math', ye, ke, '\u2ab9', '\\precnapprox', !0),
        ve('math', ye, ke, '\u2241', '\\nsim', !0),
        ve('math', ye, ke, '\ue006', '\\nshortmid'),
        ve('math', ye, ke, '\u2224', '\\nmid', !0),
        ve('math', ye, ke, '\u22ac', '\\nvdash', !0),
        ve('math', ye, ke, '\u22ad', '\\nvDash', !0),
        ve('math', ye, ke, '\u22ea', '\\ntriangleleft'),
        ve('math', ye, ke, '\u22ec', '\\ntrianglelefteq', !0),
        ve('math', ye, ke, '\u228a', '\\subsetneq', !0),
        ve('math', ye, ke, '\ue01a', '\\varsubsetneq'),
        ve('math', ye, ke, '\u2acb', '\\subsetneqq', !0),
        ve('math', ye, ke, '\ue017', '\\varsubsetneqq'),
        ve('math', ye, ke, '\u226f', '\\ngtr', !0),
        ve('math', ye, ke, '\ue00f', '\\ngeqslant'),
        ve('math', ye, ke, '\ue00e', '\\ngeqq'),
        ve('math', ye, ke, '\u2a88', '\\gneq', !0),
        ve('math', ye, ke, '\u2269', '\\gneqq', !0),
        ve('math', ye, ke, '\ue00d', '\\gvertneqq'),
        ve('math', ye, ke, '\u22e7', '\\gnsim', !0),
        ve('math', ye, ke, '\u2a8a', '\\gnapprox', !0),
        ve('math', ye, ke, '\u2281', '\\nsucc', !0),
        ve('math', ye, ke, '\u22e1', '\\nsucceq', !0),
        ve('math', ye, ke, '\u22e9', '\\succnsim', !0),
        ve('math', ye, ke, '\u2aba', '\\succnapprox', !0),
        ve('math', ye, ke, '\u2246', '\\ncong', !0),
        ve('math', ye, ke, '\ue007', '\\nshortparallel'),
        ve('math', ye, ke, '\u2226', '\\nparallel', !0),
        ve('math', ye, ke, '\u22af', '\\nVDash', !0),
        ve('math', ye, ke, '\u22eb', '\\ntriangleright'),
        ve('math', ye, ke, '\u22ed', '\\ntrianglerighteq', !0),
        ve('math', ye, ke, '\ue018', '\\nsupseteqq'),
        ve('math', ye, ke, '\u228b', '\\supsetneq', !0),
        ve('math', ye, ke, '\ue01b', '\\varsupsetneq'),
        ve('math', ye, ke, '\u2acc', '\\supsetneqq', !0),
        ve('math', ye, ke, '\ue019', '\\varsupsetneqq'),
        ve('math', ye, ke, '\u22ae', '\\nVdash', !0),
        ve('math', ye, ke, '\u2ab5', '\\precneqq', !0),
        ve('math', ye, ke, '\u2ab6', '\\succneqq', !0),
        ve('math', ye, ke, '\ue016', '\\nsubseteqq'),
        ve('math', ye, xe, '\u22b4', '\\unlhd'),
        ve('math', ye, xe, '\u22b5', '\\unrhd'),
        ve('math', ye, ke, '\u219a', '\\nleftarrow', !0),
        ve('math', ye, ke, '\u219b', '\\nrightarrow', !0),
        ve('math', ye, ke, '\u21cd', '\\nLeftarrow', !0),
        ve('math', ye, ke, '\u21cf', '\\nRightarrow', !0),
        ve('math', ye, ke, '\u21ae', '\\nleftrightarrow', !0),
        ve('math', ye, ke, '\u21ce', '\\nLeftrightarrow', !0),
        ve('math', ye, ke, '\u25b3', '\\vartriangle'),
        ve('math', ye, 'textord', '\u210f', '\\hslash'),
        ve('math', ye, 'textord', '\u25bd', '\\triangledown'),
        ve('math', ye, 'textord', '\u25ca', '\\lozenge'),
        ve('math', ye, 'textord', '\u24c8', '\\circledS'),
        ve('math', ye, 'textord', '\xae', '\\circledR'),
        ve('text', ye, 'textord', '\xae', '\\circledR'),
        ve('math', ye, 'textord', '\u2221', '\\measuredangle', !0),
        ve('math', ye, 'textord', '\u2204', '\\nexists'),
        ve('math', ye, 'textord', '\u2127', '\\mho'),
        ve('math', ye, 'textord', '\u2132', '\\Finv', !0),
        ve('math', ye, 'textord', '\u2141', '\\Game', !0),
        ve('math', ye, 'textord', 'k', '\\Bbbk'),
        ve('math', ye, 'textord', '\u2035', '\\backprime'),
        ve('math', ye, 'textord', '\u25b2', '\\blacktriangle'),
        ve('math', ye, 'textord', '\u25bc', '\\blacktriangledown'),
        ve('math', ye, 'textord', '\u25a0', '\\blacksquare'),
        ve('math', ye, 'textord', '\u29eb', '\\blacklozenge'),
        ve('math', ye, 'textord', '\u2605', '\\bigstar'),
        ve('math', ye, 'textord', '\u2222', '\\sphericalangle', !0),
        ve('math', ye, 'textord', '\u2201', '\\complement', !0),
        ve('math', ye, 'textord', '\xf0', '\\eth', !0),
        ve('math', ye, 'textord', '\u2571', '\\diagup'),
        ve('math', ye, 'textord', '\u2572', '\\diagdown'),
        ve('math', ye, 'textord', '\u25a1', '\\square'),
        ve('math', ye, 'textord', '\u25a1', '\\Box'),
        ve('math', ye, 'textord', '\u25ca', '\\Diamond'),
        ve('math', ye, 'textord', '\xa5', '\\yen', !0),
        ve('text', ye, 'textord', '\xa5', '\\yen', !0),
        ve('math', ye, 'textord', '\u2713', '\\checkmark', !0),
        ve('text', ye, 'textord', '\u2713', '\\checkmark'),
        ve('math', ye, 'textord', '\u2136', '\\beth', !0),
        ve('math', ye, 'textord', '\u2138', '\\daleth', !0),
        ve('math', ye, 'textord', '\u2137', '\\gimel', !0),
        ve('math', ye, 'textord', '\u03dd', '\\digamma'),
        ve('math', ye, 'textord', '\u03f0', '\\varkappa'),
        ve('math', ye, 'open', '\u250c', '\\ulcorner', !0),
        ve('math', ye, 'close', '\u2510', '\\urcorner', !0),
        ve('math', ye, 'open', '\u2514', '\\llcorner', !0),
        ve('math', ye, 'close', '\u2518', '\\lrcorner', !0),
        ve('math', ye, ke, '\u2266', '\\leqq', !0),
        ve('math', ye, ke, '\u2a7d', '\\leqslant', !0),
        ve('math', ye, ke, '\u2a95', '\\eqslantless', !0),
        ve('math', ye, ke, '\u2272', '\\lesssim', !0),
        ve('math', ye, ke, '\u2a85', '\\lessapprox', !0),
        ve('math', ye, ke, '\u224a', '\\approxeq', !0),
        ve('math', ye, xe, '\u22d6', '\\lessdot'),
        ve('math', ye, ke, '\u22d8', '\\lll', !0),
        ve('math', ye, ke, '\u2276', '\\lessgtr', !0),
        ve('math', ye, ke, '\u22da', '\\lesseqgtr', !0),
        ve('math', ye, ke, '\u2a8b', '\\lesseqqgtr', !0),
        ve('math', ye, ke, '\u2251', '\\doteqdot'),
        ve('math', ye, ke, '\u2253', '\\risingdotseq', !0),
        ve('math', ye, ke, '\u2252', '\\fallingdotseq', !0),
        ve('math', ye, ke, '\u223d', '\\backsim', !0),
        ve('math', ye, ke, '\u22cd', '\\backsimeq', !0),
        ve('math', ye, ke, '\u2ac5', '\\subseteqq', !0),
        ve('math', ye, ke, '\u22d0', '\\Subset', !0),
        ve('math', ye, ke, '\u228f', '\\sqsubset', !0),
        ve('math', ye, ke, '\u227c', '\\preccurlyeq', !0),
        ve('math', ye, ke, '\u22de', '\\curlyeqprec', !0),
        ve('math', ye, ke, '\u227e', '\\precsim', !0),
        ve('math', ye, ke, '\u2ab7', '\\precapprox', !0),
        ve('math', ye, ke, '\u22b2', '\\vartriangleleft'),
        ve('math', ye, ke, '\u22b4', '\\trianglelefteq'),
        ve('math', ye, ke, '\u22a8', '\\vDash', !0),
        ve('math', ye, ke, '\u22aa', '\\Vvdash', !0),
        ve('math', ye, ke, '\u2323', '\\smallsmile'),
        ve('math', ye, ke, '\u2322', '\\smallfrown'),
        ve('math', ye, ke, '\u224f', '\\bumpeq', !0),
        ve('math', ye, ke, '\u224e', '\\Bumpeq', !0),
        ve('math', ye, ke, '\u2267', '\\geqq', !0),
        ve('math', ye, ke, '\u2a7e', '\\geqslant', !0),
        ve('math', ye, ke, '\u2a96', '\\eqslantgtr', !0),
        ve('math', ye, ke, '\u2273', '\\gtrsim', !0),
        ve('math', ye, ke, '\u2a86', '\\gtrapprox', !0),
        ve('math', ye, xe, '\u22d7', '\\gtrdot'),
        ve('math', ye, ke, '\u22d9', '\\ggg', !0),
        ve('math', ye, ke, '\u2277', '\\gtrless', !0),
        ve('math', ye, ke, '\u22db', '\\gtreqless', !0),
        ve('math', ye, ke, '\u2a8c', '\\gtreqqless', !0),
        ve('math', ye, ke, '\u2256', '\\eqcirc', !0),
        ve('math', ye, ke, '\u2257', '\\circeq', !0),
        ve('math', ye, ke, '\u225c', '\\triangleq', !0),
        ve('math', ye, ke, '\u223c', '\\thicksim'),
        ve('math', ye, ke, '\u2248', '\\thickapprox'),
        ve('math', ye, ke, '\u2ac6', '\\supseteqq', !0),
        ve('math', ye, ke, '\u22d1', '\\Supset', !0),
        ve('math', ye, ke, '\u2290', '\\sqsupset', !0),
        ve('math', ye, ke, '\u227d', '\\succcurlyeq', !0),
        ve('math', ye, ke, '\u22df', '\\curlyeqsucc', !0),
        ve('math', ye, ke, '\u227f', '\\succsim', !0),
        ve('math', ye, ke, '\u2ab8', '\\succapprox', !0),
        ve('math', ye, ke, '\u22b3', '\\vartriangleright'),
        ve('math', ye, ke, '\u22b5', '\\trianglerighteq'),
        ve('math', ye, ke, '\u22a9', '\\Vdash', !0),
        ve('math', ye, ke, '\u2223', '\\shortmid'),
        ve('math', ye, ke, '\u2225', '\\shortparallel'),
        ve('math', ye, ke, '\u226c', '\\between', !0),
        ve('math', ye, ke, '\u22d4', '\\pitchfork', !0),
        ve('math', ye, ke, '\u221d', '\\varpropto'),
        ve('math', ye, ke, '\u25c0', '\\blacktriangleleft'),
        ve('math', ye, ke, '\u2234', '\\therefore', !0),
        ve('math', ye, ke, '\u220d', '\\backepsilon'),
        ve('math', ye, ke, '\u25b6', '\\blacktriangleright'),
        ve('math', ye, ke, '\u2235', '\\because', !0),
        ve('math', ye, ke, '\u22d8', '\\llless'),
        ve('math', ye, ke, '\u22d9', '\\gggtr'),
        ve('math', ye, xe, '\u22b2', '\\lhd'),
        ve('math', ye, xe, '\u22b3', '\\rhd'),
        ve('math', ye, ke, '\u2242', '\\eqsim', !0),
        ve('math', ge, ke, '\u22c8', '\\Join'),
        ve('math', ye, ke, '\u2251', '\\Doteq', !0),
        ve('math', ye, xe, '\u2214', '\\dotplus', !0),
        ve('math', ye, xe, '\u2216', '\\smallsetminus'),
        ve('math', ye, xe, '\u22d2', '\\Cap', !0),
        ve('math', ye, xe, '\u22d3', '\\Cup', !0),
        ve('math', ye, xe, '\u2a5e', '\\doublebarwedge', !0),
        ve('math', ye, xe, '\u229f', '\\boxminus', !0),
        ve('math', ye, xe, '\u229e', '\\boxplus', !0),
        ve('math', ye, xe, '\u22c7', '\\divideontimes', !0),
        ve('math', ye, xe, '\u22c9', '\\ltimes', !0),
        ve('math', ye, xe, '\u22ca', '\\rtimes', !0),
        ve('math', ye, xe, '\u22cb', '\\leftthreetimes', !0),
        ve('math', ye, xe, '\u22cc', '\\rightthreetimes', !0),
        ve('math', ye, xe, '\u22cf', '\\curlywedge', !0),
        ve('math', ye, xe, '\u22ce', '\\curlyvee', !0),
        ve('math', ye, xe, '\u229d', '\\circleddash', !0),
        ve('math', ye, xe, '\u229b', '\\circledast', !0),
        ve('math', ye, xe, '\u22c5', '\\centerdot'),
        ve('math', ye, xe, '\u22ba', '\\intercal', !0),
        ve('math', ye, xe, '\u22d2', '\\doublecap'),
        ve('math', ye, xe, '\u22d3', '\\doublecup'),
        ve('math', ye, xe, '\u22a0', '\\boxtimes', !0),
        ve('math', ye, ke, '\u21e2', '\\dashrightarrow', !0),
        ve('math', ye, ke, '\u21e0', '\\dashleftarrow', !0),
        ve('math', ye, ke, '\u21c7', '\\leftleftarrows', !0),
        ve('math', ye, ke, '\u21c6', '\\leftrightarrows', !0),
        ve('math', ye, ke, '\u21da', '\\Lleftarrow', !0),
        ve('math', ye, ke, '\u219e', '\\twoheadleftarrow', !0),
        ve('math', ye, ke, '\u21a2', '\\leftarrowtail', !0),
        ve('math', ye, ke, '\u21ab', '\\looparrowleft', !0),
        ve('math', ye, ke, '\u21cb', '\\leftrightharpoons', !0),
        ve('math', ye, ke, '\u21b6', '\\curvearrowleft', !0),
        ve('math', ye, ke, '\u21ba', '\\circlearrowleft', !0),
        ve('math', ye, ke, '\u21b0', '\\Lsh', !0),
        ve('math', ye, ke, '\u21c8', '\\upuparrows', !0),
        ve('math', ye, ke, '\u21bf', '\\upharpoonleft', !0),
        ve('math', ye, ke, '\u21c3', '\\downharpoonleft', !0),
        ve('math', ye, ke, '\u22b8', '\\multimap', !0),
        ve('math', ye, ke, '\u21ad', '\\leftrightsquigarrow', !0),
        ve('math', ye, ke, '\u21c9', '\\rightrightarrows', !0),
        ve('math', ye, ke, '\u21c4', '\\rightleftarrows', !0),
        ve('math', ye, ke, '\u21a0', '\\twoheadrightarrow', !0),
        ve('math', ye, ke, '\u21a3', '\\rightarrowtail', !0),
        ve('math', ye, ke, '\u21ac', '\\looparrowright', !0),
        ve('math', ye, ke, '\u21b7', '\\curvearrowright', !0),
        ve('math', ye, ke, '\u21bb', '\\circlearrowright', !0),
        ve('math', ye, ke, '\u21b1', '\\Rsh', !0),
        ve('math', ye, ke, '\u21ca', '\\downdownarrows', !0),
        ve('math', ye, ke, '\u21be', '\\upharpoonright', !0),
        ve('math', ye, ke, '\u21c2', '\\downharpoonright', !0),
        ve('math', ye, ke, '\u21dd', '\\rightsquigarrow', !0),
        ve('math', ye, ke, '\u21dd', '\\leadsto'),
        ve('math', ye, ke, '\u21db', '\\Rrightarrow', !0),
        ve('math', ye, ke, '\u21be', '\\restriction'),
        ve('math', ge, 'textord', '\u2018', '`'),
        ve('math', ge, 'textord', '$', '\\$'),
        ve('text', ge, 'textord', '$', '\\$'),
        ve('text', ge, 'textord', '$', '\\textdollar'),
        ve('math', ge, 'textord', '%', '\\%'),
        ve('text', ge, 'textord', '%', '\\%'),
        ve('math', ge, 'textord', '_', '\\_'),
        ve('text', ge, 'textord', '_', '\\_'),
        ve('text', ge, 'textord', '_', '\\textunderscore'),
        ve('math', ge, 'textord', '\u2220', '\\angle', !0),
        ve('math', ge, 'textord', '\u221e', '\\infty', !0),
        ve('math', ge, 'textord', '\u2032', '\\prime'),
        ve('math', ge, 'textord', '\u25b3', '\\triangle'),
        ve('math', ge, 'textord', '\u0393', '\\Gamma', !0),
        ve('math', ge, 'textord', '\u0394', '\\Delta', !0),
        ve('math', ge, 'textord', '\u0398', '\\Theta', !0),
        ve('math', ge, 'textord', '\u039b', '\\Lambda', !0),
        ve('math', ge, 'textord', '\u039e', '\\Xi', !0),
        ve('math', ge, 'textord', '\u03a0', '\\Pi', !0),
        ve('math', ge, 'textord', '\u03a3', '\\Sigma', !0),
        ve('math', ge, 'textord', '\u03a5', '\\Upsilon', !0),
        ve('math', ge, 'textord', '\u03a6', '\\Phi', !0),
        ve('math', ge, 'textord', '\u03a8', '\\Psi', !0),
        ve('math', ge, 'textord', '\u03a9', '\\Omega', !0),
        ve('math', ge, 'textord', 'A', '\u0391'),
        ve('math', ge, 'textord', 'B', '\u0392'),
        ve('math', ge, 'textord', 'E', '\u0395'),
        ve('math', ge, 'textord', 'Z', '\u0396'),
        ve('math', ge, 'textord', 'H', '\u0397'),
        ve('math', ge, 'textord', 'I', '\u0399'),
        ve('math', ge, 'textord', 'K', '\u039a'),
        ve('math', ge, 'textord', 'M', '\u039c'),
        ve('math', ge, 'textord', 'N', '\u039d'),
        ve('math', ge, 'textord', 'O', '\u039f'),
        ve('math', ge, 'textord', 'P', '\u03a1'),
        ve('math', ge, 'textord', 'T', '\u03a4'),
        ve('math', ge, 'textord', 'X', '\u03a7'),
        ve('math', ge, 'textord', '\xac', '\\neg', !0),
        ve('math', ge, 'textord', '\xac', '\\lnot'),
        ve('math', ge, 'textord', '\u22a4', '\\top'),
        ve('math', ge, 'textord', '\u22a5', '\\bot'),
        ve('math', ge, 'textord', '\u2205', '\\emptyset'),
        ve('math', ye, 'textord', '\u2205', '\\varnothing'),
        ve('math', ge, be, '\u03b1', '\\alpha', !0),
        ve('math', ge, be, '\u03b2', '\\beta', !0),
        ve('math', ge, be, '\u03b3', '\\gamma', !0),
        ve('math', ge, be, '\u03b4', '\\delta', !0),
        ve('math', ge, be, '\u03f5', '\\epsilon', !0),
        ve('math', ge, be, '\u03b6', '\\zeta', !0),
        ve('math', ge, be, '\u03b7', '\\eta', !0),
        ve('math', ge, be, '\u03b8', '\\theta', !0),
        ve('math', ge, be, '\u03b9', '\\iota', !0),
        ve('math', ge, be, '\u03ba', '\\kappa', !0),
        ve('math', ge, be, '\u03bb', '\\lambda', !0),
        ve('math', ge, be, '\u03bc', '\\mu', !0),
        ve('math', ge, be, '\u03bd', '\\nu', !0),
        ve('math', ge, be, '\u03be', '\\xi', !0),
        ve('math', ge, be, '\u03bf', '\\omicron', !0),
        ve('math', ge, be, '\u03c0', '\\pi', !0),
        ve('math', ge, be, '\u03c1', '\\rho', !0),
        ve('math', ge, be, '\u03c3', '\\sigma', !0),
        ve('math', ge, be, '\u03c4', '\\tau', !0),
        ve('math', ge, be, '\u03c5', '\\upsilon', !0),
        ve('math', ge, be, '\u03d5', '\\phi', !0),
        ve('math', ge, be, '\u03c7', '\\chi', !0),
        ve('math', ge, be, '\u03c8', '\\psi', !0),
        ve('math', ge, be, '\u03c9', '\\omega', !0),
        ve('math', ge, be, '\u03b5', '\\varepsilon', !0),
        ve('math', ge, be, '\u03d1', '\\vartheta', !0),
        ve('math', ge, be, '\u03d6', '\\varpi', !0),
        ve('math', ge, be, '\u03f1', '\\varrho', !0),
        ve('math', ge, be, '\u03c2', '\\varsigma', !0),
        ve('math', ge, be, '\u03c6', '\\varphi', !0),
        ve('math', ge, xe, '\u2217', '*'),
        ve('math', ge, xe, '+', '+'),
        ve('math', ge, xe, '\u2212', '-'),
        ve('math', ge, xe, '\u22c5', '\\cdot', !0),
        ve('math', ge, xe, '\u2218', '\\circ'),
        ve('math', ge, xe, '\xf7', '\\div', !0),
        ve('math', ge, xe, '\xb1', '\\pm', !0),
        ve('math', ge, xe, '\xd7', '\\times', !0),
        ve('math', ge, xe, '\u2229', '\\cap', !0),
        ve('math', ge, xe, '\u222a', '\\cup', !0),
        ve('math', ge, xe, '\u2216', '\\setminus'),
        ve('math', ge, xe, '\u2227', '\\land'),
        ve('math', ge, xe, '\u2228', '\\lor'),
        ve('math', ge, xe, '\u2227', '\\wedge', !0),
        ve('math', ge, xe, '\u2228', '\\vee', !0),
        ve('math', ge, 'textord', '\u221a', '\\surd'),
        ve('math', ge, 'open', '(', '('),
        ve('math', ge, 'open', '[', '['),
        ve('math', ge, 'open', '\u27e8', '\\langle', !0),
        ve('math', ge, 'open', '\u2223', '\\lvert'),
        ve('math', ge, 'open', '\u2225', '\\lVert'),
        ve('math', ge, 'close', ')', ')'),
        ve('math', ge, 'close', ']', ']'),
        ve('math', ge, 'close', '?', '?'),
        ve('math', ge, 'close', '!', '!'),
        ve('math', ge, 'close', '\u27e9', '\\rangle', !0),
        ve('math', ge, 'close', '\u2223', '\\rvert'),
        ve('math', ge, 'close', '\u2225', '\\rVert'),
        ve('math', ge, ke, '=', '='),
        ve('math', ge, ke, '<', '<'),
        ve('math', ge, ke, '>', '>'),
        ve('math', ge, ke, ':', ':'),
        ve('math', ge, ke, '\u2248', '\\approx', !0),
        ve('math', ge, ke, '\u2245', '\\cong', !0),
        ve('math', ge, ke, '\u2265', '\\ge'),
        ve('math', ge, ke, '\u2265', '\\geq', !0),
        ve('math', ge, ke, '\u2190', '\\gets'),
        ve('math', ge, ke, '>', '\\gt'),
        ve('math', ge, ke, '\u2208', '\\in', !0),
        ve('math', ge, ke, '\u0338', '\\not'),
        ve('math', ge, ke, '\u2282', '\\subset', !0),
        ve('math', ge, ke, '\u2283', '\\supset', !0),
        ve('math', ge, ke, '\u2286', '\\subseteq', !0),
        ve('math', ge, ke, '\u2287', '\\supseteq', !0),
        ve('math', ye, ke, '\u2288', '\\nsubseteq', !0),
        ve('math', ye, ke, '\u2289', '\\nsupseteq', !0),
        ve('math', ge, ke, '\u22a8', '\\models'),
        ve('math', ge, ke, '\u2190', '\\leftarrow', !0),
        ve('math', ge, ke, '\u2264', '\\le'),
        ve('math', ge, ke, '\u2264', '\\leq', !0),
        ve('math', ge, ke, '<', '\\lt'),
        ve('math', ge, ke, '\u2192', '\\rightarrow', !0),
        ve('math', ge, ke, '\u2192', '\\to'),
        ve('math', ye, ke, '\u2271', '\\ngeq', !0),
        ve('math', ye, ke, '\u2270', '\\nleq', !0),
        ve('math', ge, Se, '\xa0', '\\ '),
        ve('math', ge, Se, '\xa0', '~'),
        ve('math', ge, Se, '\xa0', '\\space'),
        ve('math', ge, Se, '\xa0', '\\nobreakspace'),
        ve('text', ge, Se, '\xa0', '\\ '),
        ve('text', ge, Se, '\xa0', '~'),
        ve('text', ge, Se, '\xa0', '\\space'),
        ve('text', ge, Se, '\xa0', '\\nobreakspace'),
        ve('math', ge, Se, null, '\\nobreak'),
        ve('math', ge, Se, null, '\\allowbreak'),
        ve('math', ge, 'punct', ',', ','),
        ve('math', ge, 'punct', ';', ';'),
        ve('math', ye, xe, '\u22bc', '\\barwedge', !0),
        ve('math', ye, xe, '\u22bb', '\\veebar', !0),
        ve('math', ge, xe, '\u2299', '\\odot', !0),
        ve('math', ge, xe, '\u2295', '\\oplus', !0),
        ve('math', ge, xe, '\u2297', '\\otimes', !0),
        ve('math', ge, 'textord', '\u2202', '\\partial', !0),
        ve('math', ge, xe, '\u2298', '\\oslash', !0),
        ve('math', ye, xe, '\u229a', '\\circledcirc', !0),
        ve('math', ye, xe, '\u22a1', '\\boxdot', !0),
        ve('math', ge, xe, '\u25b3', '\\bigtriangleup'),
        ve('math', ge, xe, '\u25bd', '\\bigtriangledown'),
        ve('math', ge, xe, '\u2020', '\\dagger'),
        ve('math', ge, xe, '\u22c4', '\\diamond'),
        ve('math', ge, xe, '\u22c6', '\\star'),
        ve('math', ge, xe, '\u25c3', '\\triangleleft'),
        ve('math', ge, xe, '\u25b9', '\\triangleright'),
        ve('math', ge, 'open', '{', '\\{'),
        ve('text', ge, 'textord', '{', '\\{'),
        ve('text', ge, 'textord', '{', '\\textbraceleft'),
        ve('math', ge, 'close', '}', '\\}'),
        ve('text', ge, 'textord', '}', '\\}'),
        ve('text', ge, 'textord', '}', '\\textbraceright'),
        ve('math', ge, 'open', '{', '\\lbrace'),
        ve('math', ge, 'close', '}', '\\rbrace'),
        ve('math', ge, 'open', '[', '\\lbrack'),
        ve('text', ge, 'textord', '[', '\\lbrack'),
        ve('math', ge, 'close', ']', '\\rbrack'),
        ve('text', ge, 'textord', ']', '\\rbrack'),
        ve('text', ge, 'textord', '<', '\\textless'),
        ve('text', ge, 'textord', '>', '\\textgreater'),
        ve('math', ge, 'open', '\u230a', '\\lfloor', !0),
        ve('math', ge, 'close', '\u230b', '\\rfloor', !0),
        ve('math', ge, 'open', '\u2308', '\\lceil', !0),
        ve('math', ge, 'close', '\u2309', '\\rceil', !0),
        ve('math', ge, 'textord', '\\', '\\backslash'),
        ve('math', ge, 'textord', '\u2223', '|'),
        ve('math', ge, 'textord', '\u2223', '\\vert'),
        ve('text', ge, 'textord', '|', '\\textbar'),
        ve('math', ge, 'textord', '\u2225', '\\|'),
        ve('math', ge, 'textord', '\u2225', '\\Vert'),
        ve('text', ge, 'textord', '\u2225', '\\textbardbl'),
        ve('text', ge, 'textord', '~', '\\textasciitilde'),
        ve('math', ge, ke, '\u2191', '\\uparrow', !0),
        ve('math', ge, ke, '\u21d1', '\\Uparrow', !0),
        ve('math', ge, ke, '\u2193', '\\downarrow', !0),
        ve('math', ge, ke, '\u21d3', '\\Downarrow', !0),
        ve('math', ge, ke, '\u2195', '\\updownarrow', !0),
        ve('math', ge, ke, '\u21d5', '\\Updownarrow', !0),
        ve('math', ge, we, '\u2210', '\\coprod'),
        ve('math', ge, we, '\u22c1', '\\bigvee'),
        ve('math', ge, we, '\u22c0', '\\bigwedge'),
        ve('math', ge, we, '\u2a04', '\\biguplus'),
        ve('math', ge, we, '\u22c2', '\\bigcap'),
        ve('math', ge, we, '\u22c3', '\\bigcup'),
        ve('math', ge, we, '\u222b', '\\int'),
        ve('math', ge, we, '\u222b', '\\intop'),
        ve('math', ge, we, '\u222c', '\\iint'),
        ve('math', ge, we, '\u222d', '\\iiint'),
        ve('math', ge, we, '\u220f', '\\prod'),
        ve('math', ge, we, '\u2211', '\\sum'),
        ve('math', ge, we, '\u2a02', '\\bigotimes'),
        ve('math', ge, we, '\u2a01', '\\bigoplus'),
        ve('math', ge, we, '\u2a00', '\\bigodot'),
        ve('math', ge, we, '\u222e', '\\oint'),
        ve('math', ge, we, '\u222f', '\\oiint'),
        ve('math', ge, we, '\u2230', '\\oiiint'),
        ve('math', ge, we, '\u2a06', '\\bigsqcup'),
        ve('math', ge, we, '\u222b', '\\smallint'),
        ve('text', ge, 'inner', '\u2026', '\\textellipsis'),
        ve('math', ge, 'inner', '\u2026', '\\mathellipsis'),
        ve('text', ge, 'inner', '\u2026', '\\ldots', !0),
        ve('math', ge, 'inner', '\u2026', '\\ldots', !0),
        ve('math', ge, 'inner', '\u22ef', '\\@cdots', !0),
        ve('math', ge, 'inner', '\u22f1', '\\ddots', !0),
        ve('math', ge, 'textord', '\u22ee', '\\varvdots'),
        ve('math', ge, 'accent-token', '\u02ca', '\\acute'),
        ve('math', ge, 'accent-token', '\u02cb', '\\grave'),
        ve('math', ge, 'accent-token', '\xa8', '\\ddot'),
        ve('math', ge, 'accent-token', '~', '\\tilde'),
        ve('math', ge, 'accent-token', '\u02c9', '\\bar'),
        ve('math', ge, 'accent-token', '\u02d8', '\\breve'),
        ve('math', ge, 'accent-token', '\u02c7', '\\check'),
        ve('math', ge, 'accent-token', '^', '\\hat'),
        ve('math', ge, 'accent-token', '\u20d7', '\\vec'),
        ve('math', ge, 'accent-token', '\u02d9', '\\dot'),
        ve('math', ge, 'accent-token', '\u02da', '\\mathring'),
        ve('math', ge, be, '\u0131', '\\imath', !0),
        ve('math', ge, be, '\u0237', '\\jmath', !0),
        ve('text', ge, 'textord', '\u0131', '\\i', !0),
        ve('text', ge, 'textord', '\u0237', '\\j', !0),
        ve('text', ge, 'textord', '\xdf', '\\ss', !0),
        ve('text', ge, 'textord', '\xe6', '\\ae', !0),
        ve('text', ge, 'textord', '\xe6', '\\ae', !0),
        ve('text', ge, 'textord', '\u0153', '\\oe', !0),
        ve('text', ge, 'textord', '\xf8', '\\o', !0),
        ve('text', ge, 'textord', '\xc6', '\\AE', !0),
        ve('text', ge, 'textord', '\u0152', '\\OE', !0),
        ve('text', ge, 'textord', '\xd8', '\\O', !0),
        ve('text', ge, 'accent-token', '\u02ca', "\\'"),
        ve('text', ge, 'accent-token', '\u02cb', '\\`'),
        ve('text', ge, 'accent-token', '\u02c6', '\\^'),
        ve('text', ge, 'accent-token', '\u02dc', '\\~'),
        ve('text', ge, 'accent-token', '\u02c9', '\\='),
        ve('text', ge, 'accent-token', '\u02d8', '\\u'),
        ve('text', ge, 'accent-token', '\u02d9', '\\.'),
        ve('text', ge, 'accent-token', '\u02da', '\\r'),
        ve('text', ge, 'accent-token', '\u02c7', '\\v'),
        ve('text', ge, 'accent-token', '\xa8', '\\"'),
        ve('text', ge, 'accent-token', '\u02dd', '\\H'),
        ve('text', ge, 'accent-token', '\u25ef', '\\textcircled');
      var Me = { '--': !0, '---': !0, '``': !0, "''": !0 };
      ve('text', ge, 'textord', '\u2013', '--'),
        ve('text', ge, 'textord', '\u2013', '\\textendash'),
        ve('text', ge, 'textord', '\u2014', '---'),
        ve('text', ge, 'textord', '\u2014', '\\textemdash'),
        ve('text', ge, 'textord', '\u2018', '`'),
        ve('text', ge, 'textord', '\u2018', '\\textquoteleft'),
        ve('text', ge, 'textord', '\u2019', "'"),
        ve('text', ge, 'textord', '\u2019', '\\textquoteright'),
        ve('text', ge, 'textord', '\u201c', '``'),
        ve('text', ge, 'textord', '\u201c', '\\textquotedblleft'),
        ve('text', ge, 'textord', '\u201d', "''"),
        ve('text', ge, 'textord', '\u201d', '\\textquotedblright'),
        ve('math', ge, 'textord', '\xb0', '\\degree', !0),
        ve('text', ge, 'textord', '\xb0', '\\degree'),
        ve('text', ge, 'textord', '\xb0', '\\textdegree', !0),
        ve('math', ge, be, '\xa3', '\\pounds'),
        ve('math', ge, be, '\xa3', '\\mathsterling', !0),
        ve('text', ge, be, '\xa3', '\\pounds'),
        ve('text', ge, be, '\xa3', '\\textsterling', !0),
        ve('math', ye, 'textord', '\u2720', '\\maltese'),
        ve('text', ye, 'textord', '\u2720', '\\maltese'),
        ve('text', ge, Se, '\xa0', '\\ '),
        ve('text', ge, Se, '\xa0', ' '),
        ve('text', ge, Se, '\xa0', '~');
      for (var ze = 0; ze < '0123456789/@."'.length; ze++) {
        var Te = '0123456789/@."'.charAt(ze);
        ve('math', ge, 'textord', Te, Te);
      }
      for (var Ae = 0; Ae < '0123456789!@*()-=+[]<>|";:?/.,'.length; Ae++) {
        var Be = '0123456789!@*()-=+[]<>|";:?/.,'.charAt(Ae);
        ve('text', ge, 'textord', Be, Be);
      }
      for (
        var Ne = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', Oe = 0;
        Oe < Ne.length;
        Oe++
      ) {
        var Ce = Ne.charAt(Oe);
        ve('math', ge, be, Ce, Ce), ve('text', ge, 'textord', Ce, Ce);
      }
      for (var Ee = '', qe = 0; qe < Ne.length; qe++) {
        var Ie = Ne.charAt(qe);
        ve('math', ge, be, Ie, (Ee = String.fromCharCode(55349, 56320 + qe))),
          ve('text', ge, 'textord', Ie, Ee),
          ve('math', ge, be, Ie, (Ee = String.fromCharCode(55349, 56372 + qe))),
          ve('text', ge, 'textord', Ie, Ee),
          ve('math', ge, be, Ie, (Ee = String.fromCharCode(55349, 56424 + qe))),
          ve('text', ge, 'textord', Ie, Ee),
          ve('math', ge, be, Ie, (Ee = String.fromCharCode(55349, 56580 + qe))),
          ve('text', ge, 'textord', Ie, Ee),
          ve('math', ge, be, Ie, (Ee = String.fromCharCode(55349, 56736 + qe))),
          ve('text', ge, 'textord', Ie, Ee),
          ve('math', ge, be, Ie, (Ee = String.fromCharCode(55349, 56788 + qe))),
          ve('text', ge, 'textord', Ie, Ee),
          ve('math', ge, be, Ie, (Ee = String.fromCharCode(55349, 56840 + qe))),
          ve('text', ge, 'textord', Ie, Ee),
          ve('math', ge, be, Ie, (Ee = String.fromCharCode(55349, 56944 + qe))),
          ve('text', ge, 'textord', Ie, Ee),
          qe < 26 &&
            (ve(
              'math',
              ge,
              be,
              Ie,
              (Ee = String.fromCharCode(55349, 56632 + qe))
            ),
            ve('text', ge, 'textord', Ie, Ee),
            ve(
              'math',
              ge,
              be,
              Ie,
              (Ee = String.fromCharCode(55349, 56476 + qe))
            ),
            ve('text', ge, 'textord', Ie, Ee));
      }
      ve('math', ge, be, 'k', (Ee = String.fromCharCode(55349, 56668))),
        ve('text', ge, 'textord', 'k', Ee);
      for (var Le = 0; Le < 10; Le++) {
        var Pe = Ne.charAt(Le);
        ve('math', ge, be, Pe, (Ee = String.fromCharCode(55349, 57294 + Le))),
          ve('text', ge, 'textord', Pe, Ee),
          ve('math', ge, be, Pe, (Ee = String.fromCharCode(55349, 57314 + Le))),
          ve('text', ge, 'textord', Pe, Ee),
          ve('math', ge, be, Pe, (Ee = String.fromCharCode(55349, 57324 + Le))),
          ve('text', ge, 'textord', Pe, Ee),
          ve('math', ge, be, Pe, (Ee = String.fromCharCode(55349, 57334 + Le))),
          ve('text', ge, 'textord', Pe, Ee);
      }
      for (var _e = 0; _e < '\xc7\xd0\xde\xe7\xfe'.length; _e++) {
        var Re = '\xc7\xd0\xde\xe7\xfe'.charAt(_e);
        ve('math', ge, be, Re, Re), ve('text', ge, 'textord', Re, Re);
      }
      ve('text', ge, 'textord', '\xf0', '\xf0'),
        ve('text', ge, 'textord', '\u2013', '\u2013'),
        ve('text', ge, 'textord', '\u2014', '\u2014'),
        ve('text', ge, 'textord', '\u2018', '\u2018'),
        ve('text', ge, 'textord', '\u2019', '\u2019'),
        ve('text', ge, 'textord', '\u201c', '\u201c'),
        ve('text', ge, 'textord', '\u201d', '\u201d');
      var De = [
          ['mathbf', 'textbf', 'Main-Bold'],
          ['mathbf', 'textbf', 'Main-Bold'],
          ['mathit', 'textit', 'Math-Italic'],
          ['mathit', 'textit', 'Math-Italic'],
          ['boldsymbol', 'boldsymbol', 'Main-BoldItalic'],
          ['boldsymbol', 'boldsymbol', 'Main-BoldItalic'],
          ['mathscr', 'textscr', 'Script-Regular'],
          ['', '', ''],
          ['', '', ''],
          ['', '', ''],
          ['mathfrak', 'textfrak', 'Fraktur-Regular'],
          ['mathfrak', 'textfrak', 'Fraktur-Regular'],
          ['mathbb', 'textbb', 'AMS-Regular'],
          ['mathbb', 'textbb', 'AMS-Regular'],
          ['', '', ''],
          ['', '', ''],
          ['mathsf', 'textsf', 'SansSerif-Regular'],
          ['mathsf', 'textsf', 'SansSerif-Regular'],
          ['mathboldsf', 'textboldsf', 'SansSerif-Bold'],
          ['mathboldsf', 'textboldsf', 'SansSerif-Bold'],
          ['mathitsf', 'textitsf', 'SansSerif-Italic'],
          ['mathitsf', 'textitsf', 'SansSerif-Italic'],
          ['', '', ''],
          ['', '', ''],
          ['mathtt', 'texttt', 'Typewriter-Regular'],
          ['mathtt', 'texttt', 'Typewriter-Regular'],
        ],
        He = [
          ['mathbf', 'textbf', 'Main-Bold'],
          ['', '', ''],
          ['mathsf', 'textsf', 'SansSerif-Regular'],
          ['mathboldsf', 'textboldsf', 'SansSerif-Bold'],
          ['mathtt', 'texttt', 'Typewriter-Regular'],
        ],
        Fe = [
          [1, 1, 1],
          [2, 1, 1],
          [3, 1, 1],
          [4, 2, 1],
          [5, 2, 1],
          [6, 3, 1],
          [7, 4, 2],
          [8, 6, 3],
          [9, 7, 6],
          [10, 8, 7],
          [11, 10, 9],
        ],
        je = [0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.2, 1.44, 1.728, 2.074, 2.488],
        Ve = function (e, t) {
          return t.size < 2 ? e : Fe[e - 1][t.size - 1];
        },
        Ge = (function () {
          function e(t) {
            a()(this, e),
              (this.style = t.style),
              (this.color = t.color),
              (this.size = t.size || e.BASESIZE),
              (this.textSize = t.textSize || this.size),
              (this.phantom = !!t.phantom),
              (this.font = t.font || ''),
              (this.fontFamily = t.fontFamily || ''),
              (this.fontWeight = t.fontWeight || ''),
              (this.fontShape = t.fontShape || ''),
              (this.sizeMultiplier = je[this.size - 1]),
              (this.maxSize = t.maxSize),
              (this._fontMetrics = void 0);
          }
          return (
            o()(e, [
              {
                key: 'extend',
                value: function (t) {
                  var r = {
                    style: this.style,
                    size: this.size,
                    textSize: this.textSize,
                    color: this.color,
                    phantom: this.phantom,
                    font: this.font,
                    fontFamily: this.fontFamily,
                    fontWeight: this.fontWeight,
                    fontShape: this.fontShape,
                    maxSize: this.maxSize,
                  };
                  for (var n in t) t.hasOwnProperty(n) && (r[n] = t[n]);
                  return new e(r);
                },
              },
              {
                key: 'havingStyle',
                value: function (e) {
                  return this.style === e
                    ? this
                    : this.extend({ style: e, size: Ve(this.textSize, e) });
                },
              },
              {
                key: 'havingCrampedStyle',
                value: function () {
                  return this.havingStyle(this.style.cramp());
                },
              },
              {
                key: 'havingSize',
                value: function (e) {
                  return this.size === e && this.textSize === e
                    ? this
                    : this.extend({
                        style: this.style.text(),
                        size: e,
                        textSize: e,
                        sizeMultiplier: je[e - 1],
                      });
                },
              },
              {
                key: 'havingBaseStyle',
                value: function (t) {
                  t = t || this.style.text();
                  var r = Ve(e.BASESIZE, t);
                  return this.size === r &&
                    this.textSize === e.BASESIZE &&
                    this.style === t
                    ? this
                    : this.extend({ style: t, size: r });
                },
              },
              {
                key: 'withColor',
                value: function (e) {
                  return this.extend({ color: e });
                },
              },
              {
                key: 'withPhantom',
                value: function () {
                  return this.extend({ phantom: !0 });
                },
              },
              {
                key: 'withFont',
                value: function (e) {
                  return this.extend({ font: e });
                },
              },
              {
                key: 'withTextFontFamily',
                value: function (e) {
                  return this.extend({ fontFamily: e, font: '' });
                },
              },
              {
                key: 'withTextFontWeight',
                value: function (e) {
                  return this.extend({ fontWeight: e, font: '' });
                },
              },
              {
                key: 'withTextFontShape',
                value: function (e) {
                  return this.extend({ fontShape: e, font: '' });
                },
              },
              {
                key: 'sizingClasses',
                value: function (e) {
                  return e.size !== this.size
                    ? ['sizing', 'reset-size' + e.size, 'size' + this.size]
                    : [];
                },
              },
              {
                key: 'baseSizingClasses',
                value: function () {
                  return this.size !== e.BASESIZE
                    ? ['sizing', 'reset-size' + this.size, 'size' + e.BASESIZE]
                    : [];
                },
              },
              {
                key: 'fontMetrics',
                value: function () {
                  return (
                    this._fontMetrics ||
                      (this._fontMetrics = (function (e) {
                        var t = void 0;
                        if (!me[(t = e >= 5 ? 0 : e >= 3 ? 1 : 2)]) {
                          var r = (me[t] = { cssEmPerMu: ue.quad[t] / 18 });
                          for (var n in ue)
                            ue.hasOwnProperty(n) && (r[n] = ue[n][t]);
                        }
                        return me[t];
                      })(this.size)),
                    this._fontMetrics
                  );
                },
              },
              {
                key: 'getColor',
                value: function () {
                  return this.phantom
                    ? 'transparent'
                    : null != this.color &&
                      e.colorMap.hasOwnProperty(this.color)
                    ? e.colorMap[this.color]
                    : this.color;
                },
              },
            ]),
            e
          );
        })();
      (Ge.BASESIZE = 6),
        (Ge.colorMap = {
          'katex-blue': '#6495ed',
          'katex-orange': '#ffa500',
          'katex-pink': '#ff00af',
          'katex-red': '#df0030',
          'katex-green': '#28ae7b',
          'katex-gray': 'gray',
          'katex-purple': '#9d38bd',
          'katex-blueA': '#ccfaff',
          'katex-blueB': '#80f6ff',
          'katex-blueC': '#63d9ea',
          'katex-blueD': '#11accd',
          'katex-blueE': '#0c7f99',
          'katex-tealA': '#94fff5',
          'katex-tealB': '#26edd5',
          'katex-tealC': '#01d1c1',
          'katex-tealD': '#01a995',
          'katex-tealE': '#208170',
          'katex-greenA': '#b6ffb0',
          'katex-greenB': '#8af281',
          'katex-greenC': '#74cf70',
          'katex-greenD': '#1fab54',
          'katex-greenE': '#0d923f',
          'katex-goldA': '#ffd0a9',
          'katex-goldB': '#ffbb71',
          'katex-goldC': '#ff9c39',
          'katex-goldD': '#e07d10',
          'katex-goldE': '#a75a05',
          'katex-redA': '#fca9a9',
          'katex-redB': '#ff8482',
          'katex-redC': '#f9685d',
          'katex-redD': '#e84d39',
          'katex-redE': '#bc2612',
          'katex-maroonA': '#ffbde0',
          'katex-maroonB': '#ff92c6',
          'katex-maroonC': '#ed5fa6',
          'katex-maroonD': '#ca337c',
          'katex-maroonE': '#9e034e',
          'katex-purpleA': '#ddd7ff',
          'katex-purpleB': '#c6b9fc',
          'katex-purpleC': '#aa87ff',
          'katex-purpleD': '#7854ab',
          'katex-purpleE': '#543b78',
          'katex-mintA': '#f5f9e8',
          'katex-mintB': '#edf2df',
          'katex-mintC': '#e0e5cc',
          'katex-grayA': '#f6f7f7',
          'katex-grayB': '#f0f1f2',
          'katex-grayC': '#e3e5e6',
          'katex-grayD': '#d6d8da',
          'katex-grayE': '#babec2',
          'katex-grayF': '#888d93',
          'katex-grayG': '#626569',
          'katex-grayH': '#3b3e40',
          'katex-grayI': '#21242c',
          'katex-kaBlue': '#314453',
          'katex-kaGreen': '#71B307',
        });
      var Ue = Ge,
        We = {
          pt: 1,
          mm: 7227 / 2540,
          cm: 7227 / 254,
          in: 72.27,
          bp: 1.00375,
          pc: 12,
          dd: 1238 / 1157,
          cc: 14856 / 1157,
          nd: 685 / 642,
          nc: 1370 / 107,
          sp: 1 / 65536,
          px: 1.00375,
        },
        Ye = { ex: !0, em: !0, mu: !0 },
        Xe = function (e, t) {
          var r = void 0;
          if (e.unit in We)
            r = We[e.unit] / t.fontMetrics().ptPerEm / t.sizeMultiplier;
          else if ('mu' === e.unit) r = t.fontMetrics().cssEmPerMu;
          else {
            var n = void 0;
            if (
              ((n = t.style.isTight() ? t.havingStyle(t.style.text()) : t),
              'ex' === e.unit)
            )
              r = n.fontMetrics().xHeight;
            else {
              if ('em' !== e.unit)
                throw new m("Invalid unit: '" + e.unit + "'");
              r = n.fontMetrics().quad;
            }
            n !== t && (r *= n.sizeMultiplier / t.sizeMultiplier);
          }
          return Math.min(e.number * r, t.maxSize);
        },
        $e = [
          // '\\imath',
          // '\u0131',
          '\\jmath',
          '\u0237',
          '\\pounds',
          '\\mathsterling',
          '\\textsterling',
          '\xa3',
        ],
        Ze = function (e, t, r) {
          return (
            fe[r][e] && fe[r][e].replace && (e = fe[r][e].replace),
            { value: e, metrics: ce(e, t, r) }
          );
        },
        Ke = function (e, t, r, n, a) {
          var i = Ze(e, t, r),
            o = i.metrics;
          e = i.value;
          var s = void 0;
          if (o) {
            var l = o.italic;
            'text' === r && (l = 0),
              (s = new se.symbolNode(
                e,
                o.height,
                o.depth,
                l,
                o.skew,
                o.width,
                a
              ));
          } else
            'undefined' != typeof console &&
              console.warn(
                "No character metrics for '" + e + "' in style '" + t + "'"
              ),
              (s = new se.symbolNode(e, 0, 0, 0, 0, 0, a));
          if (n) {
            (s.maxFontSize = n.sizeMultiplier),
              n.style.isTight() && s.classes.push('mtight');
            var u = n.getColor();
            u && (s.style.color = u);
          }
          return s;
        },
        Je = function (e, t, r, n, a) {
          if ('mathord' === a) {
            var i = Qe(e, t, r, n);
            return Ke(e, i.fontName, t, r, n.concat([i.fontClass]));
          }
          if ('textord' === a) {
            var o = fe[t][e] && fe[t][e].font;
            if ('ams' === o) {
              var s = at('amsrm', r.fontWeight, r.fontShape);
              return Ke(
                e,
                s,
                t,
                r,
                n.concat('amsrm', r.fontWeight, r.fontShape)
              );
            }
            if ('main' !== o && o) {
              var l = at(o, r.fontWeight, r.fontShape);
              return Ke(e, l, t, r, n.concat(l, r.fontWeight, r.fontShape));
            }
            var u = at('textrm', r.fontWeight, r.fontShape);
            return Ke(e, u, t, r, n.concat(r.fontWeight, r.fontShape));
          }
          throw new Error('unexpected type: ' + a + ' in mathDefault');
        },
        Qe = function (e, t, r, n) {
          return /[0-9]/.test(e.charAt(0)) || k.contains($e, e)
            ? { fontName: 'Main-Italic', fontClass: 'mainit' }
            : { fontName: 'Math-Italic', fontClass: 'mathit' };
        },
        et = function (e) {
          var t = 0,
            r = 0,
            n = 0,
            a = !0,
            i = !1,
            o = void 0;
          try {
            for (
              var s, l = P()(e.children);
              !(a = (s = l.next()).done);
              a = !0
            ) {
              var u = s.value;
              u.height > t && (t = u.height),
                u.depth > r && (r = u.depth),
                u.maxFontSize > n && (n = u.maxFontSize);
            }
          } catch (e) {
            (i = !0), (o = e);
          } finally {
            try {
              !a && l.return && l.return();
            } finally {
              if (i) throw o;
            }
          }
          (e.height = t), (e.depth = r), (e.maxFontSize = n);
        },
        tt = function (e, t, r, n) {
          var a = new se.span(e, t, r, n);
          return et(a), a;
        },
        rt = function (e, t, r, n) {
          return new se.span(e, t, r, n);
        },
        nt = function (e) {
          var t = new se.documentFragment(e);
          return et(t), t;
        },
        at = function (e, t, r) {
          var n = '';
          switch (e) {
            case 'amsrm':
              n = 'AMS';
              break;
            case 'textrm':
              n = 'Main';
              break;
            case 'textsf':
              n = 'SansSerif';
              break;
            case 'texttt':
              n = 'Typewriter';
              break;
            default:
              n = e;
          }
          return (
            n +
            '-' +
            ('textbf' === t && 'textit' === r
              ? 'BoldItalic'
              : 'textbf' === t
              ? 'Bold'
              : 'textit' === t
              ? 'Italic'
              : 'Regular')
          );
        },
        it = {
          mathbf: { variant: 'bold', fontName: 'Main-Bold' },
          mathrm: { variant: 'normal', fontName: 'Main-Regular' },
          textit: { variant: 'italic', fontName: 'Main-Italic' },
          mathbb: { variant: 'double-struck', fontName: 'AMS-Regular' },
          mathcal: { variant: 'script', fontName: 'Caligraphic-Regular' },
          mathfrak: { variant: 'fraktur', fontName: 'Fraktur-Regular' },
          mathscr: { variant: 'script', fontName: 'Script-Regular' },
          mathsf: { variant: 'sans-serif', fontName: 'SansSerif-Regular' },
          mathtt: { variant: 'monospace', fontName: 'Typewriter-Regular' },
        },
        ot = {
          vec: ['vec', 0.471, 0.714],
          oiintSize1: ['oiintSize1', 0.957, 0.499],
          oiintSize2: ['oiintSize2', 1.472, 0.659],
          oiiintSize1: ['oiiintSize1', 1.304, 0.499],
          oiiintSize2: ['oiiintSize2', 1.98, 0.659],
        },
        st = {
          fontMap: it,
          makeSymbol: Ke,
          mathsym: function (e, t, r) {
            var n =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : [];
            return r &&
              r.font &&
              'boldsymbol' === r.font &&
              Ze(e, 'Main-Bold', t).metrics
              ? Ke(e, 'Main-Bold', t, r, n.concat(['mathbf']))
              : '\\' === e || 'main' === fe[t][e].font
              ? Ke(e, 'Main-Regular', t, r, n)
              : Ke(e, 'AMS-Regular', t, r, n.concat(['amsrm']));
          },
          makeSpan: tt,
          makeSvgSpan: rt,
          makeLineSpan: function (e, t, r) {
            var n = tt([e], [], t);
            return (
              (n.height = r || t.fontMetrics().defaultRuleThickness),
              (n.style.borderBottomWidth = n.height + 'em'),
              (n.maxFontSize = 1),
              n
            );
          },
          makeAnchor: function (e, t, r, n) {
            var a = new se.anchor(e, t, r, n);
            return et(a), a;
          },
          makeFragment: nt,
          makeVList: function (e, t) {
            var r = (function (e) {
                if ('individualShift' === e.positionType) {
                  for (
                    var t = e.children,
                      r = [t[0]],
                      n = -t[0].shift - t[0].elem.depth,
                      a = n,
                      i = 1;
                    i < t.length;
                    i++
                  ) {
                    var o = -t[i].shift - a - t[i].elem.depth,
                      s = o - (t[i - 1].elem.height + t[i - 1].elem.depth);
                    (a += o), r.push({ type: 'kern', size: s }), r.push(t[i]);
                  }
                  return { children: r, depth: n };
                }
                var l = void 0;
                if ('top' === e.positionType) {
                  var u = e.positionData,
                    h = !0,
                    c = !1,
                    m = void 0;
                  try {
                    for (
                      var p, d = P()(e.children);
                      !(h = (p = d.next()).done);
                      h = !0
                    ) {
                      var f = p.value;
                      u -=
                        'kern' === f.type
                          ? f.size
                          : f.elem.height + f.elem.depth;
                    }
                  } catch (e) {
                    (c = !0), (m = e);
                  } finally {
                    try {
                      !h && d.return && d.return();
                    } finally {
                      if (c) throw m;
                    }
                  }
                  l = u;
                } else if ('bottom' === e.positionType) l = -e.positionData;
                else {
                  var v = e.children[0];
                  if ('elem' !== v.type)
                    throw new Error('First child must have type "elem".');
                  if ('shift' === e.positionType)
                    l = -v.elem.depth - e.positionData;
                  else {
                    if ('firstBaseline' !== e.positionType)
                      throw new Error(
                        'Invalid positionType ' + e.positionType + '.'
                      );
                    l = -v.elem.depth;
                  }
                }
                return { children: e.children, depth: l };
              })(e),
              n = r.children,
              a = r.depth,
              i = 0,
              o = !0,
              s = !1,
              l = void 0;
            try {
              for (var u, h = P()(n); !(o = (u = h.next()).done); o = !0) {
                var c = u.value;
                if ('elem' === c.type) {
                  var m = c.elem;
                  i = Math.max(i, m.maxFontSize, m.height);
                }
              }
            } catch (e) {
              (s = !0), (l = e);
            } finally {
              try {
                !o && h.return && h.return();
              } finally {
                if (s) throw l;
              }
            }
            i += 2;
            var p = tt(['pstrut'], []);
            p.style.height = i + 'em';
            var d = [],
              f = a,
              v = a,
              g = a,
              y = !0,
              x = !1,
              b = void 0;
            try {
              for (var w, k = P()(n); !(y = (w = k.next()).done); y = !0) {
                var S = w.value;
                if ('kern' === S.type) g += S.size;
                else {
                  var M = S.elem,
                    z = S.wrapperClasses || [],
                    T = S.wrapperStyle || {},
                    A = tt(z, [p, M], void 0, T);
                  (A.style.top = -i - g - M.depth + 'em'),
                    S.marginLeft && (A.style.marginLeft = S.marginLeft),
                    S.marginRight && (A.style.marginRight = S.marginRight),
                    d.push(A),
                    (g += M.height + M.depth);
                }
                (f = Math.min(f, g)), (v = Math.max(v, g));
              }
            } catch (e) {
              (x = !0), (b = e);
            } finally {
              try {
                !y && k.return && k.return();
              } finally {
                if (x) throw b;
              }
            }
            var B = tt(['vlist'], d);
            B.style.height = v + 'em';
            var N = void 0;
            if (f < 0) {
              var O = tt([], []),
                C = tt(['vlist'], [O]);
              C.style.height = -f + 'em';
              var E = tt(['vlist-s'], [new se.symbolNode('\u200b')]);
              N = [tt(['vlist-r'], [B, E]), tt(['vlist-r'], [C])];
            } else N = [tt(['vlist-r'], [B])];
            var q = tt(['vlist-t'], N);
            return (
              2 === N.length && q.classes.push('vlist-t2'),
              (q.height = v),
              (q.depth = -f),
              q
            );
          },
          makeOrd: function (e, t, r) {
            var n = e.mode,
              a = e.value,
              i = ['mord'],
              o = 'math' === n || ('text' === n && t.font),
              s = o ? t.font : t.fontFamily;
            if (55349 === a.charCodeAt(0)) {
              var l = (function (e, t) {
                  var r =
                      1024 * (e.charCodeAt(0) - 55296) +
                      (e.charCodeAt(1) - 56320) +
                      65536,
                    n = 'math' === t ? 0 : 1;
                  if (119808 <= r && r < 120484) {
                    var a = Math.floor((r - 119808) / 26);
                    return [De[a][2], De[a][n]];
                  }
                  if (120782 <= r && r <= 120831) {
                    var i = Math.floor((r - 120782) / 10);
                    return [He[i][2], He[i][n]];
                  }
                  if (120485 === r || 120486 === r) return [De[0][2], De[0][n]];
                  if (120486 < r && r < 120782) return ['', ''];
                  throw new m('Unsupported character: ' + e);
                })(a, n),
                u = R()(l, 2),
                h = u[0],
                c = u[1];
              return Ke(a, h, n, t, i.concat(c));
            }
            if (s) {
              var p = void 0,
                d = void 0;
              if ('boldsymbol' === s) {
                var f = (function (e, t, r, n) {
                  return Ze(e, 'Math-BoldItalic', t).metrics
                    ? { fontName: 'Math-BoldItalic', fontClass: 'boldsymbol' }
                    : { fontName: 'Main-Bold', fontClass: 'mathbf' };
                })(a, n);
                (p = f.fontName), (d = [f.fontClass]);
              } else if ('mathit' === s || k.contains($e, a)) {
                var v = Qe(a, n, t, i);
                (p = v.fontName), (d = [v.fontClass]);
              } else
                o
                  ? ((p = it[s].fontName), (d = [s]))
                  : ((p = at(s, t.fontWeight, t.fontShape)),
                    (d = [s, t.fontWeight, t.fontShape]));
              if (Ze(a, p, n).metrics) return Ke(a, p, n, t, i.concat(d));
              if (Me.hasOwnProperty(a) && 'Typewriter' === p.substr(0, 10)) {
                for (var g = [], y = 0; y < a.length; y++)
                  g.push(Ke(a[y], p, n, t, i.concat(d)));
                return nt(g);
              }
              return Je(a, n, t, i, r);
            }
            return Je(a, n, t, i, r);
          },
          makeVerb: function (e, t) {
            var r = e.value.body;
            return (r = e.value.star
              ? r.replace(/ /g, '\u2423')
              : r.replace(/ /g, '\xa0'));
          },
          makeGlue: function (e, t) {
            var r = tt(['mspace'], [], t),
              n = Xe(e, t);
            return (r.style.marginRight = n + 'em'), r;
          },
          staticSvg: function (e, t) {
            var r = R()(ot[e], 3),
              n = r[0],
              a = r[1],
              i = r[2],
              o = new se.pathNode(n),
              s = new se.svgNode([o], {
                width: a + 'em',
                height: i + 'em',
                style: 'width:' + a + 'em',
                viewBox: '0 0 ' + 1e3 * a + ' ' + 1e3 * i,
                preserveAspectRatio: 'xMinYMin',
              }),
              l = rt(['overlay'], [s], t);
            return (
              (l.height = i),
              (l.style.height = i + 'em'),
              (l.style.width = a + 'em'),
              l
            );
          },
          svgData: ot,
          tryCombineChars: function (e) {
            for (var t = 0; t < e.length - 1; t++)
              e[t].tryCombine(e[t + 1]) && (e.splice(t + 1, 1), t--);
            return e;
          },
          cssSpace: { '\\nobreak': 'nobreak', '\\allowbreak': 'allowbreak' },
          regularSpace: {
            ' ': {},
            '\\ ': {},
            '~': { className: 'nobreak' },
            '\\space': {},
            '\\nobreakspace': { className: 'nobreak' },
          },
        },
        lt = function e(t, r, n, i, o) {
          a()(this, e),
            (this.type = t),
            (this.value = r),
            (this.mode = n),
            (this.loc = u.range(i, o));
        };
      function ut(e, t) {
        var r = ht(e, t);
        if (!r)
          throw new Error(
            'Expected node of type ' +
              t +
              ', but got ' +
              (e ? 'node of type ' + e.type : String(e))
          );
        return r;
      }
      function ht(e, t) {
        return e && e.type === t ? e : null;
      }
      function ct(e) {
        return e && pe.hasOwnProperty(e.type) ? e : null;
      }
      var mt = { number: 3, unit: 'mu' },
        pt = { number: 4, unit: 'mu' },
        dt = { number: 5, unit: 'mu' },
        ft = {
          mord: { mop: mt, mbin: pt, mrel: dt, minner: mt },
          mop: { mord: mt, mop: mt, mrel: dt, minner: mt },
          mbin: { mord: pt, mop: pt, mopen: pt, minner: pt },
          mrel: { mord: dt, mop: dt, mopen: dt, minner: dt },
          mopen: {},
          mclose: { mop: mt, mbin: pt, mrel: dt, minner: mt },
          mpunct: {
            mord: mt,
            mop: mt,
            mrel: dt,
            mopen: mt,
            mclose: mt,
            mpunct: mt,
            minner: mt,
          },
          minner: {
            mord: mt,
            mop: mt,
            mbin: pt,
            mrel: dt,
            mopen: mt,
            mpunct: mt,
            minner: mt,
          },
        },
        vt = {
          mord: { mop: mt },
          mop: { mord: mt, mop: mt },
          mbin: {},
          mrel: {},
          mopen: {},
          mclose: { mop: mt },
          mpunct: {},
          minner: { mop: mt },
        },
        gt = {},
        yt = {},
        xt = {};
      function bt(e) {
        for (
          var t = e.type,
            r = (e.nodeType, e.names),
            n = e.props,
            a = e.handler,
            i = e.htmlBuilder,
            o = e.mathmlBuilder,
            s = {
              type: t,
              numArgs: n.numArgs,
              argTypes: n.argTypes,
              greediness: void 0 === n.greediness ? 1 : n.greediness,
              allowedInText: !!n.allowedInText,
              allowedInMath: void 0 === n.allowedInMath || n.allowedInMath,
              numOptionalArgs: n.numOptionalArgs || 0,
              infix: !!n.infix,
              consumeMode: n.consumeMode,
              handler: a,
            },
            l = 0;
          l < r.length;
          ++l
        )
          gt[r[l]] = s;
        t && (i && (yt[t] = i), o && (xt[t] = o));
      }
      function wt(e) {
        bt({
          type: e.type,
          names: [],
          props: { numArgs: 0 },
          handler: function () {
            throw new Error('Should never be called.');
          },
          htmlBuilder: e.htmlBuilder,
          mathmlBuilder: e.mathmlBuilder,
        });
      }
      var kt = function (e) {
          var t = ht(e, 'ordgroup');
          return t ? t.value : [e];
        },
        St = st.makeSpan,
        Mt = function (e, t) {
          return e
            ? k.contains(
                ['mbin', 'mopen', 'mrel', 'mop', 'mpunct'],
                Ot(e, 'right')
              )
            : t;
        },
        zt = function (e, t) {
          return e
            ? k.contains(['mrel', 'mclose', 'mpunct'], Ot(e, 'left'))
            : t;
        },
        Tt = {
          display: I.DISPLAY,
          text: I.TEXT,
          script: I.SCRIPT,
          scriptscript: I.SCRIPTSCRIPT,
        },
        At = {
          mord: 'mord',
          mop: 'mop',
          mbin: 'mbin',
          mrel: 'mrel',
          mopen: 'mopen',
          mclose: 'mclose',
          mpunct: 'mpunct',
          minner: 'minner',
        },
        Bt = function (e, t, r) {
          for (
            var n =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : [null, null],
              a = [],
              i = 0;
            i < e.length;
            i++
          ) {
            var o = qt(e[i], t);
            if (o instanceof se.documentFragment) {
              var s = o.children;
              a.push.apply(a, z()(s));
            } else a.push(o);
          }
          for (
            var l = [n[0] ? St([n[0]], [], t) : null].concat(
                z()(
                  a.filter(function (e) {
                    return e && 'mspace' !== e.classes[0];
                  })
                ),
                [n[1] ? St([n[1]], [], t) : null]
              ),
              u = 1;
            u < l.length - 1;
            u++
          ) {
            var h = w(l[u]),
              c = Nt(h, 'left');
            'mbin' === c.classes[0] &&
              Mt(l[u - 1], r) &&
              (c.classes[0] = 'mord');
            var m = Nt(h, 'right');
            'mbin' === m.classes[0] &&
              zt(l[u + 1], r) &&
              (m.classes[0] = 'mord');
          }
          for (var p = [], d = 0, f = 0; f < a.length; f++)
            if (
              (p.push(a[f]), 'mspace' !== a[f].classes[0] && d < l.length - 1)
            ) {
              0 === d && (p.pop(), f--);
              var v = Ot(l[d], 'right'),
                g = Ot(l[d + 1], 'left');
              if (v && g && r) {
                var y = w(l[d + 1]),
                  x = Ct(y) ? vt[v][g] : ft[v][g];
                if (x) {
                  var b = t;
                  if (1 === e.length) {
                    var k = ht(e[0], 'sizing') || ht(e[0], 'styling');
                    k &&
                      ('sizing' === k.type
                        ? (b = t.havingSize(k.value.size))
                        : 'styling' === k.type &&
                          (b = t.havingStyle(Tt[k.value.style])));
                  }
                  p.push(st.makeGlue(x, b));
                }
              }
              d++;
            }
          for (var S = 0; S < p.length; S++) {
            var M = p[S];
            M instanceof se.symbolNode &&
              '\u0338' === M.value &&
              ((M.style.position = 'absolute'),
              (M.style.paddingLeft = '0.8em'));
          }
          return p;
        },
        Nt = function e(t, r) {
          if (
            t instanceof se.documentFragment ||
            t instanceof se.anchor ||
            (t instanceof se.span && t.hasClass('enclosing'))
          ) {
            var n = t.children;
            if (n.length) {
              if ('right' === r) return e(n[n.length - 1], 'right');
              if ('left' === r) return e(n[0], 'right');
            }
          }
          return t;
        },
        Ot = function (e, t) {
          return e ? ((e = Nt(e, t)), At[e.classes[0]] || null) : null;
        },
        Ct = function (e) {
          return (e = Nt(e, 'left')).hasClass('mtight');
        },
        Et = function (e, t) {
          var r = ['nulldelimiter'].concat(e.baseSizingClasses());
          return St(t.concat(r));
        },
        qt = function (e, t, r) {
          if (!e) return St();
          if (yt[e.type]) {
            var n = yt[e.type](e, t);
            if (r && t.size !== r.size) {
              n = St(t.sizingClasses(r), [n], t);
              var a = t.sizeMultiplier / r.sizeMultiplier;
              (n.height *= a), (n.depth *= a);
            }
            return n;
          }
          throw new m("Got group of unknown type: '" + e.type + "'");
        };
      function It(e, t) {
        var r = St(['base'], e, t),
          n = St(['strut']);
        return (
          (n.style.height = r.height + r.depth + 'em'),
          (n.style.verticalAlign = -r.depth + 'em'),
          r.children.unshift(n),
          r
        );
      }
      function Lt(e, t) {
        var r = null;
        1 === e.length &&
          'tag' === e[0].type &&
          ((r = e[0].value.tag), (e = e[0].value.body));
        for (var n = Bt(e, t, !0), a = [], i = [], o = 0; o < n.length; o++)
          if (
            (i.push(n[o]),
            n[o].hasClass('mbin') ||
              n[o].hasClass('mrel') ||
              n[o].hasClass('allowbreak'))
          ) {
            for (var s = !1; o < n.length - 1 && n[o + 1].hasClass('mspace'); )
              o++, i.push(n[o]), n[o].hasClass('nobreak') && (s = !0);
            s || (a.push(It(i, t)), (i = []));
          } else
            n[o].hasClass('newline') &&
              (i.pop(),
              i.length > 0 && (a.push(It(i, t)), (i = [])),
              a.push(n[o]));
        i.length > 0 && a.push(It(i, t));
        var l = void 0;
        r && (((l = It(Bt(r, t, !0))).classes = ['tag']), a.push(l));
        var u = St(['katex-html'], a);
        if ((u.setAttribute('aria-hidden', 'true'), l)) {
          var h = l.children[0];
          (h.style.height = u.height + u.depth + 'em'),
            (h.style.verticalAlign = -u.depth + 'em');
        }
        return u;
      }
      var Pt = {
          MathNode: (function () {
            function e(t, r) {
              a()(this, e),
                (this.type = t),
                (this.attributes = {}),
                (this.children = r || []);
            }
            return (
              o()(e, [
                {
                  key: 'setAttribute',
                  value: function (e, t) {
                    this.attributes[e] = t;
                  },
                },
                {
                  key: 'getAttribute',
                  value: function (e) {
                    return this.attributes[e];
                  },
                },
                {
                  key: 'toNode',
                  value: function () {
                    var e = document.createElementNS(
                      'http://www.w3.org/1998/Math/MathML',
                      this.type
                    );
                    for (var t in this.attributes)
                      Object.prototype.hasOwnProperty.call(
                        this.attributes,
                        t
                      ) && e.setAttribute(t, this.attributes[t]);
                    var r = !0,
                      n = !1,
                      a = void 0;
                    try {
                      for (
                        var i, o = P()(this.children);
                        !(r = (i = o.next()).done);
                        r = !0
                      ) {
                        var s = i.value;
                        e.appendChild(s.toNode());
                      }
                    } catch (e) {
                      (n = !0), (a = e);
                    } finally {
                      try {
                        !r && o.return && o.return();
                      } finally {
                        if (n) throw a;
                      }
                    }
                    return e;
                  },
                },
                {
                  key: 'toMarkup',
                  value: function () {
                    var e = '<' + this.type;
                    for (var t in this.attributes)
                      Object.prototype.hasOwnProperty.call(
                        this.attributes,
                        t
                      ) &&
                        ((e += ' ' + t + '="'),
                        (e += k.escape(this.attributes[t])),
                        (e += '"'));
                    e += '>';
                    for (var r = 0; r < this.children.length; r++)
                      e += this.children[r].toMarkup();
                    return (e += '</' + this.type + '>');
                  },
                },
                {
                  key: 'toText',
                  value: function () {
                    return this.children
                      .map(function (e) {
                        return e.toText();
                      })
                      .join('');
                  },
                },
              ]),
              e
            );
          })(),
          TextNode: (function () {
            function e(t) {
              var r =
                !(arguments.length > 1 && void 0 !== arguments[1]) ||
                arguments[1];
              a()(this, e), (this.text = t), (this.needsEscape = r);
            }
            return (
              o()(e, [
                {
                  key: 'toNode',
                  value: function () {
                    return document.createTextNode(this.toText());
                  },
                },
                {
                  key: 'toMarkup',
                  value: function () {
                    return this.toText();
                  },
                },
                {
                  key: 'toText',
                  value: function () {
                    return this.needsEscape ? k.escape(this.text) : this.text;
                  },
                },
              ]),
              e
            );
          })(),
          SpaceNode: (function () {
            function e(t) {
              a()(this, e),
                (this.width = t),
                (this.character =
                  t >= 0.05555 && t <= 0.05556
                    ? '&VeryThinSpace;'
                    : t >= 0.1666 && t <= 0.1667
                    ? '&ThinSpace;'
                    : t >= 0.2222 && t <= 0.2223
                    ? '&MediumSpace;'
                    : t >= 0.2777 && t <= 0.2778
                    ? '&ThickSpace;'
                    : t >= -0.05556 && t <= -0.05555
                    ? '&NegativeVeryThinSpace;'
                    : t >= -0.1667 && t <= -0.1666
                    ? '&NegativeThinSpace;'
                    : t >= -0.2223 && t <= -0.2222
                    ? '&NegativeMediumSpace;'
                    : t >= -0.2778 && t <= -0.2777
                    ? '&NegativeThickSpace;'
                    : null);
            }
            return (
              o()(e, [
                {
                  key: 'toNode',
                  value: function () {
                    if (this.character)
                      return document.createTextNode(this.character);
                    var e = document.createElementNS(
                      'http://www.w3.org/1998/Math/MathML',
                      'mspace'
                    );
                    return e.setAttribute('width', this.width + 'em'), e;
                  },
                },
                {
                  key: 'toMarkup',
                  value: function () {
                    return this.character
                      ? '<mtext>' + this.character + '</mtext>'
                      : '<mspace width="' + this.width + 'em"/>';
                  },
                },
                {
                  key: 'toText',
                  value: function () {
                    return this.character ? this.character : ' ';
                  },
                },
              ]),
              e
            );
          })(),
        },
        _t = function (e, t, r) {
          return (
            !fe[t][e] ||
              !fe[t][e].replace ||
              55349 === e.charCodeAt(0) ||
              (Me.hasOwnProperty(e) &&
                r &&
                ((r.fontFamily && 'tt' === r.fontFamily.substr(4, 2)) ||
                  (r.font && 'tt' === r.font.substr(4, 2)))) ||
              (e = fe[t][e].replace),
            new Pt.TextNode(e)
          );
        },
        Rt = function (e) {
          return 1 === e.length ? e[0] : new Pt.MathNode('mrow', e);
        },
        Dt = function (e, t) {
          if ('texttt' === t.fontFamily) return 'monospace';
          if ('textsf' === t.fontFamily)
            return 'textit' === t.fontShape && 'textbf' === t.fontWeight
              ? 'sans-serif-bold-italic'
              : 'textit' === t.fontShape
              ? 'sans-serif-italic'
              : 'textbf' === t.fontWeight
              ? 'bold-sans-serif'
              : 'sans-serif';
          if ('textit' === t.fontShape && 'textbf' === t.fontWeight)
            return 'bold-italic';
          if ('textit' === t.fontShape) return 'italic';
          if ('textbf' === t.fontWeight) return 'bold';
          var r = t.font;
          if (!r) return null;
          var n = e.mode;
          if ('mathit' === r) return 'italic';
          if ('boldsymbol' === r) return 'bold-italic';
          var a = e.value;
          return k.contains(['\\imath', '\\jmath'], a)
            ? null
            : (fe[n][a] && fe[n][a].replace && (a = fe[n][a].replace),
              ce(a, st.fontMap[r].fontName, n) ? st.fontMap[r].variant : null);
        },
        Ht = function (e, t) {
          for (var r = [], n = void 0, a = 0; a < e.length; a++) {
            var i,
              o = jt(e[a], t);
            if (
              'mtext' === o.type &&
              n &&
              'mtext' === n.type &&
              o.getAttribute('mathvariant') === n.getAttribute('mathvariant')
            )
              (i = n.children).push.apply(i, z()(o.children));
            else if ('mn' === o.type && n && 'mn' === n.type) {
              var s;
              (s = n.children).push.apply(s, z()(o.children));
            } else if (
              'mi' === o.type &&
              1 === o.children.length &&
              '.' === o.children[0].text &&
              n &&
              'mn' === n.type
            ) {
              var l;
              (l = n.children).push.apply(l, z()(o.children));
            } else r.push(o), (n = o);
          }
          return r;
        },
        Ft = function (e, t) {
          return Rt(Ht(e, t));
        },
        jt = function (e, t) {
          if (!e) return new Pt.MathNode('mrow');
          if (xt[e.type]) return xt[e.type](e, t);
          throw new m("Got group of unknown type: '" + e.type + "'");
        };
      var Vt = function (e) {
          return new Ue({
            style: e.displayMode ? I.DISPLAY : I.TEXT,
            maxSize: e.maxSize,
          });
        },
        Gt = function (e, t, r) {
          var n = Vt(r),
            a = (function (e, t, r) {
              var n = Ht(e, r),
                a = void 0;
              a =
                1 === n.length && k.contains(['mrow', 'mtable'], n[0].type)
                  ? n[0]
                  : new Pt.MathNode('mrow', n);
              var i = new Pt.MathNode('annotation', [new Pt.TextNode(t)]);
              i.setAttribute('encoding', 'application/x-tex');
              var o = new Pt.MathNode('semantics', [a, i]),
                s = new Pt.MathNode('math', [o]);
              return st.makeSpan(['katex-mathml'], [s]);
            })(e, t, n),
            i = Lt(e, n),
            o = st.makeSpan(['katex'], [a, i]);
          return r.displayMode ? st.makeSpan(['katex-display'], [o]) : o;
        },
        Ut = {
          widehat: '^',
          widecheck: '\u02c7',
          widetilde: '~',
          utilde: '~',
          overleftarrow: '\u2190',
          underleftarrow: '\u2190',
          xleftarrow: '\u2190',
          overrightarrow: '\u2192',
          underrightarrow: '\u2192',
          xrightarrow: '\u2192',
          underbrace: '\u23b5',
          overbrace: '\u23de',
          overleftrightarrow: '\u2194',
          underleftrightarrow: '\u2194',
          xleftrightarrow: '\u2194',
          Overrightarrow: '\u21d2',
          xRightarrow: '\u21d2',
          overleftharpoon: '\u21bc',
          xleftharpoonup: '\u21bc',
          overrightharpoon: '\u21c0',
          xrightharpoonup: '\u21c0',
          xLeftarrow: '\u21d0',
          xLeftrightarrow: '\u21d4',
          xhookleftarrow: '\u21a9',
          xhookrightarrow: '\u21aa',
          xmapsto: '\u21a6',
          xrightharpoondown: '\u21c1',
          xleftharpoondown: '\u21bd',
          xrightleftharpoons: '\u21cc',
          xleftrightharpoons: '\u21cb',
          xtwoheadleftarrow: '\u219e',
          xtwoheadrightarrow: '\u21a0',
          xlongequal: '=',
          xtofrom: '\u21c4',
          xrightleftarrows: '\u21c4',
          xrightequilibrium: '\u21cc',
          xleftequilibrium: '\u21cb',
        },
        Wt = {
          overrightarrow: [['rightarrow'], 0.888, 522, 'xMaxYMin'],
          overleftarrow: [['leftarrow'], 0.888, 522, 'xMinYMin'],
          underrightarrow: [['rightarrow'], 0.888, 522, 'xMaxYMin'],
          underleftarrow: [['leftarrow'], 0.888, 522, 'xMinYMin'],
          xrightarrow: [['rightarrow'], 1.469, 522, 'xMaxYMin'],
          xleftarrow: [['leftarrow'], 1.469, 522, 'xMinYMin'],
          Overrightarrow: [['doublerightarrow'], 0.888, 560, 'xMaxYMin'],
          xRightarrow: [['doublerightarrow'], 1.526, 560, 'xMaxYMin'],
          xLeftarrow: [['doubleleftarrow'], 1.526, 560, 'xMinYMin'],
          overleftharpoon: [['leftharpoon'], 0.888, 522, 'xMinYMin'],
          xleftharpoonup: [['leftharpoon'], 0.888, 522, 'xMinYMin'],
          xleftharpoondown: [['leftharpoondown'], 0.888, 522, 'xMinYMin'],
          overrightharpoon: [['rightharpoon'], 0.888, 522, 'xMaxYMin'],
          xrightharpoonup: [['rightharpoon'], 0.888, 522, 'xMaxYMin'],
          xrightharpoondown: [['rightharpoondown'], 0.888, 522, 'xMaxYMin'],
          xlongequal: [['longequal'], 0.888, 334, 'xMinYMin'],
          xtwoheadleftarrow: [['twoheadleftarrow'], 0.888, 334, 'xMinYMin'],
          xtwoheadrightarrow: [['twoheadrightarrow'], 0.888, 334, 'xMaxYMin'],
          overleftrightarrow: [['leftarrow', 'rightarrow'], 0.888, 522],
          overbrace: [['leftbrace', 'midbrace', 'rightbrace'], 1.6, 548],
          underbrace: [
            ['leftbraceunder', 'midbraceunder', 'rightbraceunder'],
            1.6,
            548,
          ],
          underleftrightarrow: [['leftarrow', 'rightarrow'], 0.888, 522],
          xleftrightarrow: [['leftarrow', 'rightarrow'], 1.75, 522],
          xLeftrightarrow: [['doubleleftarrow', 'doublerightarrow'], 1.75, 560],
          xrightleftharpoons: [
            ['leftharpoondownplus', 'rightharpoonplus'],
            1.75,
            716,
          ],
          xleftrightharpoons: [
            ['leftharpoonplus', 'rightharpoondownplus'],
            1.75,
            716,
          ],
          xhookleftarrow: [['leftarrow', 'righthook'], 1.08, 522],
          xhookrightarrow: [['lefthook', 'rightarrow'], 1.08, 522],
          overlinesegment: [
            ['leftlinesegment', 'rightlinesegment'],
            0.888,
            522,
          ],
          underlinesegment: [
            ['leftlinesegment', 'rightlinesegment'],
            0.888,
            522,
          ],
          overgroup: [['leftgroup', 'rightgroup'], 0.888, 342],
          undergroup: [['leftgroupunder', 'rightgroupunder'], 0.888, 342],
          xmapsto: [['leftmapsto', 'rightarrow'], 1.5, 522],
          xtofrom: [['leftToFrom', 'rightToFrom'], 1.75, 528],
          xrightleftarrows: [
            ['baraboveleftarrow', 'rightarrowabovebar'],
            1.75,
            901,
          ],
          xrightequilibrium: [
            ['baraboveshortleftharpoon', 'rightharpoonaboveshortbar'],
            1.75,
            716,
          ],
          xleftequilibrium: [
            ['shortbaraboveleftharpoon', 'shortrightharpoonabovebar'],
            1.75,
            716,
          ],
        },
        Yt = function (e) {
          return 'ordgroup' === e.type ? e.value.length : 1;
        },
        Xt = function (e, t, r, n) {
          var a = void 0,
            i = e.height + e.depth + 2 * r;
          if (/fbox|color/.test(t)) {
            if (((a = st.makeSpan(['stretchy', t], [], n)), 'fbox' === t)) {
              var o = n.color && n.getColor();
              o && (a.style.borderColor = o);
            }
          } else {
            var s = [];
            /^[bx]cancel$/.test(t) &&
              s.push(
                new se.lineNode({
                  x1: '0',
                  y1: '0',
                  x2: '100%',
                  y2: '100%',
                  'stroke-width': '0.046em',
                })
              ),
              /^x?cancel$/.test(t) &&
                s.push(
                  new se.lineNode({
                    x1: '0',
                    y1: '100%',
                    x2: '100%',
                    y2: '0',
                    'stroke-width': '0.046em',
                  })
                );
            var l = new se.svgNode(s, { width: '100%', height: i + 'em' });
            a = st.makeSvgSpan([], [l], n);
          }
          return (a.height = i), (a.style.height = i + 'em'), a;
        },
        $t = function (e) {
          var t = new Pt.MathNode('mo', [new Pt.TextNode(Ut[e.substr(1)])]);
          return t.setAttribute('stretchy', 'true'), t;
        },
        Zt = function (e, t) {
          var r = (function () {
              var r = 4e5,
                n = e.value.label.substr(1);
              if (
                k.contains(['widehat', 'widecheck', 'widetilde', 'utilde'], n)
              ) {
                var a = Yt(e.value.base),
                  i = void 0,
                  o = void 0,
                  s = void 0;
                if (a > 5)
                  'widehat' === n || 'widecheck' === n
                    ? ((i = 420), (r = 2364), (s = 0.42), (o = n + '4'))
                    : ((i = 312), (r = 2340), (s = 0.34), (o = 'tilde4'));
                else {
                  var l = [1, 1, 2, 2, 3, 3][a];
                  'widehat' === n || 'widecheck' === n
                    ? ((r = [0, 1062, 2364, 2364, 2364][l]),
                      (i = [0, 239, 300, 360, 420][l]),
                      (s = [0, 0.24, 0.3, 0.3, 0.36, 0.42][l]),
                      (o = n + l))
                    : ((r = [0, 600, 1033, 2339, 2340][l]),
                      (i = [0, 260, 286, 306, 312][l]),
                      (s = [0, 0.26, 0.286, 0.3, 0.306, 0.34][l]),
                      (o = 'tilde' + l));
                }
                var u = new se.pathNode(o),
                  h = new se.svgNode([u], {
                    width: '100%',
                    height: s + 'em',
                    viewBox: '0 0 ' + r + ' ' + i,
                    preserveAspectRatio: 'none',
                  });
                return {
                  span: st.makeSvgSpan([], [h], t),
                  minWidth: 0,
                  height: s,
                };
              }
              var c = [],
                m = Wt[n],
                p = R()(m, 3),
                d = p[0],
                f = p[1],
                v = p[2],
                g = v / 1e3,
                y = d.length,
                x = void 0,
                b = void 0;
              if (1 === y) (x = ['hide-tail']), (b = [m[3]]);
              else if (2 === y)
                (x = ['halfarrow-left', 'halfarrow-right']),
                  (b = ['xMinYMin', 'xMaxYMin']);
              else {
                if (3 !== y)
                  throw new Error(
                    'Correct katexImagesData or update code here to support\n                    ' +
                      y +
                      ' children.'
                  );
                (x = ['brace-left', 'brace-center', 'brace-right']),
                  (b = ['xMinYMin', 'xMidYMin', 'xMaxYMin']);
              }
              for (var w = 0; w < y; w++) {
                var S = new se.pathNode(d[w]),
                  M = new se.svgNode([S], {
                    width: '400em',
                    height: g + 'em',
                    viewBox: '0 0 ' + r + ' ' + v,
                    preserveAspectRatio: b[w] + ' slice',
                  }),
                  z = st.makeSvgSpan([x[w]], [M], t);
                if (1 === y) return { span: z, minWidth: f, height: g };
                (z.style.height = g + 'em'), c.push(z);
              }
              return {
                span: st.makeSpan(['stretchy'], c, t),
                minWidth: f,
                height: g,
              };
            })(),
            n = r.span,
            a = r.minWidth,
            i = r.height;
          return (
            (n.height = i),
            (n.style.height = i + 'em'),
            a > 0 && (n.style.minWidth = a + 'em'),
            n
          );
        },
        Kt = function (e, t) {
          var r = void 0,
            n = void 0,
            a = ht(e, 'supsub'),
            i = void 0;
          a
            ? ((r = (n = ut(a.value.base, 'accent')).value.base),
              (a.value.base = r),
              (i = (function (e) {
                if (e instanceof J) return e;
                throw new Error(
                  'Expected HtmlDomContainer but got ' + String(e) + '.'
                );
              })(qt(a, t))),
              (a.value.base = n))
            : (r = (n = ut(e, 'accent')).value.base);
          var o = qt(r, t.havingCrampedStyle()),
            s = 0;
          if (n.value.isShifty && k.isCharacterBox(r)) {
            var l = k.getBaseElem(r);
            s = (function (e) {
              if (e instanceof ne) return e;
              throw new Error('Expected symbolNode but got ' + String(e) + '.');
            })(qt(l, t.havingCrampedStyle())).skew;
          }
          var u = Math.min(o.height, t.fontMetrics().xHeight),
            h = void 0;
          if (n.value.isStretchy)
            (h = Zt(n, t)),
              (h = st.makeVList(
                {
                  positionType: 'firstBaseline',
                  children: [
                    { type: 'elem', elem: o },
                    {
                      type: 'elem',
                      elem: h,
                      wrapperClasses: ['svg-align'],
                      wrapperStyle:
                        s > 0
                          ? {
                              width: 'calc(100% - ' + 2 * s + 'em)',
                              marginLeft: 2 * s + 'em',
                            }
                          : void 0,
                    },
                  ],
                },
                t
              ));
          else {
            var c = void 0,
              m = void 0;
            '\\vec' === n.value.label
              ? ((c = st.staticSvg('vec', t)), (m = st.svgData.vec[1]))
              : (((c = st.makeSymbol(
                  n.value.label,
                  'Main-Regular',
                  n.mode,
                  t
                )).italic = 0),
                (m = c.width)),
              (h = st.makeSpan(['accent-body'], [c]));
            var p = '\\textcircled' === n.value.label;
            p && (h.classes.push('accent-full'), (u = o.height));
            var d = s;
            p || (d -= m / 2),
              (h.style.left = d + 'em'),
              '\\textcircled' === n.value.label && (h.style.top = '.2em'),
              (h = st.makeVList(
                {
                  positionType: 'firstBaseline',
                  children: [
                    { type: 'elem', elem: o },
                    { type: 'kern', size: -u },
                    { type: 'elem', elem: h },
                  ],
                },
                t
              ));
          }
          var f = st.makeSpan(['mord', 'accent'], [h], t);
          return i
            ? ((i.children[0] = f),
              (i.height = Math.max(f.height, i.height)),
              (i.classes[0] = 'mord'),
              i)
            : f;
        },
        Jt = function (e, t) {
          var r = e.value,
            n = void 0;
          n = r.isStretchy
            ? $t(r.label)
            : new Pt.MathNode('mo', [_t(r.label, e.mode)]);
          var a = new Pt.MathNode('mover', [jt(r.base, t), n]);
          return a.setAttribute('accent', 'true'), a;
        },
        Qt = new RegExp(
          [
            '\\acute',
            '\\grave',
            '\\ddot',
            '\\tilde',
            '\\bar',
            '\\breve',
            '\\check',
            '\\hat',
            '\\vec',
            '\\dot',
            '\\mathring',
          ]
            .map(function (e) {
              return '\\' + e;
            })
            .join('|')
        );
      bt({
        type: 'accent',
        names: [
          '\\acute',
          '\\grave',
          '\\ddot',
          '\\tilde',
          '\\bar',
          '\\breve',
          '\\check',
          '\\hat',
          '\\vec',
          '\\dot',
          '\\mathring',
          '\\widecheck',
          '\\widehat',
          '\\widetilde',
          '\\overrightarrow',
          '\\overleftarrow',
          '\\Overrightarrow',
          '\\overleftrightarrow',
          '\\overgroup',
          '\\overlinesegment',
          '\\overleftharpoon',
          '\\overrightharpoon',
        ],
        props: { numArgs: 1 },
        handler: function (e, t) {
          var r = t[0],
            n = !Qt.test(e.funcName),
            a =
              !n ||
              '\\widehat' === e.funcName ||
              '\\widetilde' === e.funcName ||
              '\\widecheck' === e.funcName;
          return new lt(
            'accent',
            {
              type: 'accent',
              label: e.funcName,
              isStretchy: n,
              isShifty: a,
              base: r,
            },
            e.parser.mode
          );
        },
        htmlBuilder: Kt,
        mathmlBuilder: Jt,
      }),
        bt({
          type: 'accent',
          names: [
            "\\'",
            '\\`',
            '\\^',
            '\\~',
            '\\=',
            '\\u',
            '\\.',
            '\\"',
            '\\r',
            '\\H',
            '\\v',
            '\\textcircled',
          ],
          props: { numArgs: 1, allowedInText: !0, allowedInMath: !1 },
          handler: function (e, t) {
            var r = t[0];
            return new lt(
              'accent',
              {
                type: 'accent',
                label: e.funcName,
                isStretchy: !1,
                isShifty: !0,
                base: r,
              },
              e.parser.mode
            );
          },
          htmlBuilder: Kt,
          mathmlBuilder: Jt,
        }),
        bt({
          type: 'accentUnder',
          names: [
            '\\underleftarrow',
            '\\underrightarrow',
            '\\underleftrightarrow',
            '\\undergroup',
            '\\underlinesegment',
            '\\utilde',
          ],
          props: { numArgs: 1 },
          handler: function (e, t) {
            var r = e.parser,
              n = e.funcName,
              a = t[0];
            return new lt(
              'accentUnder',
              { type: 'accentUnder', label: n, base: a },
              r.mode
            );
          },
          htmlBuilder: function (e, t) {
            var r = qt(e.value.base, t),
              n = Zt(e, t),
              a = '\\utilde' === e.value.label ? 0.12 : 0,
              i = st.makeVList(
                {
                  positionType: 'bottom',
                  positionData: n.height + a,
                  children: [
                    { type: 'elem', elem: n, wrapperClasses: ['svg-align'] },
                    { type: 'kern', size: a },
                    { type: 'elem', elem: r },
                  ],
                },
                t
              );
            return st.makeSpan(['mord', 'accentunder'], [i], t);
          },
          mathmlBuilder: function (e, t) {
            var r = $t(e.value.label),
              n = new Pt.MathNode('munder', [jt(e.value.base, t), r]);
            return n.setAttribute('accentunder', 'true'), n;
          },
        }),
        bt({
          type: 'xArrow',
          names: [
            '\\xleftarrow',
            '\\xrightarrow',
            '\\xLeftarrow',
            '\\xRightarrow',
            '\\xleftrightarrow',
            '\\xLeftrightarrow',
            '\\xhookleftarrow',
            '\\xhookrightarrow',
            '\\xmapsto',
            '\\xrightharpoondown',
            '\\xrightharpoonup',
            '\\xleftharpoondown',
            '\\xleftharpoonup',
            '\\xrightleftharpoons',
            '\\xleftrightharpoons',
            '\\xlongequal',
            '\\xtwoheadrightarrow',
            '\\xtwoheadleftarrow',
            '\\xtofrom',
            '\\xrightleftarrows',
            '\\xrightequilibrium',
            '\\xleftequilibrium',
          ],
          props: { numArgs: 1, numOptionalArgs: 1 },
          handler: function (e, t, r) {
            var n = e.parser,
              a = e.funcName;
            return new lt(
              'xArrow',
              { type: 'xArrow', label: a, body: t[0], below: r[0] },
              n.mode
            );
          },
          htmlBuilder: function (e, t) {
            var r = t.style,
              n = t.havingStyle(r.sup()),
              a = qt(e.value.body, n, t);
            a.classes.push('x-arrow-pad');
            var i = void 0;
            e.value.below &&
              ((n = t.havingStyle(r.sub())),
              (i = qt(e.value.below, n, t)).classes.push('x-arrow-pad'));
            var o = Zt(e, t),
              s = -t.fontMetrics().axisHeight + 0.5 * o.height,
              l = -t.fontMetrics().axisHeight - 0.5 * o.height - 0.111;
            (a.depth > 0.25 || '\\xleftequilibrium' === e.value.label) &&
              (l -= a.depth);
            var u = void 0;
            if (i) {
              var h =
                -t.fontMetrics().axisHeight + i.height + 0.5 * o.height + 0.111;
              u = st.makeVList(
                {
                  positionType: 'individualShift',
                  children: [
                    { type: 'elem', elem: a, shift: l },
                    { type: 'elem', elem: o, shift: s },
                    { type: 'elem', elem: i, shift: h },
                  ],
                },
                t
              );
            } else
              u = st.makeVList(
                {
                  positionType: 'individualShift',
                  children: [
                    { type: 'elem', elem: a, shift: l },
                    { type: 'elem', elem: o, shift: s },
                  ],
                },
                t
              );
            return (
              u.children[0].children[0].children[1].classes.push('svg-align'),
              st.makeSpan(['mrel', 'x-arrow'], [u], t)
            );
          },
          mathmlBuilder: function (e, t) {
            var r = $t(e.value.label),
              n = void 0,
              a = void 0;
            if (e.value.body) {
              var i = jt(e.value.body, t);
              e.value.below
                ? ((a = jt(e.value.below, t)),
                  (n = new Pt.MathNode('munderover', [r, a, i])))
                : (n = new Pt.MathNode('mover', [r, i]));
            } else
              e.value.below
                ? ((a = jt(e.value.below, t)),
                  (n = new Pt.MathNode('munder', [r, a])))
                : (n = new Pt.MathNode('mover', [r]));
            return n;
          },
        });
      var er = function (e, t) {
          var r = Bt(e.value.value, t.withColor(e.value.color), !1);
          return new st.makeFragment(r);
        },
        tr = function (e, t) {
          var r = Ht(e.value.value, t),
            n = new Pt.MathNode('mstyle', r);
          return n.setAttribute('mathcolor', e.value.color), n;
        };
      bt({
        type: 'color',
        names: ['\\textcolor'],
        props: {
          numArgs: 2,
          allowedInText: !0,
          greediness: 3,
          argTypes: ['color', 'original'],
        },
        handler: function (e, t) {
          var r = e.parser,
            n = ut(t[0], 'color-token'),
            a = t[1];
          return new lt(
            'color',
            { type: 'color', color: n.value, value: kt(a) },
            r.mode
          );
        },
        htmlBuilder: er,
        mathmlBuilder: tr,
      }),
        bt({
          type: 'color',
          names: [
            '\\blue',
            '\\orange',
            '\\pink',
            '\\red',
            '\\green',
            '\\gray',
            '\\purple',
            '\\blueA',
            '\\blueB',
            '\\blueC',
            '\\blueD',
            '\\blueE',
            '\\tealA',
            '\\tealB',
            '\\tealC',
            '\\tealD',
            '\\tealE',
            '\\greenA',
            '\\greenB',
            '\\greenC',
            '\\greenD',
            '\\greenE',
            '\\goldA',
            '\\goldB',
            '\\goldC',
            '\\goldD',
            '\\goldE',
            '\\redA',
            '\\redB',
            '\\redC',
            '\\redD',
            '\\redE',
            '\\maroonA',
            '\\maroonB',
            '\\maroonC',
            '\\maroonD',
            '\\maroonE',
            '\\purpleA',
            '\\purpleB',
            '\\purpleC',
            '\\purpleD',
            '\\purpleE',
            '\\mintA',
            '\\mintB',
            '\\mintC',
            '\\grayA',
            '\\grayB',
            '\\grayC',
            '\\grayD',
            '\\grayE',
            '\\grayF',
            '\\grayG',
            '\\grayH',
            '\\grayI',
            '\\kaBlue',
            '\\kaGreen',
          ],
          props: { numArgs: 1, allowedInText: !0, greediness: 3 },
          handler: function (e, t) {
            var r = e.parser,
              n = e.funcName,
              a = t[0];
            return new lt(
              'color',
              { type: 'color', color: 'katex-' + n.slice(1), value: kt(a) },
              r.mode
            );
          },
          htmlBuilder: er,
          mathmlBuilder: tr,
        }),
        bt({
          type: 'color',
          names: ['\\color'],
          props: {
            numArgs: 1,
            allowedInText: !0,
            greediness: 3,
            argTypes: ['color'],
          },
          handler: function (e, t) {
            var r = e.parser,
              n = e.breakOnTokenText,
              a = ut(t[0], 'color-token'),
              i = r.parseExpression(!0, n);
            return new lt(
              'color',
              { type: 'color', color: a.value, value: i },
              r.mode
            );
          },
          htmlBuilder: er,
          mathmlBuilder: tr,
        }),
        bt({
          type: 'cr',
          names: ['\\cr', '\\newline'],
          props: {
            numArgs: 0,
            numOptionalArgs: 1,
            argTypes: ['size'],
            allowedInText: !0,
          },
          handler: function (e, t, r) {
            var n = e.parser,
              a = e.funcName,
              i = r[0],
              o = '\\cr' === a,
              s = !1;
            return (
              o ||
                (s =
                  !n.settings.displayMode ||
                  !n.settings.useStrictBehavior(
                    'newLineInDisplayMode',
                    'In LaTeX, \\\\ or \\newline does nothing in display mode'
                  )),
              new lt(
                'cr',
                { type: 'cr', newLine: s, newRow: o, size: i && ut(i, 'size') },
                n.mode
              )
            );
          },
          htmlBuilder: function (e, t) {
            if (e.value.newRow)
              throw new m('\\cr valid only within a tabular/array environment');
            var r = st.makeSpan(['mspace'], [], t);
            return (
              e.value.newLine &&
                (r.classes.push('newline'),
                e.value.size &&
                  (r.style.marginTop = Xe(e.value.size.value.value, t) + 'em')),
              r
            );
          },
          mathmlBuilder: function (e, t) {
            var r = new Pt.MathNode('mspace');
            return (
              e.value.newLine &&
                (r.setAttribute('linebreak', 'newline'),
                e.value.size &&
                  r.setAttribute(
                    'height',
                    Xe(e.value.size.value.value, t) + 'em'
                  )),
              r
            );
          },
        });
      var rr = function (e, t, r) {
          var n = ce((fe.math[e] && fe.math[e].replace) || e, t, r);
          if (!n)
            throw new Error(
              'Unsupported symbol ' + e + ' and font size ' + t + '.'
            );
          return n;
        },
        nr = function (e, t, r, n) {
          var a = r.havingBaseStyle(t),
            i = st.makeSpan(n.concat(a.sizingClasses(r)), [e], r),
            o = a.sizeMultiplier / r.sizeMultiplier;
          return (
            (i.height *= o),
            (i.depth *= o),
            (i.maxFontSize = a.sizeMultiplier),
            i
          );
        },
        ar = function (e, t, r) {
          var n = t.havingBaseStyle(r),
            a =
              (1 - t.sizeMultiplier / n.sizeMultiplier) *
              t.fontMetrics().axisHeight;
          e.classes.push('delimcenter'),
            (e.style.top = a + 'em'),
            (e.height -= a),
            (e.depth += a);
        },
        ir = function (e, t, r, n, a, i) {
          var o = (function (e, t, r, n) {
              return st.makeSymbol(e, 'Size' + t + '-Regular', r, n);
            })(e, t, a, n),
            s = nr(
              st.makeSpan(['delimsizing', 'size' + t], [o], n),
              I.TEXT,
              n,
              i
            );
          return r && ar(s, n, I.TEXT), s;
        },
        or = function (e, t, r) {
          var n = void 0;
          return (
            (n = 'Size1-Regular' === t ? 'delim-size1' : 'delim-size4'),
            {
              type: 'elem',
              elem: st.makeSpan(
                ['delimsizinginner', n],
                [st.makeSpan([], [st.makeSymbol(e, t, r)])]
              ),
            }
          );
        },
        sr = function (e, t, r, n, a, i) {
          var o = void 0,
            s = void 0,
            l = void 0,
            u = void 0;
          (o = l = u = e), (s = null);
          var h = 'Size1-Regular';
          '\\uparrow' === e
            ? (l = u = '\u23d0')
            : '\\Uparrow' === e
            ? (l = u = '\u2016')
            : '\\downarrow' === e
            ? (o = l = '\u23d0')
            : '\\Downarrow' === e
            ? (o = l = '\u2016')
            : '\\updownarrow' === e
            ? ((o = '\\uparrow'), (l = '\u23d0'), (u = '\\downarrow'))
            : '\\Updownarrow' === e
            ? ((o = '\\Uparrow'), (l = '\u2016'), (u = '\\Downarrow'))
            : '[' === e || '\\lbrack' === e
            ? ((o = '\u23a1'),
              (l = '\u23a2'),
              (u = '\u23a3'),
              (h = 'Size4-Regular'))
            : ']' === e || '\\rbrack' === e
            ? ((o = '\u23a4'),
              (l = '\u23a5'),
              (u = '\u23a6'),
              (h = 'Size4-Regular'))
            : '\\lfloor' === e || '\u230a' === e
            ? ((l = o = '\u23a2'), (u = '\u23a3'), (h = 'Size4-Regular'))
            : '\\lceil' === e || '\u2308' === e
            ? ((o = '\u23a1'), (l = u = '\u23a2'), (h = 'Size4-Regular'))
            : '\\rfloor' === e || '\u230b' === e
            ? ((l = o = '\u23a5'), (u = '\u23a6'), (h = 'Size4-Regular'))
            : '\\rceil' === e || '\u2309' === e
            ? ((o = '\u23a4'), (l = u = '\u23a5'), (h = 'Size4-Regular'))
            : '(' === e
            ? ((o = '\u239b'),
              (l = '\u239c'),
              (u = '\u239d'),
              (h = 'Size4-Regular'))
            : ')' === e
            ? ((o = '\u239e'),
              (l = '\u239f'),
              (u = '\u23a0'),
              (h = 'Size4-Regular'))
            : '\\{' === e || '\\lbrace' === e
            ? ((o = '\u23a7'),
              (s = '\u23a8'),
              (u = '\u23a9'),
              (l = '\u23aa'),
              (h = 'Size4-Regular'))
            : '\\}' === e || '\\rbrace' === e
            ? ((o = '\u23ab'),
              (s = '\u23ac'),
              (u = '\u23ad'),
              (l = '\u23aa'),
              (h = 'Size4-Regular'))
            : '\\lgroup' === e || '\u27ee' === e
            ? ((o = '\u23a7'),
              (u = '\u23a9'),
              (l = '\u23aa'),
              (h = 'Size4-Regular'))
            : '\\rgroup' === e || '\u27ef' === e
            ? ((o = '\u23ab'),
              (u = '\u23ad'),
              (l = '\u23aa'),
              (h = 'Size4-Regular'))
            : '\\lmoustache' === e || '\u23b0' === e
            ? ((o = '\u23a7'),
              (u = '\u23ad'),
              (l = '\u23aa'),
              (h = 'Size4-Regular'))
            : ('\\rmoustache' !== e && '\u23b1' !== e) ||
              ((o = '\u23ab'),
              (u = '\u23a9'),
              (l = '\u23aa'),
              (h = 'Size4-Regular'));
          var c = rr(o, h, a),
            m = c.height + c.depth,
            p = rr(l, h, a),
            d = p.height + p.depth,
            f = rr(u, h, a),
            v = f.height + f.depth,
            g = 0,
            y = 1;
          if (null !== s) {
            var x = rr(s, h, a);
            (g = x.height + x.depth), (y = 2);
          }
          var b = m + v + g,
            w = Math.ceil((t - b) / (y * d)),
            k = b + w * y * d,
            S = n.fontMetrics().axisHeight;
          r && (S *= n.sizeMultiplier);
          var M = k / 2 - S,
            z = [];
          if ((z.push(or(u, h, a)), null === s))
            for (var T = 0; T < w; T++) z.push(or(l, h, a));
          else {
            for (var A = 0; A < w; A++) z.push(or(l, h, a));
            z.push(or(s, h, a));
            for (var B = 0; B < w; B++) z.push(or(l, h, a));
          }
          z.push(or(o, h, a));
          var N = n.havingBaseStyle(I.TEXT),
            O = st.makeVList(
              { positionType: 'bottom', positionData: M, children: z },
              N
            );
          return nr(st.makeSpan(['delimsizing', 'mult'], [O], N), I.TEXT, n, i);
        },
        lr = function (e, t, r, n) {
          var a = void 0;
          'sqrtTall' === e &&
            (a =
              'M702 80H400000v40H742v' +
              (r - 54 - 80) +
              'l-4 4-4 4c-.667.7\n-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667\n-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155\n 77-156c66 199.333 139 419.667 219 661 l218 661zM702 80H400000v40H742z');
          var i = new se.pathNode(e, a),
            o = new se.svgNode([i], {
              width: '400em',
              height: t + 'em',
              viewBox: '0 0 400000 ' + r,
              preserveAspectRatio: 'xMinYMin slice',
            });
          return st.makeSvgSpan(['hide-tail'], [o], n);
        },
        ur = [
          '(',
          ')',
          '[',
          '\\lbrack',
          ']',
          '\\rbrack',
          '\\{',
          '\\lbrace',
          '\\}',
          '\\rbrace',
          '\\lfloor',
          '\\rfloor',
          '\u230a',
          '\u230b',
          '\\lceil',
          '\\rceil',
          '\u2308',
          '\u2309',
          '\\surd',
        ],
        hr = [
          '\\uparrow',
          '\\downarrow',
          '\\updownarrow',
          '\\Uparrow',
          '\\Downarrow',
          '\\Updownarrow',
          '|',
          '\\|',
          '\\vert',
          '\\Vert',
          '\\lvert',
          '\\rvert',
          '\\lVert',
          '\\rVert',
          '\\lgroup',
          '\\rgroup',
          '\u27ee',
          '\u27ef',
          '\\lmoustache',
          '\\rmoustache',
          '\u23b0',
          '\u23b1',
        ],
        cr = [
          '<',
          '>',
          '\\langle',
          '\\rangle',
          '/',
          '\\backslash',
          '\\lt',
          '\\gt',
        ],
        mr = [0, 1.2, 1.8, 2.4, 3],
        pr = [
          { type: 'small', style: I.SCRIPTSCRIPT },
          { type: 'small', style: I.SCRIPT },
          { type: 'small', style: I.TEXT },
          { type: 'large', size: 1 },
          { type: 'large', size: 2 },
          { type: 'large', size: 3 },
          { type: 'large', size: 4 },
        ],
        dr = [
          { type: 'small', style: I.SCRIPTSCRIPT },
          { type: 'small', style: I.SCRIPT },
          { type: 'small', style: I.TEXT },
          { type: 'stack' },
        ],
        fr = [
          { type: 'small', style: I.SCRIPTSCRIPT },
          { type: 'small', style: I.SCRIPT },
          { type: 'small', style: I.TEXT },
          { type: 'large', size: 1 },
          { type: 'large', size: 2 },
          { type: 'large', size: 3 },
          { type: 'large', size: 4 },
          { type: 'stack' },
        ],
        vr = function (e) {
          if ('small' === e.type) return 'Main-Regular';
          if ('large' === e.type) return 'Size' + e.size + '-Regular';
          if ('stack' === e.type) return 'Size4-Regular';
          throw new Error("Add support for delim type '" + e.type + "' here.");
        },
        gr = function (e, t, r, n) {
          for (
            var a = Math.min(2, 3 - n.style.size);
            a < r.length && 'stack' !== r[a].type;
            a++
          ) {
            var i = rr(e, vr(r[a]), 'math'),
              o = i.height + i.depth;
            if (
              ('small' === r[a].type &&
                (o *= n.havingBaseStyle(r[a].style).sizeMultiplier),
              o > t)
            )
              return r[a];
          }
          return r[r.length - 1];
        },
        yr = function (e, t, r, n, a, i) {
          '<' === e || '\\lt' === e || '\u27e8' === e
            ? (e = '\\langle')
            : ('>' !== e && '\\gt' !== e && '\u27e9' !== e) || (e = '\\rangle');
          var o = void 0;
          o = k.contains(cr, e) ? pr : k.contains(ur, e) ? fr : dr;
          var s = gr(e, t, o, n);
          return 'small' === s.type
            ? (function (e, t, r, n, a, i) {
                var o = st.makeSymbol(e, 'Main-Regular', a, n),
                  s = nr(o, t, n, i);
                return r && ar(s, n, t), s;
              })(e, s.style, r, n, a, i)
            : 'large' === s.type
            ? ir(e, s.size, r, n, a, i)
            : sr(e, t, r, n, a, i);
        },
        xr = function (e, t) {
          var r = gr('\\surd', e, fr, t),
            n = void 0,
            a = t.sizeMultiplier,
            i = 0,
            o = 0,
            s = 0,
            l = void 0;
          'small' === r.type
            ? ((s = 1080),
              (o =
                1 *
                (a =
                  t.havingBaseStyle(r.style).sizeMultiplier /
                  t.sizeMultiplier)),
              ((n = lr('sqrtMain', (i = 1.08 * a), s, t)).style.minWidth =
                '0.853em'),
              (l = 0.833 * a))
            : 'large' === r.type
            ? ((s = 1080 * mr[r.size]),
              (o = mr[r.size] / a),
              (i = (mr[r.size] + 0.08) / a),
              ((n = lr('sqrtSize' + r.size, i, s, t)).style.minWidth =
                '1.02em'),
              (l = 1 / a))
            : ((i = e / a + 0.08),
              (o = e / a),
              (s = Math.floor(1e3 * e) + 80),
              ((n = lr('sqrtTall', i, s, t)).style.minWidth = '0.742em'),
              (l = 1.056 / a));
          return (
            (n.height = o),
            (n.style.height = i + 'em'),
            {
              span: n,
              advanceWidth: l,
              ruleWidth: t.fontMetrics().sqrtRuleThickness * a,
            }
          );
        },
        br = function (e, t, r, n, a) {
          if (
            ('<' === e || '\\lt' === e || '\u27e8' === e
              ? (e = '\\langle')
              : ('>' !== e && '\\gt' !== e && '\u27e9' !== e) ||
                (e = '\\rangle'),
            k.contains(ur, e) || k.contains(cr, e))
          )
            return ir(e, t, !1, r, n, a);
          if (k.contains(hr, e)) return sr(e, mr[t], !1, r, n, a);
          throw new m("Illegal delimiter: '" + e + "'");
        },
        wr = yr,
        kr = function (e, t, r, n, a, i) {
          var o = n.fontMetrics().axisHeight * n.sizeMultiplier,
            s = 5 / n.fontMetrics().ptPerEm,
            l = Math.max(t - o, r + o),
            u = Math.max((l / 500) * 901, 2 * l - s);
          return yr(e, u, !0, n, a, i);
        },
        Sr = {
          '\\bigl': { mclass: 'mopen', size: 1 },
          '\\Bigl': { mclass: 'mopen', size: 2 },
          '\\biggl': { mclass: 'mopen', size: 3 },
          '\\Biggl': { mclass: 'mopen', size: 4 },
          '\\bigr': { mclass: 'mclose', size: 1 },
          '\\Bigr': { mclass: 'mclose', size: 2 },
          '\\biggr': { mclass: 'mclose', size: 3 },
          '\\Biggr': { mclass: 'mclose', size: 4 },
          '\\bigm': { mclass: 'mrel', size: 1 },
          '\\Bigm': { mclass: 'mrel', size: 2 },
          '\\biggm': { mclass: 'mrel', size: 3 },
          '\\Biggm': { mclass: 'mrel', size: 4 },
          '\\big': { mclass: 'mord', size: 1 },
          '\\Big': { mclass: 'mord', size: 2 },
          '\\bigg': { mclass: 'mord', size: 3 },
          '\\Bigg': { mclass: 'mord', size: 4 },
        },
        Mr = [
          '(',
          ')',
          '[',
          '\\lbrack',
          ']',
          '\\rbrack',
          '\\{',
          '\\lbrace',
          '\\}',
          '\\rbrace',
          '\\lfloor',
          '\\rfloor',
          '\u230a',
          '\u230b',
          '\\lceil',
          '\\rceil',
          '\u2308',
          '\u2309',
          '<',
          '>',
          '\\langle',
          '\u27e8',
          '\\rangle',
          '\u27e9',
          '\\lt',
          '\\gt',
          '\\lvert',
          '\\rvert',
          '\\lVert',
          '\\rVert',
          '\\lgroup',
          '\\rgroup',
          '\u27ee',
          '\u27ef',
          '\\lmoustache',
          '\\rmoustache',
          '\u23b0',
          '\u23b1',
          '/',
          '\\backslash',
          '|',
          '\\vert',
          '\\|',
          '\\Vert',
          '\\uparrow',
          '\\Uparrow',
          '\\downarrow',
          '\\Downarrow',
          '\\updownarrow',
          '\\Updownarrow',
          '.',
        ];
      function zr(e, t) {
        var r = ct(e);
        if (r && k.contains(Mr, r.value)) return r;
        throw new m(
          "Invalid delimiter: '" +
            String(e.value) +
            "' after '" +
            t.funcName +
            "'",
          e
        );
      }
      function Tr(e) {
        if (!e.value.body)
          throw new Error("Bug: The leftright ParseNode wasn't fully parsed.");
        return e.value;
      }
      bt({
        type: 'delimsizing',
        names: [
          '\\bigl',
          '\\Bigl',
          '\\biggl',
          '\\Biggl',
          '\\bigr',
          '\\Bigr',
          '\\biggr',
          '\\Biggr',
          '\\bigm',
          '\\Bigm',
          '\\biggm',
          '\\Biggm',
          '\\big',
          '\\Big',
          '\\bigg',
          '\\Bigg',
        ],
        props: { numArgs: 1 },
        handler: function (e, t) {
          var r = zr(t[0], e);
          return new lt(
            'delimsizing',
            {
              type: 'delimsizing',
              size: Sr[e.funcName].size,
              mclass: Sr[e.funcName].mclass,
              value: r.value,
            },
            e.parser.mode
          );
        },
        htmlBuilder: function (e, t) {
          var r = e.value.value;
          return '.' === r
            ? st.makeSpan([e.value.mclass])
            : br(r, e.value.size, t, e.mode, [e.value.mclass]);
        },
        mathmlBuilder: function (e) {
          var t = [];
          '.' !== e.value.value && t.push(_t(e.value.value, e.mode));
          var r = new Pt.MathNode('mo', t);
          return (
            'mopen' === e.value.mclass || 'mclose' === e.value.mclass
              ? r.setAttribute('fence', 'true')
              : r.setAttribute('fence', 'false'),
            r
          );
        },
      }),
        bt({
          type: 'leftright-right',
          names: ['\\right'],
          props: { numArgs: 1 },
          handler: function (e, t) {
            return new lt(
              'leftright-right',
              { type: 'leftright-right', value: zr(t[0], e).value },
              e.parser.mode
            );
          },
        }),
        bt({
          type: 'leftright',
          names: ['\\left'],
          props: { numArgs: 1 },
          handler: function (e, t) {
            var r = zr(t[0], e),
              n = e.parser;
            ++n.leftrightDepth;
            var a = n.parseExpression(!1);
            --n.leftrightDepth, n.expect('\\right', !1);
            var i = n.parseFunction();
            if (!i) throw new m('failed to parse function after \\right');
            return new lt(
              'leftright',
              {
                type: 'leftright',
                body: a,
                left: r.value,
                right: ut(i, 'leftright-right').value.value,
              },
              n.mode
            );
          },
          htmlBuilder: function (e, t) {
            for (
              var r = Tr(e),
                n = Bt(r.body, t, !0, [null, 'mclose']),
                a = 0,
                i = 0,
                o = !1,
                s = 0;
              s < n.length;
              s++
            )
              n[s].isMiddle
                ? (o = !0)
                : ((a = Math.max(n[s].height, a)),
                  (i = Math.max(n[s].depth, i)));
            (a *= t.sizeMultiplier), (i *= t.sizeMultiplier);
            var l = void 0;
            if (
              ((l =
                '.' === r.left
                  ? Et(t, ['mopen'])
                  : kr(r.left, a, i, t, e.mode, ['mopen'])),
              n.unshift(l),
              o)
            )
              for (var u = 1; u < n.length; u++) {
                var h = n[u].isMiddle;
                h && (n[u] = kr(h.value, a, i, h.options, e.mode, []));
              }
            var c = void 0;
            return (
              (c =
                '.' === r.right
                  ? Et(t, ['mclose'])
                  : kr(r.right, a, i, t, e.mode, ['mclose'])),
              n.push(c),
              st.makeSpan(['minner'], n, t)
            );
          },
          mathmlBuilder: function (e, t) {
            var r = Tr(e),
              n = Ht(r.body, t);
            if ('.' !== r.left) {
              var a = new Pt.MathNode('mo', [_t(r.left, e.mode)]);
              a.setAttribute('fence', 'true'), n.unshift(a);
            }
            if ('.' !== r.right) {
              var i = new Pt.MathNode('mo', [_t(r.right, e.mode)]);
              i.setAttribute('fence', 'true'), n.push(i);
            }
            return Rt(n);
          },
        }),
        bt({
          type: 'middle',
          names: ['\\middle'],
          props: { numArgs: 1 },
          handler: function (e, t) {
            var r = zr(t[0], e);
            if (!e.parser.leftrightDepth)
              throw new m('\\middle without preceding \\left', r);
            return new lt(
              'middle',
              { type: 'middle', value: r.value },
              e.parser.mode
            );
          },
          htmlBuilder: function (e, t) {
            var r = void 0;
            if ('.' === e.value.value) r = Et(t, []);
            else {
              r = br(e.value.value, 1, t, e.mode, []);
              var n = { value: e.value.value, options: t };
              r.isMiddle = n;
            }
            return r;
          },
          mathmlBuilder: function (e, t) {
            var r = new Pt.MathNode('mo', [_t(e.value.value, e.mode)]);
            return r.setAttribute('fence', 'true'), r;
          },
        });
      var Ar = function (e, t) {
          var r = qt(e.value.body, t),
            n = e.value.label.substr(1),
            a = t.sizeMultiplier,
            i = void 0,
            o = 0,
            s = k.isCharacterBox(e.value.body);
          if ('sout' === n)
            ((i = st.makeSpan(['stretchy', 'sout'])).height =
              t.fontMetrics().defaultRuleThickness / a),
              (o = -0.5 * t.fontMetrics().xHeight);
          else {
            /cancel/.test(n)
              ? s || r.classes.push('cancel-pad')
              : r.classes.push('boxpad');
            var l = 0;
            (l = /box/.test(n) ? ('colorbox' === n ? 0.3 : 0.34) : s ? 0.2 : 0),
              (i = Xt(r, n, l, t)),
              (o = r.depth + l),
              e.value.backgroundColor &&
                ((i.style.backgroundColor = e.value.backgroundColor.value),
                e.value.borderColor &&
                  (i.style.borderColor = e.value.borderColor.value));
          }
          var u = void 0;
          return (
            (u = e.value.backgroundColor
              ? st.makeVList(
                  {
                    positionType: 'individualShift',
                    children: [
                      { type: 'elem', elem: i, shift: o },
                      { type: 'elem', elem: r, shift: 0 },
                    ],
                  },
                  t
                )
              : st.makeVList(
                  {
                    positionType: 'individualShift',
                    children: [
                      { type: 'elem', elem: r, shift: 0 },
                      {
                        type: 'elem',
                        elem: i,
                        shift: o,
                        wrapperClasses: /cancel/.test(n) ? ['svg-align'] : [],
                      },
                    ],
                  },
                  t
                )),
            /cancel/.test(n) && ((u.height = r.height), (u.depth = r.depth)),
            /cancel/.test(n) && !s
              ? st.makeSpan(['mord', 'cancel-lap'], [u], t)
              : st.makeSpan(['mord'], [u], t)
          );
        },
        Br = function (e, t) {
          var r = new Pt.MathNode('menclose', [jt(e.value.body, t)]);
          switch (e.value.label) {
            case '\\cancel':
              r.setAttribute('notation', 'updiagonalstrike');
              break;
            case '\\bcancel':
              r.setAttribute('notation', 'downdiagonalstrike');
              break;
            case '\\sout':
              r.setAttribute('notation', 'horizontalstrike');
              break;
            case '\\fbox':
            case '\\fcolorbox':
              r.setAttribute('notation', 'box');
              break;
            case '\\xcancel':
              r.setAttribute('notation', 'updiagonalstrike downdiagonalstrike');
          }
          return (
            e.value.backgroundColor &&
              r.setAttribute('mathbackground', e.value.backgroundColor.value),
            r
          );
        };
      bt({
        type: 'enclose',
        names: ['\\colorbox'],
        props: {
          numArgs: 2,
          allowedInText: !0,
          greediness: 3,
          argTypes: ['color', 'text'],
        },
        handler: function (e, t, r) {
          var n = e.parser,
            a = e.funcName,
            i = ut(t[0], 'color-token'),
            o = t[1];
          return new lt(
            'enclose',
            { type: 'enclose', label: a, backgroundColor: i, body: o },
            n.mode
          );
        },
        htmlBuilder: Ar,
        mathmlBuilder: Br,
      }),
        bt({
          type: 'enclose',
          names: ['\\fcolorbox'],
          props: {
            numArgs: 3,
            allowedInText: !0,
            greediness: 3,
            argTypes: ['color', 'color', 'text'],
          },
          handler: function (e, t, r) {
            var n = e.parser,
              a = e.funcName,
              i = ut(t[0], 'color-token'),
              o = ut(t[1], 'color-token'),
              s = t[2];
            return new lt(
              'enclose',
              {
                type: 'enclose',
                label: a,
                backgroundColor: o,
                borderColor: i,
                body: s,
              },
              n.mode
            );
          },
          htmlBuilder: Ar,
          mathmlBuilder: Br,
        }),
        bt({
          type: 'enclose',
          names: ['\\cancel', '\\bcancel', '\\xcancel', '\\sout', '\\fbox'],
          props: { numArgs: 1 },
          handler: function (e, t, r) {
            var n = e.parser,
              a = e.funcName,
              i = t[0];
            return new lt(
              'enclose',
              { type: 'enclose', label: a, body: i },
              n.mode
            );
          },
          htmlBuilder: Ar,
          mathmlBuilder: Br,
        }),
        bt({
          type: 'environment',
          names: ['\\begin', '\\end'],
          props: { numArgs: 1, argTypes: ['text'] },
          handler: function (e, t) {
            var r = e.parser,
              n = t[0];
            if ('ordgroup' !== n.type)
              throw new m('Invalid environment name', n);
            for (var a = '', i = 0; i < n.value.length; ++i)
              a += ut(n.value[i], 'textord').value;
            return new lt(
              'environment',
              { type: 'environment', name: a, nameGroup: n },
              r.mode
            );
          },
        });
      var Nr = r(64),
        Or = r.n(Nr),
        Cr = function (e, t) {
          var r = e.value.font,
            n = t.withFont(r);
          return qt(e.value.body, n);
        },
        Er = function (e, t) {
          var r = e.value.font,
            n = t.withFont(r);
          return jt(e.value.body, n);
        },
        qr = {
          '\\Bbb': '\\mathbb',
          '\\bold': '\\mathbf',
          '\\frak': '\\mathfrak',
          '\\bm': '\\boldsymbol',
        };
      bt({
        type: 'font',
        names: [
          '\\mathrm',
          '\\mathit',
          '\\mathbf',
          '\\mathbb',
          '\\mathcal',
          '\\mathfrak',
          '\\mathscr',
          '\\mathsf',
          '\\mathtt',
          '\\Bbb',
          '\\bold',
          '\\frak',
        ],
        props: { numArgs: 1, greediness: 2 },
        handler: function (e, t) {
          var r = e.parser,
            n = e.funcName,
            a = t[0],
            i = n;
          return (
            i in qr && (i = qr[i]),
            new lt('font', { type: 'font', font: i.slice(1), body: a }, r.mode)
          );
        },
        htmlBuilder: Cr,
        mathmlBuilder: Er,
      }),
        bt({
          type: 'mclass',
          names: ['\\boldsymbol', '\\bm'],
          props: { numArgs: 1, greediness: 2 },
          handler: function (e, t) {
            var r = e.parser,
              n = t[0],
              a = 'mord',
              i =
                'ordgroup' === n.type && n.value.length
                  ? n.value[0].type
                  : n.type;
            return (
              /^(bin|rel)$/.test(i) && (a = 'm' + i),
              new lt(
                'mclass',
                {
                  type: 'mclass',
                  mclass: a,
                  value: [
                    new lt(
                      'font',
                      { type: 'font', font: 'boldsymbol', body: n },
                      r.mode
                    ),
                  ],
                },
                r.mode
              )
            );
          },
        });
      var Ir = {
        '\\rm': 'mathrm',
        '\\sf': 'mathsf',
        '\\tt': 'mathtt',
        '\\bf': 'mathbf',
        '\\it': 'mathit',
      };
      bt({
        type: 'font',
        names: Or()(Ir),
        props: { numArgs: 0, allowedInText: !0 },
        handler: function (e, t) {
          var r = e.parser,
            n = e.funcName,
            a = e.breakOnTokenText,
            i = r.mode;
          r.consumeSpaces();
          var o = r.parseExpression(!0, a);
          return new lt(
            'font',
            { type: 'font', font: Ir[n], body: new lt('ordgroup', o, r.mode) },
            i
          );
        },
        htmlBuilder: Cr,
        mathmlBuilder: Er,
      });
      var Lr = function (e, t) {
          var r = t.style;
          'display' === e.value.size
            ? (r = I.DISPLAY)
            : 'text' === e.value.size && r.size === I.DISPLAY.size
            ? (r = I.TEXT)
            : 'script' === e.value.size
            ? (r = I.SCRIPT)
            : 'scriptscript' === e.value.size && (r = I.SCRIPTSCRIPT);
          var n = r.fracNum(),
            a = r.fracDen(),
            i = void 0;
          i = t.havingStyle(n);
          var o = qt(e.value.numer, i, t);
          if (e.value.continued) {
            var s = 8.5 / t.fontMetrics().ptPerEm,
              l = 3.5 / t.fontMetrics().ptPerEm;
            (o.height = o.height < s ? s : o.height),
              (o.depth = o.depth < l ? l : o.depth);
          }
          i = t.havingStyle(a);
          var u = qt(e.value.denom, i, t),
            h = void 0,
            c = void 0,
            m = void 0;
          e.value.hasBarLine
            ? (e.value.barSize
                ? ((c = Xe(e.value.barSize, t)),
                  (h = st.makeLineSpan('frac-line', t, c)))
                : (h = st.makeLineSpan('frac-line', t)),
              (c = h.height),
              (m = h.height))
            : ((h = null), (c = 0), (m = t.fontMetrics().defaultRuleThickness));
          var p = void 0,
            d = void 0,
            f = void 0;
          r.size === I.DISPLAY.size
            ? ((p = t.fontMetrics().num1),
              (d = c > 0 ? 3 * m : 7 * m),
              (f = t.fontMetrics().denom1))
            : (c > 0
                ? ((p = t.fontMetrics().num2), (d = m))
                : ((p = t.fontMetrics().num3), (d = 3 * m)),
              (f = t.fontMetrics().denom2));
          var v = void 0;
          if (h) {
            var g = t.fontMetrics().axisHeight;
            p - o.depth - (g + 0.5 * c) < d &&
              (p += d - (p - o.depth - (g + 0.5 * c))),
              g - 0.5 * c - (u.height - f) < d &&
                (f += d - (g - 0.5 * c - (u.height - f)));
            var y = -(g - 0.5 * c);
            v = st.makeVList(
              {
                positionType: 'individualShift',
                children: [
                  { type: 'elem', elem: u, shift: f },
                  { type: 'elem', elem: h, shift: y },
                  { type: 'elem', elem: o, shift: -p },
                ],
              },
              t
            );
          } else {
            var x = p - o.depth - (u.height - f);
            x < d && ((p += 0.5 * (d - x)), (f += 0.5 * (d - x))),
              (v = st.makeVList(
                {
                  positionType: 'individualShift',
                  children: [
                    { type: 'elem', elem: u, shift: f },
                    { type: 'elem', elem: o, shift: -p },
                  ],
                },
                t
              ));
          }
          (i = t.havingStyle(r)),
            (v.height *= i.sizeMultiplier / t.sizeMultiplier),
            (v.depth *= i.sizeMultiplier / t.sizeMultiplier);
          var b = void 0;
          b =
            r.size === I.DISPLAY.size
              ? t.fontMetrics().delim1
              : t.fontMetrics().delim2;
          var w = void 0,
            k = void 0;
          return (
            (w =
              null == e.value.leftDelim
                ? Et(t, ['mopen'])
                : wr(e.value.leftDelim, b, !0, t.havingStyle(r), e.mode, [
                    'mopen',
                  ])),
            (k = e.value.continued
              ? st.makeSpan([])
              : null == e.value.rightDelim
              ? Et(t, ['mclose'])
              : wr(e.value.rightDelim, b, !0, t.havingStyle(r), e.mode, [
                  'mclose',
                ])),
            st.makeSpan(
              ['mord'].concat(i.sizingClasses(t)),
              [w, st.makeSpan(['mfrac'], [v]), k],
              t
            )
          );
        },
        Pr = function (e, t) {
          var r = new Pt.MathNode('mfrac', [
            jt(e.value.numer, t),
            jt(e.value.denom, t),
          ]);
          if (e.value.hasBarLine) {
            if (e.value.barSize) {
              var n = Xe(e.value.barSize, t);
              r.setAttribute('linethickness', n + 'em');
            }
          } else r.setAttribute('linethickness', '0px');
          if (null != e.value.leftDelim || null != e.value.rightDelim) {
            var a = [];
            if (null != e.value.leftDelim) {
              var i = new Pt.MathNode('mo', [
                new Pt.TextNode(e.value.leftDelim),
              ]);
              i.setAttribute('fence', 'true'), a.push(i);
            }
            if ((a.push(r), null != e.value.rightDelim)) {
              var o = new Pt.MathNode('mo', [
                new Pt.TextNode(e.value.rightDelim),
              ]);
              o.setAttribute('fence', 'true'), a.push(o);
            }
            return Rt(a);
          }
          return r;
        };
      bt({
        type: 'genfrac',
        names: [
          '\\cfrac',
          '\\dfrac',
          '\\frac',
          '\\tfrac',
          '\\dbinom',
          '\\binom',
          '\\tbinom',
          '\\\\atopfrac',
          '\\\\bracefrac',
          '\\\\brackfrac',
        ],
        props: { numArgs: 2, greediness: 2 },
        handler: function (e, t) {
          var r = e.parser,
            n = e.funcName,
            a = t[0],
            i = t[1],
            o = void 0,
            s = null,
            l = null,
            u = 'auto';
          switch (n) {
            case '\\cfrac':
            case '\\dfrac':
            case '\\frac':
            case '\\tfrac':
              o = !0;
              break;
            case '\\\\atopfrac':
              o = !1;
              break;
            case '\\dbinom':
            case '\\binom':
            case '\\tbinom':
              (o = !1), (s = '('), (l = ')');
              break;
            case '\\\\bracefrac':
              (o = !1), (s = '\\{'), (l = '\\}');
              break;
            case '\\\\brackfrac':
              (o = !1), (s = '['), (l = ']');
              break;
            default:
              throw new Error('Unrecognized genfrac command');
          }
          switch (n) {
            case '\\cfrac':
            case '\\dfrac':
            case '\\dbinom':
              u = 'display';
              break;
            case '\\tfrac':
            case '\\tbinom':
              u = 'text';
          }
          return new lt(
            'genfrac',
            {
              type: 'genfrac',
              continued: '\\cfrac' === n,
              numer: a,
              denom: i,
              hasBarLine: o,
              leftDelim: s,
              rightDelim: l,
              size: u,
              barSize: null,
            },
            r.mode
          );
        },
        htmlBuilder: Lr,
        mathmlBuilder: Pr,
      }),
        bt({
          type: 'infix',
          names: ['\\over', '\\choose', '\\atop', '\\brace', '\\brack'],
          props: { numArgs: 0, infix: !0 },
          handler: function (e) {
            var t = e.parser,
              r = e.funcName,
              n = e.token,
              a = void 0;
            switch (r) {
              case '\\over':
                a = '\\frac';
                break;
              case '\\choose':
                a = '\\binom';
                break;
              case '\\atop':
                a = '\\\\atopfrac';
                break;
              case '\\brace':
                a = '\\\\bracefrac';
                break;
              case '\\brack':
                a = '\\\\brackfrac';
                break;
              default:
                throw new Error('Unrecognized infix genfrac command');
            }
            return new lt(
              'infix',
              { type: 'infix', replaceWith: a, token: n },
              t.mode
            );
          },
        });
      var _r = ['display', 'text', 'script', 'scriptscript'],
        Rr = function (e) {
          var t = null;
          return e.length > 0 && (t = '.' === (t = e) ? null : t), t;
        };
      bt({
        type: 'genfrac',
        names: ['\\genfrac'],
        props: {
          numArgs: 6,
          greediness: 6,
          argTypes: ['math', 'math', 'size', 'text', 'math', 'math'],
        },
        handler: function (e, t) {
          var r = e.parser,
            n = t[4],
            a = t[5],
            i = ht(t[0], 'ordgroup');
          i = ut(i ? i.value[0] : t[0], 'open');
          var o = Rr(i.value),
            s = ht(t[1], 'ordgroup');
          s = ut(s ? s.value[0] : t[1], 'close');
          var l = Rr(s.value),
            u = ut(t[2], 'size'),
            h = void 0,
            c = null;
          h = !!u.value.isBlank || (c = u.value.value).number > 0;
          var m = 'auto',
            p = ht(t[3], 'ordgroup');
          return (
            p
              ? p.value.length > 0 && (m = _r[Number(p.value[0].value)])
              : ((p = ut(t[3], 'textord')), (m = _r[Number(p.value)])),
            new lt(
              'genfrac',
              {
                type: 'genfrac',
                numer: n,
                denom: a,
                continued: !1,
                hasBarLine: h,
                barSize: c,
                leftDelim: o,
                rightDelim: l,
                size: m,
              },
              r.mode
            )
          );
        },
        htmlBuilder: Lr,
        mathmlBuilder: Pr,
      }),
        bt({
          type: 'infix',
          names: ['\\above'],
          props: { numArgs: 1, argTypes: ['size'], infix: !0 },
          handler: function (e, t) {
            var r = e.parser,
              n = (e.funcName, e.token),
              a = ut(t[0], 'size');
            return new lt(
              'infix',
              {
                type: 'infix',
                replaceWith: '\\\\abovefrac',
                sizeNode: a,
                token: n,
              },
              r.mode
            );
          },
        }),
        bt({
          type: 'genfrac',
          names: ['\\\\abovefrac'],
          props: { numArgs: 3, argTypes: ['math', 'size', 'math'] },
          handler: function (e, t) {
            var r = e.parser,
              n = (e.funcName, t[0]),
              a = ut(ut(t[1], 'infix').value.sizeNode, 'size'),
              i = t[2],
              o = a.value.value,
              s = o.number > 0;
            return new lt(
              'genfrac',
              {
                type: 'genfrac',
                numer: n,
                denom: i,
                continued: !1,
                hasBarLine: s,
                barSize: o,
                leftDelim: null,
                rightDelim: null,
                size: 'auto',
              },
              r.mode
            );
          },
          htmlBuilder: Lr,
          mathmlBuilder: Pr,
        });
      var Dr = function (e, t) {
        var r = t.style,
          n = void 0,
          a = void 0,
          i = ht(e, 'supsub');
        i
          ? ((n = i.value.sup
              ? qt(i.value.sup, t.havingStyle(r.sup()), t)
              : qt(i.value.sub, t.havingStyle(r.sub()), t)),
            (a = ut(i.value.base, 'horizBrace')))
          : (a = ut(e, 'horizBrace'));
        var o = qt(a.value.base, t.havingBaseStyle(I.DISPLAY)),
          s = Zt(a, t),
          l = void 0;
        if (
          (a.value.isOver
            ? (l = st.makeVList(
                {
                  positionType: 'firstBaseline',
                  children: [
                    { type: 'elem', elem: o },
                    { type: 'kern', size: 0.1 },
                    { type: 'elem', elem: s },
                  ],
                },
                t
              )).children[0].children[0].children[1].classes.push('svg-align')
            : (l = st.makeVList(
                {
                  positionType: 'bottom',
                  positionData: o.depth + 0.1 + s.height,
                  children: [
                    { type: 'elem', elem: s },
                    { type: 'kern', size: 0.1 },
                    { type: 'elem', elem: o },
                  ],
                },
                t
              )).children[0].children[0].children[0].classes.push('svg-align'),
          n)
        ) {
          var u = st.makeSpan(
            ['mord', a.value.isOver ? 'mover' : 'munder'],
            [l],
            t
          );
          l = a.value.isOver
            ? st.makeVList(
                {
                  positionType: 'firstBaseline',
                  children: [
                    { type: 'elem', elem: u },
                    { type: 'kern', size: 0.2 },
                    { type: 'elem', elem: n },
                  ],
                },
                t
              )
            : st.makeVList(
                {
                  positionType: 'bottom',
                  positionData: u.depth + 0.2 + n.height + n.depth,
                  children: [
                    { type: 'elem', elem: n },
                    { type: 'kern', size: 0.2 },
                    { type: 'elem', elem: u },
                  ],
                },
                t
              );
        }
        return st.makeSpan(
          ['mord', a.value.isOver ? 'mover' : 'munder'],
          [l],
          t
        );
      };
      bt({
        type: 'horizBrace',
        names: ['\\overbrace', '\\underbrace'],
        props: { numArgs: 1 },
        handler: function (e, t) {
          var r = e.parser,
            n = e.funcName;
          return new lt(
            'horizBrace',
            {
              type: 'horizBrace',
              label: n,
              isOver: /^\\over/.test(n),
              base: t[0],
            },
            r.mode
          );
        },
        htmlBuilder: Dr,
        mathmlBuilder: function (e, t) {
          var r = $t(e.value.label);
          return new Pt.MathNode(e.value.isOver ? 'mover' : 'munder', [
            jt(e.value.base, t),
            r,
          ]);
        },
      }),
        bt({
          type: 'href',
          names: ['\\href'],
          props: {
            numArgs: 2,
            argTypes: ['string', 'original'],
            allowedInText: !0,
          },
          handler: function (e, t) {
            var r = e.parser,
              n = t[1],
              a = ut(t[0], 'string').value.value.replace(
                /\\([#$%&~_^{}])/g,
                '$1'
              );
            return new lt(
              'href',
              { type: 'href', href: a, body: kt(n) },
              r.mode
            );
          },
          htmlBuilder: function (e, t) {
            var r = Bt(e.value.body, t, !1),
              n = e.value.href;
            return new st.makeAnchor(n, [], r, t);
          },
          mathmlBuilder: function (e, t) {
            var r = Ft(e.value.body, t);
            return r.setAttribute('href', e.value.href), r;
          },
        });
      var Hr = r(63),
        Fr = r.n(Hr);
      bt({
        type: 'mclass',
        names: ['\\class', '\\cssId'],
        props: {
          numArgs: 2,
          argTypes: ['string', 'original'],
          allowedInText: !0,
        },
        handler: function (e, t) {
          var r = e.parser,
            n = e.funcName,
            a = t[1],
            i = 'mord',
            o =
              'ordgroup' === a.type && a.value.length
                ? a.value[0].type
                : a.type;
          /^(bin|rel)$/.test(o) && (i = 'm' + o);
          var s = ut(t[0], 'string').value.value;
          return new lt(
            'mclass',
            {
              type: 'mclass',
              mclass: i,
              value: [
                new lt(
                  'html',
                  Fr()({ type: 'html', body: a }, n.substr(1), s),
                  r.mode
                ),
              ],
            },
            r.mode
          );
        },
      }),
        bt({
          type: 'html',
          names: [],
          props: { numArgs: 2, argTypes: ['string', 'original'] },
          htmlBuilder: function (e, t) {
            var r = qt(e.value.body, t),
              n = ['enclosing'];
            e.value.class &&
              n.push.apply(n, z()(e.value.class.trim().split(/\s+/)));
            var a = new st.makeSpan(n, [r], t);
            return e.value.cssId && a.setAttribute('id', e.value.cssId), a;
          },
          mathmlBuilder: function (e, t) {
            var r = Ft(e.value.body, t);
            return (
              e.value.class && r.setAttribute('class', e.value.class),
              e.value.cssId && r.setAttribute('id', e.value.cssId),
              r
            );
          },
        }),
        bt({
          type: 'kern',
          names: ['\\kern', '\\mkern', '\\hskip', '\\mskip'],
          props: { numArgs: 1, argTypes: ['size'], allowedInText: !0 },
          handler: function (e, t) {
            var r = e.parser,
              n = e.funcName,
              a = ut(t[0], 'size');
            if (r.settings.strict) {
              var i = 'm' === n[1],
                o = 'mu' === a.value.value.unit;
              i
                ? (o ||
                    r.settings.reportNonstrict(
                      'mathVsTextUnits',
                      "LaTeX's " +
                        n +
                        ' supports only mu units, not ' +
                        a.value.value.unit +
                        ' units'
                    ),
                  'math' !== r.mode &&
                    r.settings.reportNonstrict(
                      'mathVsTextUnits',
                      "LaTeX's " + n + ' works only in math mode'
                    ))
                : o &&
                  r.settings.reportNonstrict(
                    'mathVsTextUnits',
                    "LaTeX's " + n + " doesn't support mu units"
                  );
            }
            return new lt(
              'kern',
              { type: 'kern', dimension: a.value.value },
              r.mode
            );
          },
          htmlBuilder: function (e, t) {
            return st.makeGlue(e.value.dimension, t);
          },
          mathmlBuilder: function (e, t) {
            var r = Xe(e.value.dimension, t);
            return new Pt.SpaceNode(r);
          },
        }),
        bt({
          type: 'lap',
          names: ['\\mathllap', '\\mathrlap', '\\mathclap'],
          props: { numArgs: 1, allowedInText: !0 },
          handler: function (e, t) {
            var r = e.parser,
              n = e.funcName,
              a = t[0];
            return new lt(
              'lap',
              { type: 'lap', alignment: n.slice(5), body: a },
              r.mode
            );
          },
          htmlBuilder: function (e, t) {
            var r = void 0;
            'clap' === e.value.alignment
              ? ((r = st.makeSpan([], [qt(e.value.body, t)])),
                (r = st.makeSpan(['inner'], [r], t)))
              : (r = st.makeSpan(['inner'], [qt(e.value.body, t)]));
            var n = st.makeSpan(['fix'], []),
              a = st.makeSpan([e.value.alignment], [r, n], t),
              i = st.makeSpan(['strut']);
            return (
              (i.style.height = a.height + a.depth + 'em'),
              (i.style.verticalAlign = -a.depth + 'em'),
              a.children.unshift(i),
              (a = st.makeVList(
                {
                  positionType: 'firstBaseline',
                  children: [{ type: 'elem', elem: a }],
                },
                t
              )),
              st.makeSpan(['mord'], [a], t)
            );
          },
          mathmlBuilder: function (e, t) {
            var r = new Pt.MathNode('mpadded', [jt(e.value.body, t)]);
            if ('rlap' !== e.value.alignment) {
              var n = 'llap' === e.value.alignment ? '-1' : '-0.5';
              r.setAttribute('lspace', n + 'width');
            }
            return r.setAttribute('width', '0px'), r;
          },
        }),
        bt({
          type: 'styling',
          names: ['\\(', '$'],
          props: {
            numArgs: 0,
            allowedInText: !0,
            allowedInMath: !1,
            consumeMode: 'math',
          },
          handler: function (e, t) {
            var r = e.funcName,
              n = e.parser,
              a = n.mode;
            n.switchMode('math');
            var i = '\\(' === r ? '\\)' : '$',
              o = n.parseExpression(!1, i);
            return (
              n.expect(i, !1),
              n.switchMode(a),
              n.consume(),
              new lt(
                'styling',
                { type: 'styling', style: 'text', value: o },
                n.mode
              )
            );
          },
        }),
        bt({
          type: 'text',
          names: ['\\)', '\\]'],
          props: { numArgs: 0, allowedInText: !0, allowedInMath: !1 },
          handler: function (e, t) {
            throw new m('Mismatched ' + e.funcName);
          },
        });
      var jr = function (e, t) {
        var r = t.style;
        return r.size === I.DISPLAY.size
          ? e.value.display
          : r.size === I.TEXT.size
          ? e.value.text
          : r.size === I.SCRIPT.size
          ? e.value.script
          : r.size === I.SCRIPTSCRIPT.size
          ? e.value.scriptscript
          : e.value.text;
      };
      bt({
        type: 'mathchoice',
        names: ['\\mathchoice'],
        props: { numArgs: 4 },
        handler: function (e, t) {
          var r = e.parser;
          return new lt(
            'mathchoice',
            {
              type: 'mathchoice',
              display: kt(t[0]),
              text: kt(t[1]),
              script: kt(t[2]),
              scriptscript: kt(t[3]),
            },
            r.mode
          );
        },
        htmlBuilder: function (e, t) {
          var r = jr(e, t),
            n = Bt(r, t, !1);
          return new st.makeFragment(n);
        },
        mathmlBuilder: function (e, t) {
          var r = jr(e, t);
          return Ft(r, t);
        },
      });
      var Vr = st.makeSpan;
      function Gr(e, t) {
        var r = Bt(e.value.value, t, !0);
        return Vr([e.value.mclass], r, t);
      }
      function Ur(e, t) {
        var r = Ht(e.value.value, t);
        return new Pt.MathNode('mstyle', r);
      }
      bt({
        type: 'mclass',
        names: [
          '\\mathord',
          '\\mathbin',
          '\\mathrel',
          '\\mathopen',
          '\\mathclose',
          '\\mathpunct',
          '\\mathinner',
        ],
        props: { numArgs: 1 },
        handler: function (e, t) {
          var r = e.parser,
            n = e.funcName,
            a = t[0];
          return new lt(
            'mclass',
            { type: 'mclass', mclass: 'm' + n.substr(5), value: kt(a) },
            r.mode
          );
        },
        htmlBuilder: Gr,
        mathmlBuilder: Ur,
      }),
        bt({
          type: 'mclass',
          names: ['\\stackrel', '\\overset', '\\underset'],
          props: { numArgs: 2 },
          handler: function (e, t) {
            var r = e.parser,
              n = e.funcName,
              a = t[1],
              i = t[0],
              o = 'mrel';
            if ('\\stackrel' !== n) {
              var s =
                'ordgroup' === a.type && a.value.length
                  ? a.value[0].type
                  : a.type;
              o = /^(bin|rel)$/.test(s) ? 'm' + s : 'mord';
            }
            var l = new lt(
                'op',
                {
                  type: 'op',
                  limits: !0,
                  alwaysHandleSupSub: !0,
                  symbol: !1,
                  suppressBaseShift: '\\stackrel' !== n,
                  value: kt(a),
                },
                a.mode
              ),
              u = new lt(
                'supsub',
                {
                  type: 'supsub',
                  base: l,
                  sup: '\\underset' === n ? null : i,
                  sub: '\\underset' === n ? i : null,
                },
                i.mode
              );
            return new lt(
              'mclass',
              { type: 'mclass', mclass: o, value: [u] },
              r.mode
            );
          },
          htmlBuilder: Gr,
          mathmlBuilder: Ur,
        });
      var Wr = function (e, t) {
          var r = void 0,
            n = void 0,
            a = !1,
            i = void 0,
            o = ht(e, 'supsub');
          o
            ? ((r = o.value.sup),
              (n = o.value.sub),
              (i = ut(o.value.base, 'op')),
              (a = !0))
            : (i = ut(e, 'op'));
          var s = t.style,
            l = !1;
          s.size === I.DISPLAY.size &&
            i.value.symbol &&
            !k.contains(['\\smallint'], i.value.body) &&
            (l = !0);
          var u = void 0;
          if (i.value.symbol) {
            var h = l ? 'Size2-Regular' : 'Size1-Regular',
              c = '';
            if (
              (('\\oiint' !== i.value.body && '\\oiiint' !== i.value.body) ||
                ((c = i.value.body.substr(1)),
                (i.value.body = 'oiint' === c ? '\\iint' : '\\iiint')),
              (u = st.makeSymbol(i.value.body, h, 'math', t, [
                'mop',
                'op-symbol',
                l ? 'large-op' : 'small-op',
              ])),
              c.length > 0)
            ) {
              var m = u.italic,
                p = st.staticSvg(c + 'Size' + (l ? '2' : '1'), t);
              (u = st.makeVList(
                {
                  positionType: 'individualShift',
                  children: [
                    { type: 'elem', elem: u, shift: 0 },
                    { type: 'elem', elem: p, shift: l ? 0.08 : 0 },
                  ],
                },
                t
              )),
                (i.value.body = '\\' + c),
                u.classes.unshift('mop'),
                (u.italic = m);
            }
          } else if (i.value.value) {
            var d = Bt(i.value.value, t, !0);
            1 === d.length && d[0] instanceof se.symbolNode
              ? ((u = d[0]).classes[0] = 'mop')
              : (u = st.makeSpan(['mop'], d, t));
          } else {
            for (var f = [], v = 1; v < i.value.body.length; v++)
              f.push(st.mathsym(i.value.body[v], i.mode));
            u = st.makeSpan(['mop'], f, t);
          }
          var g = 0,
            y = 0;
          if (
            ((u instanceof se.symbolNode ||
              '\\oiint' === i.value.body ||
              '\\oiiint' === i.value.body) &&
              !i.value.suppressBaseShift &&
              ((g = (u.height - u.depth) / 2 - t.fontMetrics().axisHeight),
              (y = u.italic)),
            a)
          ) {
            u = st.makeSpan([], [u]);
            var x = void 0,
              b = void 0;
            if (r) {
              var w = qt(r, t.havingStyle(s.sup()), t);
              b = {
                elem: w,
                kern: Math.max(
                  t.fontMetrics().bigOpSpacing1,
                  t.fontMetrics().bigOpSpacing3 - w.depth
                ),
              };
            }
            if (n) {
              var S = qt(n, t.havingStyle(s.sub()), t);
              x = {
                elem: S,
                kern: Math.max(
                  t.fontMetrics().bigOpSpacing2,
                  t.fontMetrics().bigOpSpacing4 - S.height
                ),
              };
            }
            var M = void 0;
            if (b && x) {
              var z =
                t.fontMetrics().bigOpSpacing5 +
                x.elem.height +
                x.elem.depth +
                x.kern +
                u.depth +
                g;
              M = st.makeVList(
                {
                  positionType: 'bottom',
                  positionData: z,
                  children: [
                    { type: 'kern', size: t.fontMetrics().bigOpSpacing5 },
                    { type: 'elem', elem: x.elem, marginLeft: -y + 'em' },
                    { type: 'kern', size: x.kern },
                    { type: 'elem', elem: u },
                    { type: 'kern', size: b.kern },
                    { type: 'elem', elem: b.elem, marginLeft: y + 'em' },
                    { type: 'kern', size: t.fontMetrics().bigOpSpacing5 },
                  ],
                },
                t
              );
            } else if (x) {
              var T = u.height - g;
              M = st.makeVList(
                {
                  positionType: 'top',
                  positionData: T,
                  children: [
                    { type: 'kern', size: t.fontMetrics().bigOpSpacing5 },
                    { type: 'elem', elem: x.elem, marginLeft: -y + 'em' },
                    { type: 'kern', size: x.kern },
                    { type: 'elem', elem: u },
                  ],
                },
                t
              );
            } else {
              if (!b) return u;
              var A = u.depth + g;
              M = st.makeVList(
                {
                  positionType: 'bottom',
                  positionData: A,
                  children: [
                    { type: 'elem', elem: u },
                    { type: 'kern', size: b.kern },
                    { type: 'elem', elem: b.elem, marginLeft: y + 'em' },
                    { type: 'kern', size: t.fontMetrics().bigOpSpacing5 },
                  ],
                },
                t
              );
            }
            return st.makeSpan(['mop', 'op-limits'], [M], t);
          }
          return (
            g && ((u.style.position = 'relative'), (u.style.top = g + 'em')), u
          );
        },
        Yr = function (e, t) {
          var r = void 0;
          if (e.value.symbol)
            r = new Pt.MathNode('mo', [_t(e.value.body, e.mode)]);
          else {
            if (!e.value.value) {
              r = new Pt.MathNode('mi', [
                new Pt.TextNode(e.value.body.slice(1)),
              ]);
              var n = new Pt.MathNode('mo', [_t('\u2061', 'text')]);
              return new se.documentFragment([r, n]);
            }
            r = new Pt.MathNode('mo', Ht(e.value.value, t));
          }
          return r;
        },
        Xr = {
          '\u220f': '\\prod',
          '\u2210': '\\coprod',
          '\u2211': '\\sum',
          '\u22c0': '\\bigwedge',
          '\u22c1': '\\bigvee',
          '\u22c2': '\\bigcap',
          '\u22c3': '\\bigcap',
          '\u2a00': '\\bigodot',
          '\u2a01': '\\bigoplus',
          '\u2a02': '\\bigotimes',
          '\u2a04': '\\biguplus',
          '\u2a06': '\\bigsqcup',
        };
      bt({
        type: 'op',
        names: [
          '\\coprod',
          '\\bigvee',
          '\\bigwedge',
          '\\biguplus',
          '\\bigcap',
          '\\bigcup',
          '\\intop',
          '\\prod',
          '\\sum',
          '\\bigotimes',
          '\\bigoplus',
          '\\bigodot',
          '\\bigsqcup',
          '\\smallint',
          '\u220f',
          '\u2210',
          '\u2211',
          '\u22c0',
          '\u22c1',
          '\u22c2',
          '\u22c3',
          '\u2a00',
          '\u2a01',
          '\u2a02',
          '\u2a04',
          '\u2a06',
        ],
        props: { numArgs: 0 },
        handler: function (e, t) {
          var r = e.parser,
            n = e.funcName;
          return (
            1 === n.length && (n = Xr[n]),
            new lt(
              'op',
              { type: 'op', limits: !0, symbol: !0, body: n },
              r.mode
            )
          );
        },
        htmlBuilder: Wr,
        mathmlBuilder: Yr,
      }),
        bt({
          type: 'op',
          names: ['\\mathop'],
          props: { numArgs: 1 },
          handler: function (e, t) {
            var r = e.parser,
              n = t[0];
            return new lt(
              'op',
              { type: 'op', limits: !1, symbol: !1, value: kt(n) },
              r.mode
            );
          },
          htmlBuilder: Wr,
          mathmlBuilder: Yr,
        });
      var $r = {
        '\u222b': '\\int',
        '\u222c': '\\iint',
        '\u222d': '\\iiint',
        '\u222e': '\\oint',
        '\u222f': '\\oiint',
        '\u2230': '\\oiiint',
      };
      function Zr(e, t, r) {
        for (
          var n = Bt(e, t, !1), a = t.sizeMultiplier / r.sizeMultiplier, i = 0;
          i < n.length;
          i++
        ) {
          var o = k.indexOf(n[i].classes, 'sizing');
          o < 0
            ? Array.prototype.push.apply(n[i].classes, t.sizingClasses(r))
            : n[i].classes[o + 1] === 'reset-size' + t.size &&
              (n[i].classes[o + 1] = 'reset-size' + r.size),
            (n[i].height *= a),
            (n[i].depth *= a);
        }
        return st.makeFragment(n);
      }
      bt({
        type: 'op',
        names: ['\\mathop'],
        props: { numArgs: 1 },
        handler: function (e, t) {
          var r = e.parser,
            n = t[0];
          return new lt(
            'op',
            { type: 'op', limits: !1, symbol: !1, value: kt(n) },
            r.mode
          );
        },
        htmlBuilder: Wr,
        mathmlBuilder: Yr,
      }),
        bt({
          type: 'op',
          names: [
            '\\arcsin',
            '\\arccos',
            '\\arctan',
            '\\arctg',
            '\\arcctg',
            '\\arg',
            '\\ch',
            '\\cos',
            '\\cosec',
            '\\cosh',
            '\\cot',
            '\\cotg',
            '\\coth',
            '\\csc',
            '\\ctg',
            '\\cth',
            '\\deg',
            '\\dim',
            '\\exp',
            '\\hom',
            '\\ker',
            '\\lg',
            '\\ln',
            '\\log',
            '\\sec',
            '\\sin',
            '\\sinh',
            '\\sh',
            '\\tan',
            '\\tanh',
            '\\tg',
            '\\th',
          ],
          props: { numArgs: 0 },
          handler: function (e) {
            var t = e.parser,
              r = e.funcName;
            return new lt(
              'op',
              { type: 'op', limits: !1, symbol: !1, body: r },
              t.mode
            );
          },
          htmlBuilder: Wr,
          mathmlBuilder: Yr,
        }),
        bt({
          type: 'op',
          names: [
            '\\det',
            '\\gcd',
            '\\inf',
            '\\lim',
            '\\max',
            '\\min',
            '\\Pr',
            '\\sup',
          ],
          props: { numArgs: 0 },
          handler: function (e) {
            var t = e.parser,
              r = e.funcName;
            return new lt(
              'op',
              { type: 'op', limits: !0, symbol: !1, body: r },
              t.mode
            );
          },
          htmlBuilder: Wr,
          mathmlBuilder: Yr,
        }),
        bt({
          type: 'op',
          names: [
            '\\int',
            '\\iint',
            '\\iiint',
            '\\oint',
            '\\oiint',
            '\\oiiint',
            '\u222b',
            '\u222c',
            '\u222d',
            '\u222e',
            '\u222f',
            '\u2230',
          ],
          props: { numArgs: 0 },
          handler: function (e) {
            var t = e.parser,
              r = e.funcName;
            return (
              1 === r.length && (r = $r[r]),
              new lt(
                'op',
                { type: 'op', limits: !1, symbol: !0, body: r },
                t.mode
              )
            );
          },
          htmlBuilder: Wr,
          mathmlBuilder: Yr,
        }),
        bt({
          type: 'operatorname',
          names: ['\\operatorname'],
          props: { numArgs: 1 },
          handler: function (e, t) {
            var r = e.parser,
              n = t[0];
            return new lt(
              'operatorname',
              { type: 'operatorname', value: kt(n) },
              r.mode
            );
          },
          htmlBuilder: function (e, t) {
            var r = [];
            if (e.value.value.length > 0) {
              var n = '',
                a = '',
                i = e.value.value.map(function (e) {
                  var t = e.value;
                  return 'string' == typeof t && -1 !== '*-/:'.indexOf(t)
                    ? new lt('textord', t, e.mode)
                    : e;
                }),
                o = Bt(i, t.withFont('mathrm'), !0),
                s = !0,
                l = !1,
                u = void 0;
              try {
                for (var h, c = P()(o); !(s = (h = c.next()).done); s = !0) {
                  var m = h.value;
                  m instanceof se.symbolNode
                    ? ((n = (n = (n = m.value).replace(/\u2212/, '-')).replace(
                        /\u2217/,
                        '*'
                      )),
                      (a = /[\u0391-\u03D7]/.test(n) ? 'math' : 'text'),
                      r.push(st.mathsym(n, a)))
                    : r.push(m);
                }
              } catch (e) {
                (l = !0), (u = e);
              } finally {
                try {
                  !s && c.return && c.return();
                } finally {
                  if (l) throw u;
                }
              }
            }
            return st.makeSpan(['mop'], r, t);
          },
          mathmlBuilder: function (e, t) {
            var r = [];
            if (e.value.value.length > 0) {
              var n = Ht(e.value.value, t.withFont('mathrm'))
                .map(function (e) {
                  return e.toText();
                })
                .join('');
              (n = (n = n.replace(/\u2212/g, '-')).replace(/\u2217/g, '*')),
                (r = [new Pt.TextNode(n, !1)]);
            }
            var a = new Pt.MathNode('mi', r);
            a.setAttribute('mathvariant', 'normal');
            var i = new Pt.MathNode('mo', [_t('\u2061', 'text')]);
            return new se.documentFragment([a, i]);
          },
        }),
        wt({
          type: 'ordgroup',
          htmlBuilder: function (e, t) {
            return st.makeSpan(['mord'], Bt(e.value, t, !0), t);
          },
          mathmlBuilder: function (e, t) {
            return Ft(e.value, t);
          },
        }),
        bt({
          type: 'overline',
          names: ['\\overline'],
          props: { numArgs: 1 },
          handler: function (e, t) {
            var r = e.parser,
              n = t[0];
            return new lt('overline', { type: 'overline', body: n }, r.mode);
          },
          htmlBuilder: function (e, t) {
            var r = qt(e.value.body, t.havingCrampedStyle()),
              n = st.makeLineSpan('overline-line', t),
              a = st.makeVList(
                {
                  positionType: 'firstBaseline',
                  children: [
                    { type: 'elem', elem: r },
                    { type: 'kern', size: 3 * n.height },
                    { type: 'elem', elem: n },
                    { type: 'kern', size: n.height },
                  ],
                },
                t
              );
            return st.makeSpan(['mord', 'overline'], [a], t);
          },
          mathmlBuilder: function (e, t) {
            var r = new Pt.MathNode('mo', [new Pt.TextNode('\u203e')]);
            r.setAttribute('stretchy', 'true');
            var n = new Pt.MathNode('mover', [jt(e.value.body, t), r]);
            return n.setAttribute('accent', 'true'), n;
          },
        }),
        bt({
          type: 'phantom',
          names: ['\\phantom'],
          props: { numArgs: 1, allowedInText: !0 },
          handler: function (e, t) {
            var r = e.parser,
              n = t[0];
            return new lt('phantom', { type: 'phantom', value: kt(n) }, r.mode);
          },
          htmlBuilder: function (e, t) {
            var r = Bt(e.value.value, t.withPhantom(), !1);
            return new st.makeFragment(r);
          },
          mathmlBuilder: function (e, t) {
            var r = Ht(e.value.value, t);
            return new Pt.MathNode('mphantom', r);
          },
        }),
        bt({
          type: 'hphantom',
          names: ['\\hphantom'],
          props: { numArgs: 1, allowedInText: !0 },
          handler: function (e, t) {
            var r = e.parser,
              n = t[0];
            return new lt(
              'hphantom',
              { type: 'hphantom', value: kt(n), body: n },
              r.mode
            );
          },
          htmlBuilder: function (e, t) {
            var r = st.makeSpan([], [qt(e.value.body, t.withPhantom())]);
            if (((r.height = 0), (r.depth = 0), r.children))
              for (var n = 0; n < r.children.length; n++)
                (r.children[n].height = 0), (r.children[n].depth = 0);
            return (r = st.makeVList(
              {
                positionType: 'firstBaseline',
                children: [{ type: 'elem', elem: r }],
              },
              t
            ));
          },
          mathmlBuilder: function (e, t) {
            var r = Ht(e.value.value, t),
              n = new Pt.MathNode('mphantom', r);
            return n.setAttribute('height', '0px'), n;
          },
        }),
        bt({
          type: 'vphantom',
          names: ['\\vphantom'],
          props: { numArgs: 1, allowedInText: !0 },
          handler: function (e, t) {
            var r = e.parser,
              n = t[0];
            return new lt(
              'vphantom',
              { type: 'vphantom', value: kt(n), body: n },
              r.mode
            );
          },
          htmlBuilder: function (e, t) {
            var r = st.makeSpan(['inner'], [qt(e.value.body, t.withPhantom())]),
              n = st.makeSpan(['fix'], []);
            return st.makeSpan(['mord', 'rlap'], [r, n], t);
          },
          mathmlBuilder: function (e, t) {
            var r = Ht(e.value.value, t),
              n = new Pt.MathNode('mphantom', r);
            return n.setAttribute('width', '0px'), n;
          },
        });
      var Kr = [
          '\\tiny',
          '\\sixptsize',
          '\\scriptsize',
          '\\footnotesize',
          '\\small',
          '\\normalsize',
          '\\large',
          '\\Large',
          '\\LARGE',
          '\\huge',
          '\\Huge',
        ],
        Jr = function (e, t) {
          var r = t.havingSize(e.value.size);
          return Zr(e.value.value, r, t);
        };
      bt({
        type: 'sizing',
        names: Kr,
        props: { numArgs: 0, allowedInText: !0 },
        handler: function (e, t) {
          var r = e.breakOnTokenText,
            n = e.funcName,
            a = e.parser;
          a.consumeSpaces();
          var i = a.parseExpression(!1, r);
          return new lt(
            'sizing',
            { type: 'sizing', size: k.indexOf(Kr, n) + 1, value: i },
            a.mode
          );
        },
        htmlBuilder: Jr,
        mathmlBuilder: function (e, t) {
          var r = t.havingSize(e.value.size),
            n = Ht(e.value.value, r),
            a = new Pt.MathNode('mstyle', n);
          return a.setAttribute('mathsize', r.sizeMultiplier + 'em'), a;
        },
      }),
        bt({
          type: 'raisebox',
          names: ['\\raisebox'],
          props: { numArgs: 2, argTypes: ['size', 'text'], allowedInText: !0 },
          handler: function (e, t) {
            var r = e.parser,
              n = ut(t[0], 'size'),
              a = t[1];
            return new lt(
              'raisebox',
              { type: 'raisebox', dy: n, body: a, value: kt(a) },
              r.mode
            );
          },
          htmlBuilder: function (e, t) {
            var r = new lt(
                'text',
                { type: 'text', body: e.value.value, font: 'mathrm' },
                e.mode
              ),
              n = new lt(
                'sizing',
                { type: 'sizing', value: [r], size: 6 },
                e.mode
              ),
              a = Jr(n, t),
              i = Xe(e.value.dy.value.value, t);
            return st.makeVList(
              {
                positionType: 'shift',
                positionData: -i,
                children: [{ type: 'elem', elem: a }],
              },
              t
            );
          },
          mathmlBuilder: function (e, t) {
            var r = new Pt.MathNode('mpadded', [jt(e.value.body, t)]),
              n = e.value.dy.value.value.number + e.value.dy.value.value.unit;
            return r.setAttribute('voffset', n), r;
          },
        }),
        bt({
          type: 'rule',
          names: ['\\rule'],
          props: {
            numArgs: 2,
            numOptionalArgs: 1,
            argTypes: ['size', 'size', 'size'],
          },
          handler: function (e, t, r) {
            var n = e.parser,
              a = r[0],
              i = ut(t[0], 'size'),
              o = ut(t[1], 'size');
            return new lt(
              'rule',
              {
                type: 'rule',
                shift: a && ut(a, 'size').value.value,
                width: i.value.value,
                height: o.value.value,
              },
              n.mode
            );
          },
          htmlBuilder: function (e, t) {
            var r = st.makeSpan(['mord', 'rule'], [], t),
              n = 0;
            e.value.shift && (n = Xe(e.value.shift, t));
            var a = Xe(e.value.width, t),
              i = Xe(e.value.height, t);
            return (
              (r.style.borderRightWidth = a + 'em'),
              (r.style.borderTopWidth = i + 'em'),
              (r.style.bottom = n + 'em'),
              (r.width = a),
              (r.height = i + n),
              (r.depth = -n),
              (r.maxFontSize = 1.125 * i * t.sizeMultiplier),
              r
            );
          },
          mathmlBuilder: function (e, t) {
            return new Pt.MathNode('mrow');
          },
        }),
        bt({
          type: 'smash',
          names: ['\\smash'],
          props: { numArgs: 1, numOptionalArgs: 1, allowedInText: !0 },
          handler: function (e, t, r) {
            var n = e.parser,
              a = !1,
              i = !1,
              o = r[0] && ut(r[0], 'ordgroup');
            if (o)
              for (var s = '', l = 0; l < o.value.length; ++l)
                if ('t' === (s = o.value[l].value)) a = !0;
                else {
                  if ('b' !== s) {
                    (a = !1), (i = !1);
                    break;
                  }
                  i = !0;
                }
            else (a = !0), (i = !0);
            var u = t[0];
            return new lt(
              'smash',
              { type: 'smash', body: u, smashHeight: a, smashDepth: i },
              n.mode
            );
          },
          htmlBuilder: function (e, t) {
            var r = st.makeSpan(['mord'], [qt(e.value.body, t)]);
            if (!e.value.smashHeight && !e.value.smashDepth) return r;
            if (e.value.smashHeight && ((r.height = 0), r.children))
              for (var n = 0; n < r.children.length; n++)
                r.children[n].height = 0;
            if (e.value.smashDepth && ((r.depth = 0), r.children))
              for (var a = 0; a < r.children.length; a++)
                r.children[a].depth = 0;
            return st.makeVList(
              {
                positionType: 'firstBaseline',
                children: [{ type: 'elem', elem: r }],
              },
              t
            );
          },
          mathmlBuilder: function (e, t) {
            var r = new Pt.MathNode('mpadded', [jt(e.value.body, t)]);
            return (
              e.value.smashHeight && r.setAttribute('height', '0px'),
              e.value.smashDepth && r.setAttribute('depth', '0px'),
              r
            );
          },
        }),
        bt({
          type: 'sqrt',
          names: ['\\sqrt'],
          props: { numArgs: 1, numOptionalArgs: 1 },
          handler: function (e, t, r) {
            var n = e.parser,
              a = r[0],
              i = t[0];
            return new lt('sqrt', { type: 'sqrt', body: i, index: a }, n.mode);
          },
          htmlBuilder: function (e, t) {
            var r = qt(e.value.body, t.havingCrampedStyle());
            0 === r.height && (r.height = t.fontMetrics().xHeight),
              r instanceof se.documentFragment && (r = st.makeSpan([], [r], t));
            var n = t.fontMetrics().defaultRuleThickness,
              a = n;
            t.style.id < I.TEXT.id && (a = t.fontMetrics().xHeight);
            var i = n + a / 4,
              o = (r.height + r.depth + i + n) * t.sizeMultiplier,
              s = xr(o, t),
              l = s.span,
              u = s.ruleWidth,
              h = s.advanceWidth,
              c = l.height - u;
            c > r.height + r.depth + i &&
              (i = (i + c - r.height - r.depth) / 2);
            var m = l.height - r.height - i - u;
            r.style.paddingLeft = h + 'em';
            var p = st.makeVList(
              {
                positionType: 'firstBaseline',
                children: [
                  { type: 'elem', elem: r, wrapperClasses: ['svg-align'] },
                  { type: 'kern', size: -(r.height + m) },
                  { type: 'elem', elem: l },
                  { type: 'kern', size: u },
                ],
              },
              t
            );
            if (e.value.index) {
              var d = t.havingStyle(I.SCRIPTSCRIPT),
                f = qt(e.value.index, d, t),
                v = 0.6 * (p.height - p.depth),
                g = st.makeVList(
                  {
                    positionType: 'shift',
                    positionData: -v,
                    children: [{ type: 'elem', elem: f }],
                  },
                  t
                ),
                y = st.makeSpan(['root'], [g]);
              return st.makeSpan(['mord', 'sqrt'], [y, p], t);
            }
            return st.makeSpan(['mord', 'sqrt'], [p], t);
          },
          mathmlBuilder: function (e, t) {
            return e.value.index
              ? new Pt.MathNode('mroot', [
                  jt(e.value.body, t),
                  jt(e.value.index, t),
                ])
              : new Pt.MathNode('msqrt', [jt(e.value.body, t)]);
          },
        });
      var Qr = {
        display: I.DISPLAY,
        text: I.TEXT,
        script: I.SCRIPT,
        scriptscript: I.SCRIPTSCRIPT,
      };
      bt({
        type: 'styling',
        names: [
          '\\displaystyle',
          '\\textstyle',
          '\\scriptstyle',
          '\\scriptscriptstyle',
        ],
        props: { numArgs: 0, allowedInText: !0 },
        handler: function (e, t) {
          var r = e.breakOnTokenText,
            n = e.funcName,
            a = e.parser;
          a.consumeSpaces();
          var i = a.parseExpression(!0, r),
            o = n.slice(1, n.length - 5);
          return new lt(
            'styling',
            { type: 'styling', style: o, value: i },
            a.mode
          );
        },
        htmlBuilder: function (e, t) {
          var r = Qr[e.value.style],
            n = t.havingStyle(r).withFont('');
          return Zr(e.value.value, n, t);
        },
        mathmlBuilder: function (e, t) {
          var r = {
              display: I.DISPLAY,
              text: I.TEXT,
              script: I.SCRIPT,
              scriptscript: I.SCRIPTSCRIPT,
            }[e.value.style],
            n = t.havingStyle(r),
            a = Ht(e.value.value, n),
            i = new Pt.MathNode('mstyle', a),
            o = {
              display: ['0', 'true'],
              text: ['0', 'false'],
              script: ['1', 'false'],
              scriptscript: ['2', 'false'],
            }[e.value.style];
          return (
            i.setAttribute('scriptlevel', o[0]),
            i.setAttribute('displaystyle', o[1]),
            i
          );
        },
      });
      function en(e, t) {
        wt({
          type: e,
          htmlBuilder: function (t, r) {
            var n = t.value;
            return st.mathsym(n, t.mode, r, ['m' + e]);
          },
          mathmlBuilder: function (e, r) {
            var n = new Pt.MathNode('mo', [_t(e.value, e.mode)]);
            return t && t(n, e, r), n;
          },
        });
      }
      wt({
        type: 'supsub',
        htmlBuilder: function (e, t) {
          var r = (function (e, t) {
            var r = e.value.base;
            return r
              ? 'op' === r.type
                ? r.value.limits &&
                  (t.style.size === I.DISPLAY.size ||
                    r.value.alwaysHandleSupSub)
                  ? Wr
                  : null
                : 'accent' === r.type
                ? k.isCharacterBox(r.value.base)
                  ? Kt
                  : null
                : 'horizBrace' === r.type && !e.value.sub === r.value.isOver
                ? Dr
                : null
              : null;
          })(e, t);
          if (r) return r(e, t);
          var n = e.value,
            a = n.base,
            i = n.sup,
            o = n.sub,
            s = qt(a, t),
            l = void 0,
            u = void 0,
            h = t.fontMetrics(),
            c = 0,
            m = 0,
            p = a && k.isCharacterBox(a);
          if (i) {
            var d = t.havingStyle(t.style.sup());
            (l = qt(i, d, t)),
              p ||
                (c =
                  s.height -
                  (d.fontMetrics().supDrop * d.sizeMultiplier) /
                    t.sizeMultiplier);
          }
          if (o) {
            var f = t.havingStyle(t.style.sub());
            (u = qt(o, f, t)),
              p ||
                (m =
                  s.depth +
                  (f.fontMetrics().subDrop * f.sizeMultiplier) /
                    t.sizeMultiplier);
          }
          var v = void 0;
          v =
            t.style === I.DISPLAY ? h.sup1 : t.style.cramped ? h.sup3 : h.sup2;
          var g = t.sizeMultiplier,
            y = 0.5 / h.ptPerEm / g + 'em',
            x = null;
          if (u) {
            var b = !1;
            e.value.base &&
              (b =
                '\\oiint' === e.value.base.value.body ||
                '\\oiiint' === e.value.base.value.body),
              (s instanceof se.symbolNode || b) && (x = -s.italic + 'em');
          }
          var w = void 0;
          if (l && u) {
            (c = Math.max(c, v, l.depth + 0.25 * h.xHeight)),
              (m = Math.max(m, h.sub2));
            var S = 4 * h.defaultRuleThickness;
            if (c - l.depth - (u.height - m) < S) {
              m = S - (c - l.depth) + u.height;
              var M = 0.8 * h.xHeight - (c - l.depth);
              M > 0 && ((c += M), (m -= M));
            }
            var z = [
              {
                type: 'elem',
                elem: u,
                shift: m,
                marginRight: y,
                marginLeft: x,
              },
              { type: 'elem', elem: l, shift: -c, marginRight: y },
            ];
            w = st.makeVList(
              { positionType: 'individualShift', children: z },
              t
            );
          } else if (u) {
            m = Math.max(m, h.sub1, u.height - 0.8 * h.xHeight);
            var T = [{ type: 'elem', elem: u, marginLeft: x, marginRight: y }];
            w = st.makeVList(
              { positionType: 'shift', positionData: m, children: T },
              t
            );
          } else {
            if (!l) throw new Error('supsub must have either sup or sub.');
            (c = Math.max(c, v, l.depth + 0.25 * h.xHeight)),
              (w = st.makeVList(
                {
                  positionType: 'shift',
                  positionData: -c,
                  children: [{ type: 'elem', elem: l, marginRight: y }],
                },
                t
              ));
          }
          var A = Ot(s, 'right') || 'mord';
          return st.makeSpan([A], [s, st.makeSpan(['msupsub'], [w])], t);
        },
        mathmlBuilder: function (e, t) {
          var r = !1,
            n = void 0,
            a = ht(e.value.base, 'horizBrace');
          a &&
            !!e.value.sup === a.value.isOver &&
            ((r = !0), (n = a.value.isOver));
          var i = [jt(e.value.base, t)];
          e.value.sub && i.push(jt(e.value.sub, t)),
            e.value.sup && i.push(jt(e.value.sup, t));
          var o = void 0;
          if (r) o = n ? 'mover' : 'munder';
          else if (e.value.sub)
            if (e.value.sup) {
              var s = e.value.base;
              o =
                s && s.value.limits && t.style === I.DISPLAY
                  ? 'munderover'
                  : 'msubsup';
            } else {
              var l = e.value.base;
              o =
                l && l.value.limits && t.style === I.DISPLAY
                  ? 'munder'
                  : 'msub';
            }
          else {
            var u = e.value.base;
            o = u && u.value.limits && t.style === I.DISPLAY ? 'mover' : 'msup';
          }
          return new Pt.MathNode(o, i);
        },
      }),
        en('bin', function (e, t, r) {
          var n = Dt(t, r);
          'bold-italic' === n && e.setAttribute('mathvariant', n);
        }),
        en('rel'),
        en('open'),
        en('close'),
        en('inner'),
        en('punct', function (e) {
          return e.setAttribute('separator', 'true');
        });
      var tn = { mi: 'italic', mn: 'normal', mtext: 'normal' };
      wt({
        type: 'mathord',
        htmlBuilder: function (e, t) {
          return st.makeOrd(e, t, 'mathord');
        },
        mathmlBuilder: function (e, t) {
          var r = new Pt.MathNode('mi', [_t(e.value, e.mode, t)]),
            n = Dt(e, t) || 'italic';
          return n !== tn[r.type] && r.setAttribute('mathvariant', n), r;
        },
      }),
        wt({
          type: 'textord',
          htmlBuilder: function (e, t) {
            return st.makeOrd(e, t, 'textord');
          },
          mathmlBuilder: function (e, t) {
            var r = _t(e.value, e.mode, t),
              n = Dt(e, t) || 'normal',
              a = void 0;
            return (
              (a =
                'text' === e.mode
                  ? new Pt.MathNode('mtext', [r])
                  : /[0-9]/.test(e.value)
                  ? new Pt.MathNode('mn', [r])
                  : '\\prime' === e.value
                  ? new Pt.MathNode('mo', [r])
                  : new Pt.MathNode('mi', [r])),
              n !== tn[a.type] && a.setAttribute('mathvariant', n),
              a
            );
          },
        }),
        wt({
          type: 'spacing',
          htmlBuilder: function (e, t) {
            if (st.regularSpace.hasOwnProperty(e.value)) {
              var r = st.regularSpace[e.value].className || '';
              if ('text' === e.mode) {
                var n = st.makeOrd(e, t, 'textord');
                return n.classes.push(r), n;
              }
              return st.makeSpan(
                ['mspace', r],
                [st.mathsym(e.value, e.mode, t)],
                t
              );
            }
            if (st.cssSpace.hasOwnProperty(e.value))
              return st.makeSpan(['mspace', st.cssSpace[e.value]], [], t);
            throw new m('Unknown type of space "' + e.value + '"');
          },
          mathmlBuilder: function (e, t) {
            if (!st.regularSpace.hasOwnProperty(e.value)) {
              if (st.cssSpace.hasOwnProperty(e.value))
                return new Pt.MathNode('mspace');
              throw new m('Unknown type of space "' + e.value + '"');
            }
            return new Pt.MathNode('mtext', [new Pt.TextNode('\xa0')]);
          },
        }),
        wt({
          type: 'tag',
          mathmlBuilder: function (e, t) {
            var r = new Pt.MathNode('mtable', [
              new Pt.MathNode('mlabeledtr', [
                new Pt.MathNode('mtd', [Ft(e.value.tag, t)]),
                new Pt.MathNode('mtd', [Ft(e.value.body, t)]),
              ]),
            ]);
            return r.setAttribute('side', 'right'), r;
          },
        });
      var rn = {
          '\\text': void 0,
          '\\textrm': 'textrm',
          '\\textsf': 'textsf',
          '\\texttt': 'texttt',
          '\\textnormal': 'textrm',
        },
        nn = { '\\textbf': 'textbf' },
        an = { '\\textit': 'textit' },
        on = function (e, t) {
          var r = e.value.font;
          return r
            ? rn[r]
              ? t.withTextFontFamily(rn[r])
              : nn[r]
              ? t.withTextFontWeight(nn[r])
              : t.withTextFontShape(an[r])
            : t;
        };
      bt({
        type: 'text',
        names: [
          '\\text',
          '\\textrm',
          '\\textsf',
          '\\texttt',
          '\\textnormal',
          '\\textbf',
          '\\textit',
        ],
        props: {
          numArgs: 1,
          argTypes: ['text'],
          greediness: 2,
          allowedInText: !0,
          consumeMode: 'text',
        },
        handler: function (e, t) {
          var r = e.parser,
            n = e.funcName,
            a = t[0];
          return new lt('text', { type: 'text', body: kt(a), font: n }, r.mode);
        },
        htmlBuilder: function (e, t) {
          var r = on(e, t),
            n = Bt(e.value.body, r, !0);
          return st.tryCombineChars(n), st.makeSpan(['mord', 'text'], n, r);
        },
        mathmlBuilder: function (e, t) {
          var r = on(e, t);
          return Ft(e.value.body, r);
        },
      }),
        bt({
          type: 'underline',
          names: ['\\underline'],
          props: { numArgs: 1, allowedInText: !0 },
          handler: function (e, t) {
            var r = e.parser,
              n = t[0];
            return new lt('underline', { type: 'underline', body: n }, r.mode);
          },
          htmlBuilder: function (e, t) {
            var r = qt(e.value.body, t),
              n = st.makeLineSpan('underline-line', t),
              a = st.makeVList(
                {
                  positionType: 'top',
                  positionData: r.height,
                  children: [
                    { type: 'kern', size: n.height },
                    { type: 'elem', elem: n },
                    { type: 'kern', size: 3 * n.height },
                    { type: 'elem', elem: r },
                  ],
                },
                t
              );
            return st.makeSpan(['mord', 'underline'], [a], t);
          },
          mathmlBuilder: function (e, t) {
            var r = new Pt.MathNode('mo', [new Pt.TextNode('\u203e')]);
            r.setAttribute('stretchy', 'true');
            var n = new Pt.MathNode('munder', [jt(e.value.body, t), r]);
            return n.setAttribute('accentunder', 'true'), n;
          },
        }),
        bt({
          type: 'verb',
          names: ['\\verb'],
          props: { numArgs: 0, allowedInText: !0 },
          handler: function (e, t, r) {
            throw new m(
              '\\verb ended by end of line instead of matching delimiter'
            );
          },
          htmlBuilder: function (e, t) {
            for (
              var r = st.makeVerb(e, t),
                n = [],
                a = t.havingStyle(t.style.text()),
                i = 0;
              i < r.length;
              i++
            ) {
              var o = r[i];
              '~' === o && (o = '\\textasciitilde'),
                n.push(
                  st.makeSymbol(o, 'Typewriter-Regular', e.mode, a, [
                    'mord',
                    'texttt',
                  ])
                );
            }
            return (
              st.tryCombineChars(n),
              st.makeSpan(['mord', 'text'].concat(a.sizingClasses(t)), n, a)
            );
          },
          mathmlBuilder: function (e, t) {
            var r = new Pt.TextNode(st.makeVerb(e, t)),
              n = new Pt.MathNode('mtext', [r]);
            return n.setAttribute('mathvariant', 'monospace'), n;
          },
        });
      var sn = gt,
        ln = {};
      function un(e) {
        for (
          var t = e.type,
            r = e.names,
            n = e.props,
            a = e.handler,
            i = e.htmlBuilder,
            o = e.mathmlBuilder,
            s = {
              type: t,
              numArgs: n.numArgs || 0,
              greediness: 1,
              allowedInText: !1,
              numOptionalArgs: 0,
              handler: a,
            },
            l = 0;
          l < r.length;
          ++l
        )
          ln[r[l]] = s;
        i && (yt[t] = i), o && (xt[t] = o);
      }
      function hn(e) {
        var t = [];
        e.consumeSpaces();
        for (var r = e.nextToken.text; '\\hline' === r || '\\hdashline' === r; )
          e.consume(),
            t.push('\\hdashline' === r),
            e.consumeSpaces(),
            (r = e.nextToken.text);
        return t;
      }
      function cn(e, t, r) {
        if (
          (e.gullet.beginGroup(),
          e.gullet.macros.set('\\\\', '\\cr'),
          !t.arraystretch)
        ) {
          var n = e.gullet.expandMacroAsText('\\arraystretch');
          if (null == n) t.arraystretch = 1;
          else if (
            ((t.arraystretch = parseFloat(n)),
            !t.arraystretch || t.arraystretch < 0)
          )
            throw new m('Invalid \\arraystretch: ' + n);
        }
        var a = [],
          i = [a],
          o = [],
          s = [];
        for (s.push(hn(e)); ; ) {
          var l = e.parseExpression(!1, '\\cr');
          (l = new lt('ordgroup', l, e.mode)),
            r &&
              (l = new lt(
                'styling',
                { type: 'styling', style: r, value: [l] },
                e.mode
              )),
            a.push(l);
          var u = e.nextToken.text;
          if ('&' === u) e.consume();
          else {
            if ('\\end' === u) {
              1 === a.length && 0 === l.value.value[0].value.length && i.pop(),
                s.length < i.length + 1 && s.push([]);
              break;
            }
            if ('\\cr' !== u)
              throw new m('Expected & or \\\\ or \\cr or \\end', e.nextToken);
            var h = e.parseFunction();
            if (!h) throw new m('Failed to parse function after ' + u);
            o.push(ut(h, 'cr').value.size), s.push(hn(e)), (a = []), i.push(a);
          }
        }
        (t.body = i), (t.rowGaps = o), (t.hLinesBeforeRow = s);
        var c = t;
        return e.gullet.endGroup(), new lt('array', c, e.mode);
      }
      function mn(e) {
        return 'd' === e.substr(0, 1) ? 'display' : 'text';
      }
      var pn = function (e, t) {
          var r = void 0,
            n = void 0,
            a = e.value.body.length,
            i = e.value.hLinesBeforeRow,
            o = 0,
            s = new Array(a),
            l = [],
            u = 1 / t.fontMetrics().ptPerEm,
            h = 5 * u,
            c = 12 * u,
            p = 3 * u,
            d = e.value.arraystretch * c,
            f = 0.7 * d,
            v = 0.3 * d,
            g = 0;
          function y(e) {
            for (var t = 0; t < e.length; ++t)
              t > 0 && (g += 0.25), l.push({ pos: g, isDashed: e[t] });
          }
          for (y(i[0]), r = 0; r < e.value.body.length; ++r) {
            var x = e.value.body[r],
              b = f,
              w = v;
            o < x.length && (o = x.length);
            var S = new Array(x.length);
            for (n = 0; n < x.length; ++n) {
              var M = qt(x[n], t);
              w < M.depth && (w = M.depth),
                b < M.height && (b = M.height),
                (S[n] = M);
            }
            var z = e.value.rowGaps[r],
              T = 0;
            z &&
              (T = Xe(z.value.value, t)) > 0 &&
              (w < (T += v) && (w = T), (T = 0)),
              e.value.addJot && (w += p),
              (S.height = b),
              (S.depth = w),
              (g += b),
              (S.pos = g),
              (g += w + T),
              (s[r] = S),
              y(i[r + 1]);
          }
          var A = g / 2 + t.fontMetrics().axisHeight,
            B = e.value.cols || [],
            N = [],
            O = void 0,
            C = void 0;
          for (n = 0, C = 0; n < o || C < B.length; ++n, ++C) {
            for (var E = B[C] || {}, q = !0; 'separator' === E.type; ) {
              if (
                (q ||
                  (((O = st.makeSpan(['arraycolsep'], [])).style.width =
                    t.fontMetrics().doubleRuleSep + 'em'),
                  N.push(O)),
                '|' === E.separator)
              ) {
                var I = st.makeSpan(['vertical-separator'], [], t);
                (I.style.height = g + 'em'),
                  (I.style.verticalAlign = -(g - A) + 'em'),
                  N.push(I);
              } else {
                if (':' !== E.separator)
                  throw new m('Invalid separator type: ' + E.separator);
                var L = st.makeSpan(['vertical-separator', 'vs-dashed'], [], t);
                (L.style.height = g + 'em'),
                  (L.style.verticalAlign = -(g - A) + 'em'),
                  N.push(L);
              }
              (E = B[++C] || {}), (q = !1);
            }
            if (!(n >= o)) {
              var P = void 0;
              (n > 0 || e.value.hskipBeforeAndAfter) &&
                0 !== (P = k.deflt(E.pregap, h)) &&
                (((O = st.makeSpan(['arraycolsep'], [])).style.width =
                  P + 'em'),
                N.push(O));
              var _ = [];
              for (r = 0; r < a; ++r) {
                var R = s[r],
                  D = R[n];
                if (D) {
                  var H = R.pos - A;
                  (D.depth = R.depth),
                    (D.height = R.height),
                    _.push({ type: 'elem', elem: D, shift: H });
                }
              }
              (_ = st.makeVList(
                { positionType: 'individualShift', children: _ },
                t
              )),
                (_ = st.makeSpan(['col-align-' + (E.align || 'c')], [_])),
                N.push(_),
                (n < o - 1 || e.value.hskipBeforeAndAfter) &&
                  0 !== (P = k.deflt(E.postgap, h)) &&
                  (((O = st.makeSpan(['arraycolsep'], [])).style.width =
                    P + 'em'),
                  N.push(O));
            }
          }
          if (((s = st.makeSpan(['mtable'], N)), l.length > 0)) {
            for (
              var F = st.makeLineSpan('hline', t, 0.05),
                j = st.makeLineSpan('hdashline', t, 0.05),
                V = [{ type: 'elem', elem: s, shift: 0 }];
              l.length > 0;

            ) {
              var G = l.pop(),
                U = G.pos - A;
              G.isDashed
                ? V.push({ type: 'elem', elem: j, shift: U })
                : V.push({ type: 'elem', elem: F, shift: U });
            }
            s = st.makeVList(
              { positionType: 'individualShift', children: V },
              t
            );
          }
          return st.makeSpan(['mord'], [s], t);
        },
        dn = function (e, t) {
          return new Pt.MathNode(
            'mtable',
            e.value.body.map(function (e) {
              return new Pt.MathNode(
                'mtr',
                e.map(function (e) {
                  return new Pt.MathNode('mtd', [jt(e, t)]);
                })
              );
            })
          );
        },
        fn = function (e, t) {
          var r = [],
            n = { type: 'array', cols: r, addJot: !0 };
          n = cn(e.parser, n, 'display');
          var a = void 0,
            i = 0,
            o = new lt('ordgroup', [], e.mode),
            s = ht(t[0], 'ordgroup');
          if (s) {
            for (var l = '', u = 0; u < s.value.length; u++) {
              l += ut(s.value[u], 'textord').value;
            }
            (a = Number(l)), (i = 2 * a);
          }
          var h = !i;
          n.value.body.forEach(function (e) {
            for (var t = 1; t < e.length; t += 2) {
              ut(ut(e[t], 'styling').value.value[0], 'ordgroup').value.unshift(
                o
              );
            }
            if (h) i < e.length && (i = e.length);
            else {
              var r = e.length / 2;
              if (a < r)
                throw new m(
                  'Too many math in a row: expected ' + a + ', but got ' + r,
                  e[0]
                );
            }
          });
          for (var c = 0; c < i; ++c) {
            var p = 'r',
              d = 0;
            c % 2 == 1 ? (p = 'l') : c > 0 && h && (d = 1),
              (r[c] = { type: 'align', align: p, pregap: d, postgap: 0 });
          }
          return n;
        };
      un({
        type: 'array',
        names: ['array', 'darray'],
        props: { numArgs: 1 },
        handler: function (e, t) {
          var r = {
            type: 'array',
            cols: (ct(t[0]) ? [t[0]] : ut(t[0], 'ordgroup').value).map(
              function (e) {
                var t = (function (e) {
                  var t = ct(e);
                  if (!t)
                    throw new Error(
                      'Expected node of symbol group type, but got ' +
                        (e ? 'node of type ' + e.type : String(e))
                    );
                  return t;
                })(e).value;
                if (-1 !== 'lcr'.indexOf(t)) return { type: 'align', align: t };
                if ('|' === t) return { type: 'separator', separator: '|' };
                if (':' === t) return { type: 'separator', separator: ':' };
                throw new m('Unknown column alignment: ' + t, e);
              }
            ),
            hskipBeforeAndAfter: !0,
          };
          return (r = cn(e.parser, r, mn(e.envName)));
        },
        htmlBuilder: pn,
        mathmlBuilder: dn,
      }),
        un({
          type: 'array',
          names: [
            'matrix',
            'pmatrix',
            'bmatrix',
            'Bmatrix',
            'vmatrix',
            'Vmatrix',
          ],
          props: { numArgs: 0 },
          handler: function (e) {
            var t = {
                matrix: null,
                pmatrix: ['(', ')'],
                bmatrix: ['[', ']'],
                Bmatrix: ['\\{', '\\}'],
                vmatrix: ['|', '|'],
                Vmatrix: ['\\Vert', '\\Vert'],
              }[e.envName],
              r = { type: 'array', hskipBeforeAndAfter: !1 };
            return (
              (r = cn(e.parser, r, mn(e.envName))),
              t &&
                (r = new lt(
                  'leftright',
                  { type: 'leftright', body: [r], left: t[0], right: t[1] },
                  e.mode
                )),
              r
            );
          },
          htmlBuilder: pn,
          mathmlBuilder: dn,
        }),
        un({
          type: 'array',
          names: ['cases', 'dcases'],
          props: { numArgs: 0 },
          handler: function (e) {
            var t = {
              type: 'array',
              arraystretch: 1.2,
              cols: [
                { type: 'align', align: 'l', pregap: 0, postgap: 1 },
                { type: 'align', align: 'l', pregap: 0, postgap: 0 },
              ],
            };
            return (
              (t = cn(e.parser, t, mn(e.envName))),
              (t = new lt(
                'leftright',
                { type: 'leftright', body: [t], left: '\\{', right: '.' },
                e.mode
              ))
            );
          },
          htmlBuilder: pn,
          mathmlBuilder: dn,
        }),
        un({
          type: 'array',
          names: ['aligned'],
          props: { numArgs: 0 },
          handler: fn,
          htmlBuilder: pn,
          mathmlBuilder: dn,
        }),
        un({
          type: 'array',
          names: ['gathered'],
          props: { numArgs: 0 },
          handler: function (e) {
            var t = {
              type: 'array',
              cols: [{ type: 'align', align: 'c' }],
              addJot: !0,
            };
            return (t = cn(e.parser, t, 'display'));
          },
          htmlBuilder: pn,
          mathmlBuilder: dn,
        }),
        un({
          type: 'array',
          names: ['alignedat'],
          props: { numArgs: 1 },
          handler: fn,
          htmlBuilder: pn,
          mathmlBuilder: dn,
        }),
        bt({
          type: 'text',
          names: ['\\hline', '\\hdashline'],
          props: { numArgs: 0, allowedInText: !0, allowedInMath: !0 },
          handler: function (e, t) {
            throw new m(e.funcName + ' valid only within array environment');
          },
        });
      var vn = ln,
        gn = new RegExp('^(\\\\[a-zA-Z@]+)[ \r\n\t]*$'),
        yn = new RegExp('[\u0300-\u036f]+$'),
        xn =
          '([ \r\n\t]+)|(%[^\n]*[\n]|[!-\\[\\]-\u2027\u202a-\ud7ff\uf900-\uffff][\u0300-\u036f]*|[\ud800-\udbff][\udc00-\udfff][\u0300-\u036f]*|\\\\verb\\*([^]).*?\\3|\\\\verb([^*a-zA-Z]).*?\\4|\\\\[a-zA-Z@]+[ \r\n\t]*|\\\\[^\ud800-\udfff])',
        bn = (new RegExp('^\\\\[a-zA-Z@]+'), new RegExp('^%[^\n]*[\n]')),
        wn = (function () {
          function e(t) {
            a()(this, e),
              (this.input = t),
              (this.tokenRegex = new RegExp(xn, 'g'));
          }
          return (
            o()(e, [
              {
                key: 'lex',
                value: function () {
                  var e = this.input,
                    t = this.tokenRegex.lastIndex;
                  if (t === e.length) return new h('EOF', new u(this, t, t));
                  var r = this.tokenRegex.exec(e);
                  if (null === r || r.index !== t)
                    throw new m(
                      "Unexpected character: '" + e[t] + "'",
                      new h(e[t], new u(this, t, t + 1))
                    );
                  var n = r[2] || ' ',
                    a = n.match(gn);
                  return (
                    a && (n = a[1]),
                    bn.test(n)
                      ? this.lex()
                      : new h(n, new u(this, t, this.tokenRegex.lastIndex))
                  );
                },
              },
            ]),
            e
          );
        })(),
        kn = r(62),
        Sn = r.n(kn),
        Mn = (function () {
          function e() {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              r =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
            a()(this, e),
              (this.current = r),
              (this.builtins = t),
              (this.undefStack = []);
          }
          return (
            o()(e, [
              {
                key: 'beginGroup',
                value: function () {
                  this.undefStack.push({});
                },
              },
              {
                key: 'endGroup',
                value: function () {
                  if (0 === this.undefStack.length)
                    throw new m(
                      'Unbalanced namespace destruction: attempt to pop global namespace; please report this as a bug'
                    );
                  var e = this.undefStack.pop(),
                    t = !0,
                    r = !1,
                    n = void 0;
                  try {
                    for (
                      var a, i = P()(Sn()(e));
                      !(t = (a = i.next()).done);
                      t = !0
                    ) {
                      var o = a.value;
                      void 0 === e[o]
                        ? delete this.current[o]
                        : (this.current[o] = e[o]);
                    }
                  } catch (e) {
                    (r = !0), (n = e);
                  } finally {
                    try {
                      !t && i.return && i.return();
                    } finally {
                      if (r) throw n;
                    }
                  }
                },
              },
              {
                key: 'has',
                value: function (e) {
                  return (
                    this.current.hasOwnProperty(e) ||
                    this.builtins.hasOwnProperty(e)
                  );
                },
              },
              {
                key: 'get',
                value: function (e) {
                  return this.current.hasOwnProperty(e)
                    ? this.current[e]
                    : this.builtins[e];
                },
              },
              {
                key: 'set',
                value: function (e, t) {
                  if (
                    arguments.length > 2 &&
                    void 0 !== arguments[2] &&
                    arguments[2]
                  ) {
                    for (var r = 0; r < this.undefStack.length; r++)
                      delete this.undefStack[r][e];
                    this.undefStack.length > 0 &&
                      (this.undefStack[this.undefStack.length - 1][e] = t);
                  } else {
                    var n = this.undefStack[this.undefStack.length - 1];
                    n && !n.hasOwnProperty(e) && (n[e] = this.current[e]);
                  }
                  this.current[e] = t;
                },
              },
            ]),
            e
          );
        })(),
        zn = {},
        Tn = zn;
      function An(e, t) {
        zn[e] = t;
      }
      An('\\@firstoftwo', function (e) {
        return { tokens: e.consumeArgs(2)[0], numArgs: 0 };
      }),
        An('\\@secondoftwo', function (e) {
          return { tokens: e.consumeArgs(2)[1], numArgs: 0 };
        }),
        An('\\@ifnextchar', function (e) {
          var t = e.consumeArgs(3),
            r = e.future();
          return 1 === t[0].length && t[0][0].text === r.text
            ? { tokens: t[1], numArgs: 0 }
            : { tokens: t[2], numArgs: 0 };
        }),
        An('\\@ifstar', '\\@ifnextchar *{\\@firstoftwo{#1}}'),
        An('\\TextOrMath', function (e) {
          var t = e.consumeArgs(2);
          return 'text' === e.mode
            ? { tokens: t[0], numArgs: 0 }
            : { tokens: t[1], numArgs: 0 };
        });
      var Bn = function (e, t) {
        var r = e.consumeArgs(1)[0];
        if (1 !== r.length)
          throw new m("\\gdef's first argument must be a macro name");
        var n = r[0].text,
          a = 0;
        for (r = e.consumeArgs(1)[0]; 1 === r.length && '#' === r[0].text; ) {
          if (1 !== (r = e.consumeArgs(1)[0]).length)
            throw new m('Invalid argument number length "' + r.length + '"');
          if (!/^[1-9]$/.test(r[0].text))
            throw new m('Invalid argument number "' + r[0].text + '"');
          if ((a++, parseInt(r[0].text) !== a))
            throw new m('Argument number "' + r[0].text + '" out of order');
          r = e.consumeArgs(1)[0];
        }
        return e.macros.set(n, { tokens: r, numArgs: a }, t), '';
      };
      An('\\gdef', function (e) {
        return Bn(e, !0);
      }),
        An('\\def', function (e) {
          return Bn(e, !1);
        }),
        An('\\global', function (e) {
          var t = e.consumeArgs(1)[0];
          if (1 !== t.length) throw new m('Invalid command after \\global');
          var r = t[0].text;
          if ('\\def' === r) return Bn(e, !0);
          throw new m("Invalid command '" + r + "' after \\global");
        });
      var Nn = function (e, t, r) {
        var n = e.consumeArgs(1)[0];
        if (1 !== n.length)
          throw new m("\\newcommand's first argument must be a macro name");
        var a = n[0].text,
          i = e.isDefined(a);
        if (i && !t)
          throw new m(
            '\\newcommand{' +
              a +
              '} attempting to redefine ' +
              a +
              '; use \\renewcommand'
          );
        if (!i && !r)
          throw new m(
            '\\renewcommand{' +
              a +
              '} when command ' +
              a +
              ' does not yet exist; use \\newcommand'
          );
        var o = 0;
        if (1 === (n = e.consumeArgs(1)[0]).length && '[' === n[0].text) {
          for (
            var s = '', l = e.expandNextToken();
            ']' !== l.text && 'EOF' !== l.text;

          )
            (s += l.text), (l = e.expandNextToken());
          if (!s.match(/^\s*[0-9]+\s*$/))
            throw new m('Invalid number of arguments: ' + s);
          (o = parseInt(s)), (n = e.consumeArgs(1)[0]);
        }
        return e.macros.set(a, { tokens: n, numArgs: o }), '';
      };
      An('\\newcommand', function (e) {
        return Nn(e, !1, !0);
      }),
        An('\\renewcommand', function (e) {
          return Nn(e, !0, !1);
        }),
        An('\\providecommand', function (e) {
          return Nn(e, !0, !0);
        }),
        An('\\bgroup', '{'),
        An('\\egroup', '}'),
        An('\\begingroup', '{'),
        An('\\endgroup', '}'),
        An('\\lq', '`'),
        An('\\rq', "'"),
        An('\\aa', '\\r a'),
        An('\\AA', '\\r A'),
        An('\\textcopyright', '\\textcircled{c}'),
        An(
          '\\copyright',
          '\\TextOrMath{\\textcopyright}{\\text{\\textcopyright}}'
        ),
        An('\\textregistered', '\\textcircled{\\scriptsize R}'),
        An('\u2102', '\\mathbb{C}'),
        An('\u210d', '\\mathbb{H}'),
        An('\u2115', '\\mathbb{N}'),
        An('\u2119', '\\mathbb{P}'),
        An('\u211a', '\\mathbb{Q}'),
        An('\u211d', '\\mathbb{R}'),
        An('\u2124', '\\mathbb{Z}'),
        An('\u210e', '\\mathit{h}'),
        An('\u212c', '\\mathscr{B}'),
        An('\u2130', '\\mathscr{E}'),
        An('\u2131', '\\mathscr{F}'),
        An('\u210b', '\\mathscr{H}'),
        An('\u2110', '\\mathscr{I}'),
        An('\u2112', '\\mathscr{L}'),
        An('\u2133', '\\mathscr{M}'),
        An('\u211b', '\\mathscr{R}'),
        An('\u212d', '\\mathfrak{C}'),
        An('\u210c', '\\mathfrak{H}'),
        An('\u2128', '\\mathfrak{Z}'),
        An('\xb7', '\\cdotp'),
        An('\\llap', '\\mathllap{\\textrm{#1}}'),
        An('\\rlap', '\\mathrlap{\\textrm{#1}}'),
        An('\\clap', '\\mathclap{\\textrm{#1}}'),
        An('\\neq', '\u2260'),
        An('\\ne', '\\neq'),
        An('\\notin', '\\mathrel{{\\in}\\mathllap{/\\mskip1mu}}'),
        An('\u2209', '\\notin'),
        An(
          '\u2258',
          '\\mathrel{=\\kern{-1em}\\raisebox{0.4em}{$\\scriptsize\\frown$}}'
        ),
        An('\u2259', '\\stackrel{\\tiny\\wedge}{=}'),
        An('\u225a', '\\stackrel{\\tiny\\vee}{=}'),
        An('\u225b', '\\stackrel{\\scriptsize\\star}{=}'),
        An('\u225d', '\\stackrel{\\tiny\\mathrm{def}}{=}'),
        An('\u225e', '\\stackrel{\\tiny\\mathrm{m}}{=}'),
        An('\u225f', '\\stackrel{\\tiny?}{=}'),
        An('\u27c2', '\\perp'),
        An('\u203c', '\\mathclose{!\\mkern-0.8mu!}'),
        An('\u220c', '\\notni'),
        An('\u231c', '\\ulcorner'),
        An('\u231d', '\\urcorner'),
        An('\u231e', '\\llcorner'),
        An('\u231f', '\\lrcorner'),
        An('\\vdots', '\\mathord{\\varvdots\\rule{0pt}{15pt}}'),
        An('\u22ee', '\\vdots'),
        An('\\varGamma', '\\mathit{\\Gamma}'),
        An('\\varDelta', '\\mathit{\\Delta}'),
        An('\\varTheta', '\\mathit{\\Theta}'),
        An('\\varLambda', '\\mathit{\\Lambda}'),
        An('\\varXi', '\\mathit{\\Xi}'),
        An('\\varPi', '\\mathit{\\Pi}'),
        An('\\varSigma', '\\mathit{\\Sigma}'),
        An('\\varUpsilon', '\\mathit{\\Upsilon}'),
        An('\\varPhi', '\\mathit{\\Phi}'),
        An('\\varPsi', '\\mathit{\\Psi}'),
        An('\\varOmega', '\\mathit{\\Omega}'),
        An(
          '\\colon',
          '\\nobreak\\mskip2mu\\mathpunct{}\\mathchoice{\\mkern-3mu}{\\mkern-3mu}{}{}{:}\\mskip6mu'
        ),
        An('\\boxed', '\\fbox{\\displaystyle{#1}}'),
        An('\\iff', '\\DOTSB\\;\\Longleftrightarrow\\;'),
        An('\\implies', '\\DOTSB\\;\\Longrightarrow\\;'),
        An('\\impliedby', '\\DOTSB\\;\\Longleftarrow\\;');
      var On = {
        ',': '\\dotsc',
        '\\not': '\\dotsb',
        '+': '\\dotsb',
        '=': '\\dotsb',
        '<': '\\dotsb',
        '>': '\\dotsb',
        '-': '\\dotsb',
        '*': '\\dotsb',
        ':': '\\dotsb',
        '\\DOTSB': '\\dotsb',
        '\\coprod': '\\dotsb',
        '\\bigvee': '\\dotsb',
        '\\bigwedge': '\\dotsb',
        '\\biguplus': '\\dotsb',
        '\\bigcap': '\\dotsb',
        '\\bigcup': '\\dotsb',
        '\\prod': '\\dotsb',
        '\\sum': '\\dotsb',
        '\\bigotimes': '\\dotsb',
        '\\bigoplus': '\\dotsb',
        '\\bigodot': '\\dotsb',
        '\\bigsqcup': '\\dotsb',
        '\\And': '\\dotsb',
        '\\longrightarrow': '\\dotsb',
        '\\Longrightarrow': '\\dotsb',
        '\\longleftarrow': '\\dotsb',
        '\\Longleftarrow': '\\dotsb',
        '\\longleftrightarrow': '\\dotsb',
        '\\Longleftrightarrow': '\\dotsb',
        '\\mapsto': '\\dotsb',
        '\\longmapsto': '\\dotsb',
        '\\hookrightarrow': '\\dotsb',
        '\\doteq': '\\dotsb',
        '\\mathbin': '\\dotsb',
        '\\mathrel': '\\dotsb',
        '\\relbar': '\\dotsb',
        '\\Relbar': '\\dotsb',
        '\\xrightarrow': '\\dotsb',
        '\\xleftarrow': '\\dotsb',
        '\\DOTSI': '\\dotsi',
        '\\int': '\\dotsi',
        '\\oint': '\\dotsi',
        '\\iint': '\\dotsi',
        '\\iiint': '\\dotsi',
        '\\iiiint': '\\dotsi',
        '\\idotsint': '\\dotsi',
        '\\DOTSX': '\\dotsx',
      };
      An('\\dots', function (e) {
        var t = '\\dotso',
          r = e.expandAfterFuture().text;
        return (
          r in On
            ? (t = On[r])
            : '\\not' === r.substr(0, 4)
            ? (t = '\\dotsb')
            : r in fe.math &&
              k.contains(['bin', 'rel'], fe.math[r].group) &&
              (t = '\\dotsb'),
          t
        );
      });
      var Cn = {
        ')': !0,
        ']': !0,
        '\\rbrack': !0,
        '\\}': !0,
        '\\rbrace': !0,
        '\\rangle': !0,
        '\\rceil': !0,
        '\\rfloor': !0,
        '\\rgroup': !0,
        '\\rmoustache': !0,
        '\\right': !0,
        '\\bigr': !0,
        '\\biggr': !0,
        '\\Bigr': !0,
        '\\Biggr': !0,
        $: !0,
        ';': !0,
        '.': !0,
        ',': !0,
      };
      An('\\dotso', function (e) {
        return e.future().text in Cn ? '\\ldots\\,' : '\\ldots';
      }),
        An('\\dotsc', function (e) {
          var t = e.future().text;
          return t in Cn && ',' !== t ? '\\ldots\\,' : '\\ldots';
        }),
        An('\\cdots', function (e) {
          return e.future().text in Cn ? '\\@cdots\\,' : '\\@cdots';
        }),
        An('\\dotsb', '\\cdots'),
        An('\\dotsm', '\\cdots'),
        An('\\dotsi', '\\!\\cdots'),
        An('\\dotsx', '\\ldots\\,'),
        An('\\DOTSI', '\\relax'),
        An('\\DOTSB', '\\relax'),
        An('\\DOTSX', '\\relax'),
        An('\\tmspace', '\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax'),
        An('\\,', '\\tmspace+{3mu}{.1667em}'),
        An('\\thinspace', '\\,'),
        An('\\:', '\\tmspace+{4mu}{.2222em}'),
        An('\\medspace', '\\:'),
        An('\\;', '\\tmspace+{5mu}{.2777em}'),
        An('\\thickspace', '\\;'),
        An('\\!', '\\tmspace-{3mu}{.1667em}'),
        An('\\negthinspace', '\\!'),
        An('\\negmedspace', '\\tmspace-{4mu}{.2222em}'),
        An('\\negthickspace', '\\tmspace-{5mu}{.277em}'),
        An('\\enspace', '\\kern.5em '),
        An('\\enskip', '\\hskip.5em\\relax'),
        An('\\quad', '\\hskip1em\\relax'),
        An('\\qquad', '\\hskip2em\\relax'),
        An('\\tag', '\\@ifstar\\tag@literal\\tag@paren'),
        An('\\tag@paren', '\\tag@literal{({#1})}'),
        An('\\tag@literal', function (e) {
          if (e.macros.get('\\df@tag')) throw new m('Multiple \\tag');
          return '\\gdef\\df@tag{\\text{#1}}';
        }),
        An(
          '\\bmod',
          '\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}\\mathbin{\\rm mod}\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}'
        ),
        An(
          '\\pod',
          '\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern8mu}{\\mkern8mu}{\\mkern8mu}(#1)'
        ),
        An('\\pmod', '\\pod{{\\rm mod}\\mkern6mu#1}'),
        An(
          '\\mod',
          '\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern12mu}{\\mkern12mu}{\\mkern12mu}{\\rm mod}\\,\\,#1'
        ),
        An('\\\\', '\\newline'),
        An(
          '\\TeX',
          '\\textrm{T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX}'
        );
      var En =
        le['Main-Regular']['T'.charCodeAt(0)][1] -
        0.7 * le['Main-Regular']['A'.charCodeAt(0)][1] +
        'em';
      An(
        '\\LaTeX',
        '\\textrm{L\\kern-.36em\\raisebox{' +
          En +
          '}{\\scriptsize A}\\kern-.15em\\TeX}'
      ),
        An(
          '\\KaTeX',
          '\\textrm{K\\kern-.17em\\raisebox{' +
            En +
            '}{\\scriptsize A}\\kern-.15em\\TeX}'
        ),
        An('\\hspace', '\\@ifstar\\@hspacer\\@hspace'),
        An('\\@hspace', '\\hskip #1\\relax'),
        An('\\@hspacer', '\\rule{0pt}{0pt}\\hskip #1\\relax'),
        An('\\ordinarycolon', ':'),
        An('\\vcentcolon', '\\mathrel{\\mathop\\ordinarycolon}'),
        An(
          '\\dblcolon',
          '\\mathrel{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}'
        ),
        An('\\coloneqq', '\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}'),
        An('\\Coloneqq', '\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}=}'),
        An(
          '\\coloneq',
          '\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}'
        ),
        An(
          '\\Coloneq',
          '\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}'
        ),
        An('\\eqqcolon', '\\mathrel{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}'),
        An('\\Eqqcolon', '\\mathrel{=\\mathrel{\\mkern-1.2mu}\\dblcolon}'),
        An(
          '\\eqcolon',
          '\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}'
        ),
        An(
          '\\Eqcolon',
          '\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}'
        ),
        An(
          '\\colonapprox',
          '\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}'
        ),
        An(
          '\\Colonapprox',
          '\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}'
        ),
        An(
          '\\colonsim',
          '\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}'
        ),
        An('\\Colonsim', '\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}'),
        An('\u2254', '\\coloneqq'),
        An('\u2255', '\\eqqcolon'),
        An('\u2a74', '\\Coloneqq'),
        An('\\ratio', '\\vcentcolon'),
        An('\\coloncolon', '\\dblcolon'),
        An('\\colonequals', '\\coloneqq'),
        An('\\coloncolonequals', '\\Coloneqq'),
        An('\\equalscolon', '\\eqqcolon'),
        An('\\equalscoloncolon', '\\Eqqcolon'),
        An('\\colonminus', '\\coloneq'),
        An('\\coloncolonminus', '\\Coloneq'),
        An('\\minuscolon', '\\eqcolon'),
        An('\\minuscoloncolon', '\\Eqcolon'),
        An('\\coloncolonapprox', '\\Colonapprox'),
        An('\\coloncolonsim', '\\Colonsim'),
        An(
          '\\simcolon',
          '\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon}'
        ),
        An(
          '\\simcoloncolon',
          '\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon}'
        ),
        An(
          '\\approxcolon',
          '\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon}'
        ),
        An(
          '\\approxcoloncolon',
          '\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon}'
        ),
        An('\\notni', '\\not\\ni'),
        An('\\limsup', '\\DOTSB\\mathop{\\operatorname{lim\\,sup}}\\limits'),
        An('\\liminf', '\\DOTSB\\mathop{\\operatorname{lim\\,inf}}\\limits');
      var qn = {
          '\\relax': !0,
          '^': !0,
          _: !0,
          '\\limits': !0,
          '\\nolimits': !0,
        },
        In = (function () {
          function e(t, r, n) {
            a()(this, e),
              this.feed(t),
              (this.macros = new Mn(Tn, r.macros)),
              (this.maxExpand = r.maxExpand),
              (this.mode = n),
              (this.stack = []);
          }
          return (
            o()(e, [
              {
                key: 'feed',
                value: function (e) {
                  this.lexer = new wn(e);
                },
              },
              {
                key: 'switchMode',
                value: function (e) {
                  this.mode = e;
                },
              },
              {
                key: 'beginGroup',
                value: function () {
                  this.macros.beginGroup();
                },
              },
              {
                key: 'endGroup',
                value: function () {
                  this.macros.endGroup();
                },
              },
              {
                key: 'future',
                value: function () {
                  return (
                    0 === this.stack.length && this.pushToken(this.lexer.lex()),
                    this.stack[this.stack.length - 1]
                  );
                },
              },
              {
                key: 'popToken',
                value: function () {
                  return this.future(), this.stack.pop();
                },
              },
              {
                key: 'pushToken',
                value: function (e) {
                  this.stack.push(e);
                },
              },
              {
                key: 'pushTokens',
                value: function (e) {
                  var t;
                  (t = this.stack).push.apply(t, z()(e));
                },
              },
              {
                key: 'consumeSpaces',
                value: function () {
                  for (;;) {
                    if (' ' !== this.future().text) break;
                    this.stack.pop();
                  }
                },
              },
              {
                key: 'consumeArgs',
                value: function (e) {
                  for (var t = [], r = 0; r < e; ++r) {
                    this.consumeSpaces();
                    var n = this.popToken();
                    if ('{' === n.text) {
                      for (var a = [], i = 1; 0 !== i; ) {
                        var o = this.popToken();
                        if ((a.push(o), '{' === o.text)) ++i;
                        else if ('}' === o.text) --i;
                        else if ('EOF' === o.text)
                          throw new m('End of input in macro argument', n);
                      }
                      a.pop(), a.reverse(), (t[r] = a);
                    } else {
                      if ('EOF' === n.text)
                        throw new m('End of input expecting macro argument');
                      t[r] = [n];
                    }
                  }
                  return t;
                },
              },
              {
                key: 'expandOnce',
                value: function () {
                  var e = this.popToken(),
                    t = e.text,
                    r = this._getExpansion(t);
                  if (null == r) return this.pushToken(e), e;
                  if (
                    this.maxExpand !== 1 / 0 &&
                    (this.maxExpand--, this.maxExpand < 0)
                  )
                    throw new m(
                      'Too many expansions: infinite loop or need to increase maxExpand setting'
                    );
                  var n = r.tokens;
                  if (r.numArgs)
                    for (
                      var a = this.consumeArgs(r.numArgs),
                        i = (n = n.slice()).length - 1;
                      i >= 0;
                      --i
                    ) {
                      var o = n[i];
                      if ('#' === o.text) {
                        if (0 === i)
                          throw new m(
                            'Incomplete placeholder at end of macro body',
                            o
                          );
                        if ('#' === (o = n[--i]).text) n.splice(i + 1, 1);
                        else {
                          if (!/^[1-9]$/.test(o.text))
                            throw new m('Not a valid argument number', o);
                          var s;
                          (s = n).splice.apply(
                            s,
                            [i, 2].concat(z()(a[+o.text - 1]))
                          );
                        }
                      }
                    }
                  return this.pushTokens(n), n;
                },
              },
              {
                key: 'expandAfterFuture',
                value: function () {
                  return this.expandOnce(), this.future();
                },
              },
              {
                key: 'expandNextToken',
                value: function () {
                  for (;;) {
                    var e = this.expandOnce();
                    if (e instanceof h) {
                      if ('\\relax' !== e.text) return this.stack.pop();
                      this.stack.pop();
                    }
                  }
                  throw new Error();
                },
              },
              {
                key: 'expandMacro',
                value: function (e) {
                  if (this.macros.get(e)) {
                    var t = [],
                      r = this.stack.length;
                    for (this.pushToken(new h(e)); this.stack.length > r; ) {
                      this.expandOnce() instanceof h &&
                        t.push(this.stack.pop());
                    }
                    return t;
                  }
                },
              },
              {
                key: 'expandMacroAsText',
                value: function (e) {
                  var t = this.expandMacro(e);
                  return t
                    ? t
                        .map(function (e) {
                          return e.text;
                        })
                        .join('')
                    : t;
                },
              },
              {
                key: '_getExpansion',
                value: function (e) {
                  var t = this.macros.get(e);
                  if (null == t) return t;
                  var r = 'function' == typeof t ? t(this) : t;
                  if ('string' == typeof r) {
                    var n = 0;
                    if (-1 !== r.indexOf('#'))
                      for (
                        var a = r.replace(/##/g, '');
                        -1 !== a.indexOf('#' + (n + 1));

                      )
                        ++n;
                    for (
                      var i = new wn(r), o = [], s = i.lex();
                      'EOF' !== s.text;

                    )
                      o.push(s), (s = i.lex());
                    return o.reverse(), { tokens: o, numArgs: n };
                  }
                  return r;
                },
              },
              {
                key: 'isDefined',
                value: function (e) {
                  return (
                    this.macros.has(e) ||
                    sn.hasOwnProperty(e) ||
                    fe.math.hasOwnProperty(e) ||
                    fe.text.hasOwnProperty(e) ||
                    qn.hasOwnProperty(e)
                  );
                },
              },
            ]),
            e
          );
        })(),
        Ln = r(40),
        Pn = r.n(Ln),
        _n = {
          á: 'a\u0301',
          à: 'a\u0300',
          ä: 'a\u0308',
          ǟ: 'a\u0308\u0304',
          ã: 'a\u0303',
          ā: 'a\u0304',
          ă: 'a\u0306',
          ắ: 'a\u0306\u0301',
          ằ: 'a\u0306\u0300',
          ẵ: 'a\u0306\u0303',
          ǎ: 'a\u030c',
          â: 'a\u0302',
          ấ: 'a\u0302\u0301',
          ầ: 'a\u0302\u0300',
          ẫ: 'a\u0302\u0303',
          ȧ: 'a\u0307',
          ǡ: 'a\u0307\u0304',
          å: 'a\u030a',
          ǻ: 'a\u030a\u0301',
          ḃ: 'b\u0307',
          ć: 'c\u0301',
          č: 'c\u030c',
          ĉ: 'c\u0302',
          ċ: 'c\u0307',
          ď: 'd\u030c',
          ḋ: 'd\u0307',
          é: 'e\u0301',
          è: 'e\u0300',
          ë: 'e\u0308',
          ẽ: 'e\u0303',
          ē: 'e\u0304',
          ḗ: 'e\u0304\u0301',
          ḕ: 'e\u0304\u0300',
          ĕ: 'e\u0306',
          ě: 'e\u030c',
          ê: 'e\u0302',
          ế: 'e\u0302\u0301',
          ề: 'e\u0302\u0300',
          ễ: 'e\u0302\u0303',
          ė: 'e\u0307',
          ḟ: 'f\u0307',
          ǵ: 'g\u0301',
          ḡ: 'g\u0304',
          ğ: 'g\u0306',
          ǧ: 'g\u030c',
          ĝ: 'g\u0302',
          ġ: 'g\u0307',
          ḧ: 'h\u0308',
          ȟ: 'h\u030c',
          ĥ: 'h\u0302',
          ḣ: 'h\u0307',
          í: 'i\u0301',
          ì: 'i\u0300',
          ï: 'i\u0308',
          ḯ: 'i\u0308\u0301',
          ĩ: 'i\u0303',
          ī: 'i\u0304',
          ĭ: 'i\u0306',
          ǐ: 'i\u030c',
          î: 'i\u0302',
          ǰ: 'j\u030c',
          ĵ: 'j\u0302',
          ḱ: 'k\u0301',
          ǩ: 'k\u030c',
          ĺ: 'l\u0301',
          ľ: 'l\u030c',
          ḿ: 'm\u0301',
          ṁ: 'm\u0307',
          ń: 'n\u0301',
          ǹ: 'n\u0300',
          ñ: 'n\u0303',
          ň: 'n\u030c',
          ṅ: 'n\u0307',
          ó: 'o\u0301',
          ò: 'o\u0300',
          ö: 'o\u0308',
          ȫ: 'o\u0308\u0304',
          õ: 'o\u0303',
          ṍ: 'o\u0303\u0301',
          ṏ: 'o\u0303\u0308',
          ȭ: 'o\u0303\u0304',
          ō: 'o\u0304',
          ṓ: 'o\u0304\u0301',
          ṑ: 'o\u0304\u0300',
          ŏ: 'o\u0306',
          ǒ: 'o\u030c',
          ô: 'o\u0302',
          ố: 'o\u0302\u0301',
          ồ: 'o\u0302\u0300',
          ỗ: 'o\u0302\u0303',
          ȯ: 'o\u0307',
          ȱ: 'o\u0307\u0304',
          ő: 'o\u030b',
          ṕ: 'p\u0301',
          ṗ: 'p\u0307',
          ŕ: 'r\u0301',
          ř: 'r\u030c',
          ṙ: 'r\u0307',
          ś: 's\u0301',
          ṥ: 's\u0301\u0307',
          š: 's\u030c',
          ṧ: 's\u030c\u0307',
          ŝ: 's\u0302',
          ṡ: 's\u0307',
          ẗ: 't\u0308',
          ť: 't\u030c',
          ṫ: 't\u0307',
          ú: 'u\u0301',
          ù: 'u\u0300',
          ü: 'u\u0308',
          ǘ: 'u\u0308\u0301',
          ǜ: 'u\u0308\u0300',
          ǖ: 'u\u0308\u0304',
          ǚ: 'u\u0308\u030c',
          ũ: 'u\u0303',
          ṹ: 'u\u0303\u0301',
          ū: 'u\u0304',
          ṻ: 'u\u0304\u0308',
          ŭ: 'u\u0306',
          ǔ: 'u\u030c',
          û: 'u\u0302',
          ů: 'u\u030a',
          ű: 'u\u030b',
          ṽ: 'v\u0303',
          ẃ: 'w\u0301',
          ẁ: 'w\u0300',
          ẅ: 'w\u0308',
          ŵ: 'w\u0302',
          ẇ: 'w\u0307',
          ẘ: 'w\u030a',
          ẍ: 'x\u0308',
          ẋ: 'x\u0307',
          ý: 'y\u0301',
          ỳ: 'y\u0300',
          ÿ: 'y\u0308',
          ỹ: 'y\u0303',
          ȳ: 'y\u0304',
          ŷ: 'y\u0302',
          ẏ: 'y\u0307',
          ẙ: 'y\u030a',
          ź: 'z\u0301',
          ž: 'z\u030c',
          ẑ: 'z\u0302',
          ż: 'z\u0307',
          Á: 'A\u0301',
          À: 'A\u0300',
          Ä: 'A\u0308',
          Ǟ: 'A\u0308\u0304',
          Ã: 'A\u0303',
          Ā: 'A\u0304',
          Ă: 'A\u0306',
          Ắ: 'A\u0306\u0301',
          Ằ: 'A\u0306\u0300',
          Ẵ: 'A\u0306\u0303',
          Ǎ: 'A\u030c',
          Â: 'A\u0302',
          Ấ: 'A\u0302\u0301',
          Ầ: 'A\u0302\u0300',
          Ẫ: 'A\u0302\u0303',
          Ȧ: 'A\u0307',
          Ǡ: 'A\u0307\u0304',
          Å: 'A\u030a',
          Ǻ: 'A\u030a\u0301',
          Ḃ: 'B\u0307',
          Ć: 'C\u0301',
          Č: 'C\u030c',
          Ĉ: 'C\u0302',
          Ċ: 'C\u0307',
          Ď: 'D\u030c',
          Ḋ: 'D\u0307',
          É: 'E\u0301',
          È: 'E\u0300',
          Ë: 'E\u0308',
          Ẽ: 'E\u0303',
          Ē: 'E\u0304',
          Ḗ: 'E\u0304\u0301',
          Ḕ: 'E\u0304\u0300',
          Ĕ: 'E\u0306',
          Ě: 'E\u030c',
          Ê: 'E\u0302',
          Ế: 'E\u0302\u0301',
          Ề: 'E\u0302\u0300',
          Ễ: 'E\u0302\u0303',
          Ė: 'E\u0307',
          Ḟ: 'F\u0307',
          Ǵ: 'G\u0301',
          Ḡ: 'G\u0304',
          Ğ: 'G\u0306',
          Ǧ: 'G\u030c',
          Ĝ: 'G\u0302',
          Ġ: 'G\u0307',
          Ḧ: 'H\u0308',
          Ȟ: 'H\u030c',
          Ĥ: 'H\u0302',
          Ḣ: 'H\u0307',
          Í: 'I\u0301',
          Ì: 'I\u0300',
          Ï: 'I\u0308',
          Ḯ: 'I\u0308\u0301',
          Ĩ: 'I\u0303',
          Ī: 'I\u0304',
          Ĭ: 'I\u0306',
          Ǐ: 'I\u030c',
          Î: 'I\u0302',
          İ: 'I\u0307',
          Ĵ: 'J\u0302',
          Ḱ: 'K\u0301',
          Ǩ: 'K\u030c',
          Ĺ: 'L\u0301',
          Ľ: 'L\u030c',
          Ḿ: 'M\u0301',
          Ṁ: 'M\u0307',
          Ń: 'N\u0301',
          Ǹ: 'N\u0300',
          Ñ: 'N\u0303',
          Ň: 'N\u030c',
          Ṅ: 'N\u0307',
          Ó: 'O\u0301',
          Ò: 'O\u0300',
          Ö: 'O\u0308',
          Ȫ: 'O\u0308\u0304',
          Õ: 'O\u0303',
          Ṍ: 'O\u0303\u0301',
          Ṏ: 'O\u0303\u0308',
          Ȭ: 'O\u0303\u0304',
          Ō: 'O\u0304',
          Ṓ: 'O\u0304\u0301',
          Ṑ: 'O\u0304\u0300',
          Ŏ: 'O\u0306',
          Ǒ: 'O\u030c',
          Ô: 'O\u0302',
          Ố: 'O\u0302\u0301',
          Ồ: 'O\u0302\u0300',
          Ỗ: 'O\u0302\u0303',
          Ȯ: 'O\u0307',
          Ȱ: 'O\u0307\u0304',
          Ő: 'O\u030b',
          Ṕ: 'P\u0301',
          Ṗ: 'P\u0307',
          Ŕ: 'R\u0301',
          Ř: 'R\u030c',
          Ṙ: 'R\u0307',
          Ś: 'S\u0301',
          Ṥ: 'S\u0301\u0307',
          Š: 'S\u030c',
          Ṧ: 'S\u030c\u0307',
          Ŝ: 'S\u0302',
          Ṡ: 'S\u0307',
          Ť: 'T\u030c',
          Ṫ: 'T\u0307',
          Ú: 'U\u0301',
          Ù: 'U\u0300',
          Ü: 'U\u0308',
          Ǘ: 'U\u0308\u0301',
          Ǜ: 'U\u0308\u0300',
          Ǖ: 'U\u0308\u0304',
          Ǚ: 'U\u0308\u030c',
          Ũ: 'U\u0303',
          Ṹ: 'U\u0303\u0301',
          Ū: 'U\u0304',
          Ṻ: 'U\u0304\u0308',
          Ŭ: 'U\u0306',
          Ǔ: 'U\u030c',
          Û: 'U\u0302',
          Ů: 'U\u030a',
          Ű: 'U\u030b',
          Ṽ: 'V\u0303',
          Ẃ: 'W\u0301',
          Ẁ: 'W\u0300',
          Ẅ: 'W\u0308',
          Ŵ: 'W\u0302',
          Ẇ: 'W\u0307',
          Ẍ: 'X\u0308',
          Ẋ: 'X\u0307',
          Ý: 'Y\u0301',
          Ỳ: 'Y\u0300',
          Ÿ: 'Y\u0308',
          Ỹ: 'Y\u0303',
          Ȳ: 'Y\u0304',
          Ŷ: 'Y\u0302',
          Ẏ: 'Y\u0307',
          Ź: 'Z\u0301',
          Ž: 'Z\u030c',
          Ẑ: 'Z\u0302',
          Ż: 'Z\u0307',
          ά: '\u03b1\u0301',
          ὰ: '\u03b1\u0300',
          ᾱ: '\u03b1\u0304',
          ᾰ: '\u03b1\u0306',
          έ: '\u03b5\u0301',
          ὲ: '\u03b5\u0300',
          ή: '\u03b7\u0301',
          ὴ: '\u03b7\u0300',
          ί: '\u03b9\u0301',
          ὶ: '\u03b9\u0300',
          ϊ: '\u03b9\u0308',
          ΐ: '\u03b9\u0308\u0301',
          ῒ: '\u03b9\u0308\u0300',
          ῑ: '\u03b9\u0304',
          ῐ: '\u03b9\u0306',
          ό: '\u03bf\u0301',
          ὸ: '\u03bf\u0300',
          ύ: '\u03c5\u0301',
          ὺ: '\u03c5\u0300',
          ϋ: '\u03c5\u0308',
          ΰ: '\u03c5\u0308\u0301',
          ῢ: '\u03c5\u0308\u0300',
          ῡ: '\u03c5\u0304',
          ῠ: '\u03c5\u0306',
          ώ: '\u03c9\u0301',
          ὼ: '\u03c9\u0300',
          Ύ: '\u03a5\u0301',
          Ὺ: '\u03a5\u0300',
          Ϋ: '\u03a5\u0308',
          Ῡ: '\u03a5\u0304',
          Ῠ: '\u03a5\u0306',
          Ώ: '\u03a9\u0301',
          Ὼ: '\u03a9\u0300',
        };
      function Rn(e, t) {
        return { type: 'arg', result: e, token: t };
      }
      var Dn = (function () {
        function e(t, r) {
          a()(this, e),
            (this.mode = 'math'),
            (this.gullet = new In(t, r, this.mode)),
            (this.settings = r),
            (this.leftrightDepth = 0);
        }
        return (
          o()(e, [
            {
              key: 'expect',
              value: function (e) {
                var t =
                  !(arguments.length > 1 && void 0 !== arguments[1]) ||
                  arguments[1];
                if (this.nextToken.text !== e)
                  throw new m(
                    "Expected '" + e + "', got '" + this.nextToken.text + "'",
                    this.nextToken
                  );
                t && this.consume();
              },
            },
            {
              key: 'consume',
              value: function () {
                this.nextToken = this.gullet.expandNextToken();
              },
            },
            {
              key: 'switchMode',
              value: function (e) {
                (this.mode = e), this.gullet.switchMode(e);
              },
            },
            {
              key: 'parse',
              value: function () {
                this.gullet.beginGroup(),
                  this.settings.colorIsTextColor &&
                    this.gullet.macros.set('\\color', '\\textcolor'),
                  this.consume();
                var e = this.parseExpression(!1);
                return this.expect('EOF', !1), this.gullet.endGroup(), e;
              },
            },
            {
              key: 'parseExpression',
              value: function (t, r) {
                for (var n = []; ; ) {
                  'math' === this.mode && this.consumeSpaces();
                  var a = this.nextToken;
                  if (-1 !== e.endOfExpression.indexOf(a.text)) break;
                  if (r && a.text === r) break;
                  if (t && sn[a.text] && sn[a.text].infix) break;
                  var i = this.parseAtom(r);
                  if (!i) {
                    if (!this.settings.throwOnError && '\\' === a.text[0]) {
                      var o = this.handleUnsupportedCmd();
                      n.push(o);
                      continue;
                    }
                    break;
                  }
                  n.push(i);
                }
                return (
                  'text' === this.mode && this.formLigatures(n),
                  this.handleInfixNodes(n)
                );
              },
            },
            {
              key: 'handleInfixNodes',
              value: function (e) {
                for (var t = -1, r = void 0, n = 0; n < e.length; n++) {
                  var a = ht(e[n], 'infix');
                  if (a) {
                    if (-1 !== t)
                      throw new m(
                        'only one infix operator per group',
                        a.value.token
                      );
                    (t = n), (r = a.value.replaceWith);
                  }
                }
                if (-1 !== t && r) {
                  var i = void 0,
                    o = void 0,
                    s = e.slice(0, t),
                    l = e.slice(t + 1);
                  (i =
                    1 === s.length && 'ordgroup' === s[0].type
                      ? s[0]
                      : new lt('ordgroup', s, this.mode)),
                    (o =
                      1 === l.length && 'ordgroup' === l[0].type
                        ? l[0]
                        : new lt('ordgroup', l, this.mode));
                  return [
                    '\\\\abovefrac' === r
                      ? this.callFunction(r, [i, e[t], o], [])
                      : this.callFunction(r, [i, o], []),
                  ];
                }
                return e;
              },
            },
            {
              key: 'handleSupSubscript',
              value: function (t) {
                var r = this.nextToken,
                  n = r.text;
                this.consume(), this.consumeSpaces();
                var a = this.parseGroup();
                if (!a) {
                  if (
                    this.settings.throwOnError ||
                    '\\' !== this.nextToken.text[0]
                  )
                    throw new m("Expected group after '" + n + "'", r);
                  return this.handleUnsupportedCmd();
                }
                if ('fn' === a.type) {
                  if (sn[a.result].greediness > e.SUPSUB_GREEDINESS)
                    return this.parseGivenFunction(a);
                  throw new m(
                    "Got function '" + a.result + "' with no arguments as " + t,
                    r
                  );
                }
                return a.result;
              },
            },
            {
              key: 'handleUnsupportedCmd',
              value: function () {
                for (
                  var e = this.nextToken.text, t = [], r = 0;
                  r < e.length;
                  r++
                )
                  t.push(new lt('textord', e[r], 'text'));
                var n = new lt('text', { body: t, type: 'text' }, this.mode),
                  a = new lt(
                    'color',
                    {
                      color: this.settings.errorColor,
                      value: [n],
                      type: 'color',
                    },
                    this.mode
                  );
                return this.consume(), a;
              },
            },
            {
              key: 'parseAtom',
              value: function (e) {
                var t = this.parseImplicitGroup(e);
                if ('text' === this.mode) return t;
                for (var r = void 0, n = void 0; ; ) {
                  this.consumeSpaces();
                  var a = this.nextToken;
                  if ('\\limits' === a.text || '\\nolimits' === a.text) {
                    var i = ht(t, 'op');
                    if (!i)
                      throw new m(
                        'Limit controls must follow a math operator',
                        a
                      );
                    var o = '\\limits' === a.text;
                    (i.value.limits = o),
                      (i.value.alwaysHandleSupSub = !0),
                      this.consume();
                  } else if ('^' === a.text) {
                    if (r) throw new m('Double superscript', a);
                    r = this.handleSupSubscript('superscript');
                  } else if ('_' === a.text) {
                    if (n) throw new m('Double subscript', a);
                    n = this.handleSupSubscript('subscript');
                  } else {
                    if ("'" !== a.text) break;
                    if (r) throw new m('Double superscript', a);
                    var s = new lt('textord', '\\prime', this.mode),
                      l = [s];
                    for (this.consume(); "'" === this.nextToken.text; )
                      l.push(s), this.consume();
                    '^' === this.nextToken.text &&
                      l.push(this.handleSupSubscript('superscript')),
                      (r = new lt('ordgroup', l, this.mode));
                  }
                }
                return r || n
                  ? new lt(
                      'supsub',
                      { type: 'supsub', base: t, sup: r, sub: n },
                      this.mode
                    )
                  : t;
              },
            },
            {
              key: 'parseImplicitGroup',
              value: function (e) {
                var t = this.parseSymbol();
                if (null == t) return this.parseFunction();
                if ('arg' === t.type) return this.parseGivenFunction(t);
                if ('\\begin' === t.result) {
                  var r = ut(this.parseGivenFunction(t), 'environment'),
                    n = r.value.name;
                  if (!vn.hasOwnProperty(n))
                    throw new m('No such environment: ' + n, r.value.nameGroup);
                  var a = vn[n],
                    i = this.parseArguments('\\begin{' + n + '}', a),
                    o = i.args,
                    s = i.optArgs,
                    l = { mode: this.mode, envName: n, parser: this },
                    u = a.handler(l, o, s);
                  this.expect('\\end', !1);
                  var h = this.nextToken,
                    c = this.parseFunction();
                  if (!c) throw new m('failed to parse function after \\end');
                  if ((c = ut(c, 'environment')).value.name !== n)
                    throw new m(
                      'Mismatch: \\begin{' +
                        n +
                        '} matched by \\end{' +
                        c.value.name +
                        '}',
                      h
                    );
                  return u;
                }
                return this.parseGivenFunction(t, e);
              },
            },
            {
              key: 'parseFunction',
              value: function () {
                var e = this.parseGroup();
                return e ? this.parseGivenFunction(e) : null;
              },
            },
            {
              key: 'parseGivenFunction',
              value: function (e, t) {
                if ('fn' === e.type) {
                  var r = e.result,
                    n = sn[r];
                  if ('text' === this.mode && !n.allowedInText)
                    throw new m(
                      "Can't use function '" + r + "' in text mode",
                      e.token
                    );
                  if ('math' === this.mode && !1 === n.allowedInMath)
                    throw new m(
                      "Can't use function '" + r + "' in math mode",
                      e.token
                    );
                  if (n.consumeMode) {
                    var a = this.mode;
                    this.switchMode(n.consumeMode),
                      this.consume(),
                      this.switchMode(a);
                  } else this.consume();
                  var i = this.parseArguments(r, n),
                    o = i.args,
                    s = i.optArgs,
                    l = e.token;
                  return this.callFunction(r, o, s, l, t);
                }
                return e.result;
              },
            },
            {
              key: 'callFunction',
              value: function (e, t, r, n, a) {
                var i = {
                    funcName: e,
                    parser: this,
                    token: n,
                    breakOnTokenText: a,
                  },
                  o = sn[e];
                if (o && o.handler) return o.handler(i, t, r);
                throw new m('No function handler for ' + e);
              },
            },
            {
              key: 'parseArguments',
              value: function (e, t) {
                var r = t.numArgs + t.numOptionalArgs;
                if (0 === r) return { args: [], optArgs: [] };
                for (var n = t.greediness, a = [], i = [], o = 0; o < r; o++) {
                  var s = t.argTypes && t.argTypes[o],
                    l = o < t.numOptionalArgs;
                  o > 0 && !l && this.consumeSpaces(),
                    0 !== o ||
                      l ||
                      'math' !== this.mode ||
                      this.consumeSpaces();
                  var u = this.nextToken,
                    h = s ? this.parseGroupOfType(s, l) : this.parseGroup(l);
                  if (!h) {
                    if (l) {
                      i.push(null);
                      continue;
                    }
                    if (
                      this.settings.throwOnError ||
                      '\\' !== this.nextToken.text[0]
                    )
                      throw new m("Expected group after '" + e + "'", u);
                    h = Rn(this.handleUnsupportedCmd(), u);
                  }
                  var c = void 0;
                  if ('fn' === h.type) {
                    if (!(sn[h.result].greediness > n))
                      throw new m(
                        "Got function '" +
                          h.result +
                          "' as argument to '" +
                          e +
                          "'",
                        u
                      );
                    c = this.parseGivenFunction(h);
                  } else c = h.result;
                  (l ? i : a).push(c);
                }
                return { args: a, optArgs: i };
              },
            },
            {
              key: 'parseGroupOfType',
              value: function (e, t) {
                if (('original' === e && (e = this.mode), 'color' === e))
                  return this.parseColorGroup(t);
                if ('size' === e) return this.parseSizeGroup(t);
                if ('string' === e) {
                  var r = this.parseStringGroup(e, t, !0);
                  return null != r
                    ? Rn(
                        new lt(
                          'string',
                          { type: 'string', value: r.text },
                          this.mode
                        ),
                        r
                      )
                    : null;
                }
                return this.parseGroup(t, e);
              },
            },
            {
              key: 'consumeSpaces',
              value: function () {
                for (; ' ' === this.nextToken.text; ) this.consume();
              },
            },
            {
              key: 'parseStringGroup',
              value: function (e, t, r) {
                var n = t ? '[' : '{',
                  a = t ? ']' : '}';
                if (t && this.nextToken.text !== n) return null;
                var i = this.mode;
                (this.mode = 'text'), this.expect(n);
                for (
                  var o = '', s = 0, l = this.nextToken, u = l;
                  (r && s > 0) || this.nextToken.text !== a;

                ) {
                  if ('EOF' === this.nextToken.text)
                    throw new m(
                      'Unexpected end of input in ' + e,
                      l.range(this.nextToken, o)
                    );
                  (o += (u = this.nextToken).text),
                    u.text === n ? s++ : u.text === a && s--,
                    this.consume();
                }
                return (this.mode = i), this.expect(a), l.range(u, o);
              },
            },
            {
              key: 'parseRegexGroup',
              value: function (e, t) {
                var r = this.mode;
                this.mode = 'text';
                for (
                  var n = this.nextToken, a = n, i = '';
                  'EOF' !== this.nextToken.text &&
                  e.test(i + this.nextToken.text);

                )
                  (i += (a = this.nextToken).text), this.consume();
                if ('' === i)
                  throw new m('Invalid ' + t + ": '" + n.text + "'", n);
                return (this.mode = r), n.range(a, i);
              },
            },
            {
              key: 'parseColorGroup',
              value: function (e) {
                var t = this.parseStringGroup('color', e);
                if (!t) return null;
                var r = /^(#[a-f0-9]{3}|#[a-f0-9]{6}|[a-z]+)$/i.exec(t.text);
                if (!r) throw new m("Invalid color: '" + t.text + "'", t);
                return Rn(new lt('color-token', r[0], this.mode), t);
              },
            },
            {
              key: 'parseSizeGroup',
              value: function (e) {
                var t = void 0,
                  r = !1;
                if (
                  !(t =
                    e || '{' === this.nextToken.text
                      ? this.parseStringGroup('size', e)
                      : this.parseRegexGroup(
                          /^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/,
                          'size'
                        ))
                )
                  return null;
                e || 0 !== t.text.length || ((t.text = '0pt'), (r = !0));
                var n = /([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(
                  t.text
                );
                if (!n) throw new m("Invalid size: '" + t.text + "'", t);
                var a,
                  i = { number: +(n[1] + n[2]), unit: n[3] };
                if (
                  ('string' != typeof (a = i) && (a = a.unit),
                  !(a in We || a in Ye || 'ex' === a))
                )
                  throw new m("Invalid unit: '" + i.unit + "'", t);
                return Rn(
                  new lt(
                    'size',
                    { type: 'size', value: i, isBlank: r },
                    this.mode
                  ),
                  t
                );
              },
            },
            {
              key: 'parseGroup',
              value: function (e, t) {
                var r = this.mode,
                  n = this.nextToken;
                if (this.nextToken.text === (e ? '[' : '{')) {
                  t && this.switchMode(t),
                    this.gullet.beginGroup(),
                    this.consume();
                  var a = this.parseExpression(!1, e ? ']' : '}'),
                    i = this.nextToken;
                  return (
                    t && this.switchMode(r),
                    this.gullet.endGroup(),
                    this.expect(e ? ']' : '}'),
                    Rn(
                      new lt('ordgroup', a, this.mode, n, i),
                      n.range(i, n.text)
                    )
                  );
                }
                t && this.switchMode(t);
                var o = e ? null : this.parseSymbol();
                return t && this.switchMode(r), o;
              },
            },
            {
              key: 'formLigatures',
              value: function (e) {
                for (var t = e.length - 1, r = 0; r < t; ++r) {
                  var n = e[r],
                    a = n.value;
                  '-' === a &&
                    '-' === e[r + 1].value &&
                    (r + 1 < t && '-' === e[r + 2].value
                      ? (e.splice(
                          r,
                          3,
                          new lt('textord', '---', 'text', n, e[r + 2])
                        ),
                        (t -= 2))
                      : (e.splice(
                          r,
                          2,
                          new lt('textord', '--', 'text', n, e[r + 1])
                        ),
                        (t -= 1))),
                    ("'" !== a && '`' !== a) ||
                      e[r + 1].value !== a ||
                      (e.splice(
                        r,
                        2,
                        new lt('textord', a + a, 'text', n, e[r + 1])
                      ),
                      (t -= 1));
                }
              },
            },
            {
              key: 'parseSymbol',
              value: function () {
                var e,
                  t = this.nextToken,
                  r = t.text;
                if (sn[r])
                  return { type: 'fn', result: (e = t).text, token: e };
                if (/^\\verb[^a-zA-Z]/.test(r)) {
                  this.consume();
                  var n = r.slice(5),
                    a = '*' === n.charAt(0);
                  if (
                    (a && (n = n.slice(1)),
                    n.length < 2 || n.charAt(0) !== n.slice(-1))
                  )
                    throw new m(
                      '\\verb assertion failed --\n                    please report what input caused this bug'
                    );
                  return (
                    (n = n.slice(1, -1)),
                    Rn(
                      new lt(
                        'verb',
                        { type: 'verb', body: n, star: a },
                        'text'
                      ),
                      t
                    )
                  );
                }
                _n.hasOwnProperty(r[0]) &&
                  !fe[this.mode][r[0]] &&
                  (this.settings.strict &&
                    'math' === this.mode &&
                    this.settings.reportNonstrict(
                      'unicodeTextInMathMode',
                      'Accented Unicode text character "' +
                        r[0] +
                        '" used in math mode',
                      t
                    ),
                  (r = _n[r[0]] + r.substr(1)));
                var i = yn.exec(r);
                i &&
                  ('i' === (r = r.substring(0, i.index))
                    ? (r = '\u0131')
                    : 'j' === r && (r = '\u0237'));
                var o = null;
                if (fe[this.mode][r])
                  this.settings.strict &&
                    'math' === this.mode &&
                    '\xc7\xd0\xde\xe7\xfe'.indexOf(r) >= 0 &&
                    this.settings.reportNonstrict(
                      'unicodeTextInMathMode',
                      'Latin-1/Unicode text character "' +
                        r[0] +
                        '" used in math mode',
                      t
                    ),
                    (o = new lt(fe[this.mode][r].group, r, this.mode, t));
                else {
                  if (!(r.charCodeAt(0) >= 128)) return null;
                  this.settings.strict &&
                    ($(r.charCodeAt(0))
                      ? 'math' === this.mode &&
                        this.settings.reportNonstrict(
                          'unicodeTextInMathMode',
                          'Unicode text character "' +
                            r[0] +
                            '" used in math mode',
                          t
                        )
                      : this.settings.reportNonstrict(
                          'unknownSymbol',
                          'Unrecognized Unicode character "' + r[0] + '"',
                          t
                        )),
                    (o = new lt('textord', r, this.mode, t));
                }
                if ((this.consume(), i))
                  for (var s = 0; s < i[0].length; s++) {
                    var l = i[0][s];
                    if (!Pn.a[l]) throw new m("Unknown accent ' " + l + "'", t);
                    var u = Pn.a[l][this.mode];
                    if (!u)
                      throw new m(
                        'Accent ' +
                          l +
                          ' unsupported in ' +
                          this.mode +
                          ' mode',
                        t
                      );
                    o = new lt(
                      'accent',
                      {
                        type: 'accent',
                        label: u,
                        isStretchy: !1,
                        isShifty: !0,
                        base: o,
                      },
                      this.mode,
                      t
                    );
                  }
                return Rn(o, t);
              },
            },
          ]),
          e
        );
      })();
      (Dn.endOfExpression = ['}', '\\end', '\\right', '&']),
        (Dn.SUPSUB_GREEDINESS = 1);
      var Hn = Dn,
        Fn = function (e, t) {
          if (!('string' == typeof e || e instanceof String))
            throw new TypeError('KaTeX can only parse string typed expression');
          var r = new Hn(e, t);
          delete r.gullet.macros.current['\\df@tag'];
          var n = r.parse();
          if (r.gullet.macros.get('\\df@tag')) {
            if (!t.displayMode)
              throw new m('\\tag works only in display equations');
            r.gullet.feed('\\df@tag'),
              (n = [
                new lt('tag', { type: 'tag', body: n, tag: r.parse() }, 'text'),
              ]);
          }
          return n;
        },
        jn = r(61),
        Vn = function (e, t, r) {
          k.clearNode(t);
          var n = Un(e, r).toNode();
          t.appendChild(n);
        };
      'undefined' != typeof document &&
        'CSS1Compat' !== document.compatMode &&
        ('undefined' != typeof console &&
          console.warn(
            "Warning: KaTeX doesn't work in quirks mode. Make sure your website has a suitable doctype."
          ),
        (Vn = function () {
          throw new m("KaTeX doesn't work in quirks mode.");
        }));
      var Gn = function (e, t, r) {
          if (r.throwOnError || !(e instanceof m)) throw e;
          var n = st.makeSpan(['katex-error'], [new se.symbolNode(t)]);
          return (
            n.setAttribute('title', e.toString()),
            n.setAttribute('style', 'color:' + r.errorColor),
            n
          );
        },
        Un = function (e, t) {
          var r = new S(t);
          try {
            var n = Fn(e, r);
            return Gt(n, e, r);
          } catch (t) {
            return Gn(t, e, r);
          }
        },
        Wn = {
          version: jn.a,
          render: Vn,
          renderToString: function (e, t) {
            return Un(e, t).toMarkup();
          },
          ParseError: m,
          __parse: function (e, t) {
            var r = new S(t);
            return Fn(e, r);
          },
          __renderToDomTree: Un,
          __renderToHTMLTree: function (e, t) {
            var r = new S(t);
            try {
              return (function (e, t, r) {
                var n = Lt(e, Vt(r)),
                  a = st.makeSpan(['katex'], [n]);
                return r.displayMode ? st.makeSpan(['katex-display'], [a]) : a;
              })(Fn(e, r), 0, r);
            } catch (t) {
              return Gn(t, e, r);
            }
          },
          __setFontMetrics: function (e, t) {
            le[e] = t;
          },
          __defineSymbol: ve,
          __defineMacro: An,
          __domTree: se,
        };
      t.default = Wn;
    },
    function (e, t, r) {
      r(24)('getOwnPropertyNames', function () {
        return r(47).f;
      });
    },
    function (e, t, r) {
      r(67);
      var n = r(2).Object;
      e.exports = function (e) {
        return n.getOwnPropertyNames(e);
      };
    },
    function (e, t, r) {
      var n = r(17),
        a = r(18);
      r(24)('keys', function () {
        return function (e) {
          return a(n(e));
        };
      });
    },
    function (e, t, r) {
      r(69), (e.exports = r(2).Object.keys);
    },
    function (e, t, r) {
      'use strict';
      var n = r(18),
        a = r(26),
        i = r(21),
        o = r(17),
        s = r(53),
        l = Object.assign;
      e.exports =
        !l ||
        r(15)(function () {
          var e = {},
            t = {},
            r = Symbol(),
            n = 'abcdefghijklmnopqrst';
          return (
            (e[r] = 7),
            n.split('').forEach(function (e) {
              t[e] = e;
            }),
            7 != l({}, e)[r] || Object.keys(l({}, t)).join('') != n
          );
        })
          ? function (e, t) {
              for (
                var r = o(e), l = arguments.length, u = 1, h = a.f, c = i.f;
                l > u;

              )
                for (
                  var m,
                    p = s(arguments[u++]),
                    d = h ? n(p).concat(h(p)) : n(p),
                    f = d.length,
                    v = 0;
                  f > v;

                )
                  c.call(p, (m = d[v++])) && (r[m] = p[m]);
              return r;
            }
          : l;
    },
    function (e, t, r) {
      var n = r(8);
      n(n.S + n.F, 'Object', { assign: r(71) });
    },
    function (e, t, r) {
      r(72), (e.exports = r(2).Object.assign);
    },
    function (e, t, r) {
      var n = r(8);
      n(n.S, 'Object', { create: r(35) });
    },
    function (e, t, r) {
      r(74);
      var n = r(2).Object;
      e.exports = function (e, t) {
        return n.create(e, t);
      };
    },
    function (e, t, r) {
      e.exports = { default: r(75), __esModule: !0 };
    },
    function (e, t, r) {
      var n = r(11),
        a = r(12),
        i = function (e, t) {
          if ((a(e), !n(t) && null !== t))
            throw TypeError(t + ": can't set as prototype!");
        };
      e.exports = {
        set:
          Object.setPrototypeOf ||
          ('__proto__' in {}
            ? (function (e, t, n) {
                try {
                  (n = r(39)(
                    Function.call,
                    r(45).f(Object.prototype, '__proto__').set,
                    2
                  ))(e, []),
                    (t = !(e instanceof Array));
                } catch (e) {
                  t = !0;
                }
                return function (e, r) {
                  return i(e, r), t ? (e.__proto__ = r) : n(e, r), e;
                };
              })({}, !1)
            : void 0),
        check: i,
      };
    },
    function (e, t, r) {
      var n = r(8);
      n(n.S, 'Object', { setPrototypeOf: r(77).set });
    },
    function (e, t, r) {
      r(78), (e.exports = r(2).Object.setPrototypeOf);
    },
    function (e, t, r) {
      e.exports = { default: r(79), __esModule: !0 };
    },
    function (e, t, r) {
      r(27)('observable');
    },
    function (e, t, r) {
      r(27)('asyncIterator');
    },
    function (e, t) {},
    function (e, t, r) {
      var n = r(34);
      e.exports =
        Array.isArray ||
        function (e) {
          return 'Array' == n(e);
        };
    },
    function (e, t, r) {
      var n = r(18),
        a = r(26),
        i = r(21);
      e.exports = function (e) {
        var t = n(e),
          r = a.f;
        if (r)
          for (var o, s = r(e), l = i.f, u = 0; s.length > u; )
            l.call(e, (o = s[u++])) && t.push(o);
        return t;
      };
    },
    function (e, t, r) {
      'use strict';
      var n = r(7),
        a = r(9),
        i = r(10),
        o = r(8),
        s = r(55),
        l = r(57).KEY,
        u = r(15),
        h = r(32),
        c = r(30),
        m = r(25),
        p = r(5),
        d = r(28),
        f = r(27),
        v = r(85),
        g = r(84),
        y = r(12),
        x = r(11),
        b = r(13),
        w = r(38),
        k = r(19),
        S = r(35),
        M = r(47),
        z = r(45),
        T = r(6),
        A = r(18),
        B = z.f,
        N = T.f,
        O = M.f,
        C = n.Symbol,
        E = n.JSON,
        q = E && E.stringify,
        I = p('_hidden'),
        L = p('toPrimitive'),
        P = {}.propertyIsEnumerable,
        _ = h('symbol-registry'),
        R = h('symbols'),
        D = h('op-symbols'),
        H = Object.prototype,
        F = 'function' == typeof C,
        j = n.QObject,
        V = !j || !j.prototype || !j.prototype.findChild,
        G =
          i &&
          u(function () {
            return (
              7 !=
              S(
                N({}, 'a', {
                  get: function () {
                    return N(this, 'a', { value: 7 }).a;
                  },
                })
              ).a
            );
          })
            ? function (e, t, r) {
                var n = B(H, t);
                n && delete H[t], N(e, t, r), n && e !== H && N(H, t, n);
              }
            : N,
        U = function (e) {
          var t = (R[e] = S(C.prototype));
          return (t._k = e), t;
        },
        W =
          F && 'symbol' == typeof C.iterator
            ? function (e) {
                return 'symbol' == typeof e;
              }
            : function (e) {
                return e instanceof C;
              },
        Y = function (e, t, r) {
          return (
            e === H && Y(D, t, r),
            y(e),
            (t = w(t, !0)),
            y(r),
            a(R, t)
              ? (r.enumerable
                  ? (a(e, I) && e[I][t] && (e[I][t] = !1),
                    (r = S(r, { enumerable: k(0, !1) })))
                  : (a(e, I) || N(e, I, k(1, {})), (e[I][t] = !0)),
                G(e, t, r))
              : N(e, t, r)
          );
        },
        X = function (e, t) {
          y(e);
          for (var r, n = v((t = b(t))), a = 0, i = n.length; i > a; )
            Y(e, (r = n[a++]), t[r]);
          return e;
        },
        $ = function (e) {
          var t = P.call(this, (e = w(e, !0)));
          return (
            !(this === H && a(R, e) && !a(D, e)) &&
            (!(t || !a(this, e) || !a(R, e) || (a(this, I) && this[I][e])) || t)
          );
        },
        Z = function (e, t) {
          if (((e = b(e)), (t = w(t, !0)), e !== H || !a(R, t) || a(D, t))) {
            var r = B(e, t);
            return (
              !r || !a(R, t) || (a(e, I) && e[I][t]) || (r.enumerable = !0), r
            );
          }
        },
        K = function (e) {
          for (var t, r = O(b(e)), n = [], i = 0; r.length > i; )
            a(R, (t = r[i++])) || t == I || t == l || n.push(t);
          return n;
        },
        J = function (e) {
          for (
            var t, r = e === H, n = O(r ? D : b(e)), i = [], o = 0;
            n.length > o;

          )
            !a(R, (t = n[o++])) || (r && !a(H, t)) || i.push(R[t]);
          return i;
        };
      F ||
        (s(
          (C = function () {
            if (this instanceof C)
              throw TypeError('Symbol is not a constructor!');
            var e = m(arguments.length > 0 ? arguments[0] : void 0),
              t = function (r) {
                this === H && t.call(D, r),
                  a(this, I) && a(this[I], e) && (this[I][e] = !1),
                  G(this, e, k(1, r));
              };
            return i && V && G(H, e, { configurable: !0, set: t }), U(e);
          }).prototype,
          'toString',
          function () {
            return this._k;
          }
        ),
        (z.f = Z),
        (T.f = Y),
        (r(46).f = M.f = K),
        (r(21).f = $),
        (r(26).f = J),
        i && !r(22) && s(H, 'propertyIsEnumerable', $, !0),
        (d.f = function (e) {
          return U(p(e));
        })),
        o(o.G + o.W + o.F * !F, { Symbol: C });
      for (
        var Q = 'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(
            ','
          ),
          ee = 0;
        Q.length > ee;

      )
        p(Q[ee++]);
      for (var te = A(p.store), re = 0; te.length > re; ) f(te[re++]);
      o(o.S + o.F * !F, 'Symbol', {
        for: function (e) {
          return a(_, (e += '')) ? _[e] : (_[e] = C(e));
        },
        keyFor: function (e) {
          if (!W(e)) throw TypeError(e + ' is not a symbol!');
          for (var t in _) if (_[t] === e) return t;
        },
        useSetter: function () {
          V = !0;
        },
        useSimple: function () {
          V = !1;
        },
      }),
        o(o.S + o.F * !F, 'Object', {
          create: function (e, t) {
            return void 0 === t ? S(e) : X(S(e), t);
          },
          defineProperty: Y,
          defineProperties: X,
          getOwnPropertyDescriptor: Z,
          getOwnPropertyNames: K,
          getOwnPropertySymbols: J,
        }),
        E &&
          o(
            o.S +
              o.F *
                (!F ||
                  u(function () {
                    var e = C();
                    return (
                      '[null]' != q([e]) ||
                      '{}' != q({ a: e }) ||
                      '{}' != q(Object(e))
                    );
                  })),
            'JSON',
            {
              stringify: function (e) {
                for (var t, r, n = [e], a = 1; arguments.length > a; )
                  n.push(arguments[a++]);
                if (((r = t = n[1]), (x(t) || void 0 !== e) && !W(e)))
                  return (
                    g(t) ||
                      (t = function (e, t) {
                        if (
                          ('function' == typeof r && (t = r.call(this, e, t)),
                          !W(t))
                        )
                          return t;
                      }),
                    (n[1] = t),
                    q.apply(E, n)
                  );
              },
            }
          ),
        C.prototype[L] || r(16)(C.prototype, L, C.prototype.valueOf),
        c(C, 'Symbol'),
        c(Math, 'Math', !0),
        c(n.JSON, 'JSON', !0);
    },
    function (e, t, r) {
      r(86), r(83), r(82), r(81), (e.exports = r(2).Symbol);
    },
    function (e, t, r) {
      e.exports = { default: r(87), __esModule: !0 };
    },
    function (e, t, r) {
      r(23), r(29), (e.exports = r(28).f('iterator'));
    },
    function (e, t, r) {
      e.exports = { default: r(89), __esModule: !0 };
    },
    function (e, t, r) {
      var n = r(17),
        a = r(51);
      r(24)('getPrototypeOf', function () {
        return function (e) {
          return a(n(e));
        };
      });
    },
    function (e, t, r) {
      r(91), (e.exports = r(2).Object.getPrototypeOf);
    },
    function (e, t, r) {
      var n = r(49),
        a = r(5)('iterator'),
        i = r(14);
      e.exports = r(2).isIterable = function (e) {
        var t = Object(e);
        return void 0 !== t[a] || '@@iterator' in t || i.hasOwnProperty(n(t));
      };
    },
    function (e, t, r) {
      r(29), r(23), (e.exports = r(93));
    },
    function (e, t, r) {
      e.exports = { default: r(94), __esModule: !0 };
    },
    function (e, t, r) {
      var n = r(12),
        a = r(50);
      e.exports = r(2).getIterator = function (e) {
        var t = a(e);
        if ('function' != typeof t) throw TypeError(e + ' is not iterable!');
        return n(t.call(e));
      };
    },
    function (e, t) {
      e.exports = function (e, t) {
        return { value: t, done: !!e };
      };
    },
    function (e, t) {
      e.exports = function () {};
    },
    function (e, t, r) {
      'use strict';
      var n = r(98),
        a = r(97),
        i = r(14),
        o = r(13);
      (e.exports = r(56)(
        Array,
        'Array',
        function (e, t) {
          (this._t = o(e)), (this._i = 0), (this._k = t);
        },
        function () {
          var e = this._t,
            t = this._k,
            r = this._i++;
          return !e || r >= e.length
            ? ((this._t = void 0), a(1))
            : a(0, 'keys' == t ? r : 'values' == t ? e[r] : [r, e[r]]);
        },
        'values'
      )),
        (i.Arguments = i.Array),
        n('keys'),
        n('values'),
        n('entries');
    },
    function (e, t, r) {
      r(29), r(23), (e.exports = r(96));
    },
    function (e, t, r) {
      var n = r(5)('iterator'),
        a = !1;
      try {
        var i = [7][n]();
        (i.return = function () {
          a = !0;
        }),
          Array.from(i, function () {
            throw 2;
          });
      } catch (e) {}
      e.exports = function (e, t) {
        if (!t && !a) return !1;
        var r = !1;
        try {
          var i = [7],
            o = i[n]();
          (o.next = function () {
            return { done: (r = !0) };
          }),
            (i[n] = function () {
              return o;
            }),
            e(i);
        } catch (e) {}
        return r;
      };
    },
    function (e, t, r) {
      'use strict';
      var n = r(6),
        a = r(19);
      e.exports = function (e, t, r) {
        t in e ? n.f(e, t, a(0, r)) : (e[t] = r);
      };
    },
    function (e, t, r) {
      var n = r(14),
        a = r(5)('iterator'),
        i = Array.prototype;
      e.exports = function (e) {
        return void 0 !== e && (n.Array === e || i[a] === e);
      };
    },
    function (e, t, r) {
      var n = r(12);
      e.exports = function (e, t, r, a) {
        try {
          return a ? t(n(r)[0], r[1]) : t(r);
        } catch (t) {
          var i = e.return;
          throw (void 0 !== i && n(i.call(e)), t);
        }
      };
    },
    function (e, t, r) {
      'use strict';
      var n = r(39),
        a = r(8),
        i = r(17),
        o = r(104),
        s = r(103),
        l = r(52),
        u = r(102),
        h = r(50);
      a(
        a.S +
          a.F *
            !r(101)(function (e) {
              Array.from(e);
            }),
        'Array',
        {
          from: function (e) {
            var t,
              r,
              a,
              c,
              m = i(e),
              p = 'function' == typeof this ? this : Array,
              d = arguments.length,
              f = d > 1 ? arguments[1] : void 0,
              v = void 0 !== f,
              g = 0,
              y = h(m);
            if (
              (v && (f = n(f, d > 2 ? arguments[2] : void 0, 2)),
              void 0 == y || (p == Array && s(y)))
            )
              for (r = new p((t = l(m.length))); t > g; g++)
                u(r, g, v ? f(m[g], g) : m[g]);
            else
              for (c = y.call(m), r = new p(); !(a = c.next()).done; g++)
                u(r, g, v ? o(c, f, [a.value, g], !0) : a.value);
            return (r.length = g), r;
          },
        }
      );
    },
    function (e, t, r) {
      var n = r(7).document;
      e.exports = n && n.documentElement;
    },
    function (e, t, r) {
      var n = r(37),
        a = Math.max,
        i = Math.min;
      e.exports = function (e, t) {
        return (e = n(e)) < 0 ? a(e + t, 0) : i(e, t);
      };
    },
    function (e, t, r) {
      var n = r(13),
        a = r(52),
        i = r(107);
      e.exports = function (e) {
        return function (t, r, o) {
          var s,
            l = n(t),
            u = a(l.length),
            h = i(o, u);
          if (e && r != r) {
            for (; u > h; ) if ((s = l[h++]) != s) return !0;
          } else
            for (; u > h; h++)
              if ((e || h in l) && l[h] === r) return e || h || 0;
          return !e && -1;
        };
      };
    },
    function (e, t, r) {
      var n = r(6),
        a = r(12),
        i = r(18);
      e.exports = r(10)
        ? Object.defineProperties
        : function (e, t) {
            a(e);
            for (var r, o = i(t), s = o.length, l = 0; s > l; )
              n.f(e, (r = o[l++]), t[r]);
            return e;
          };
    },
    function (e, t, r) {
      'use strict';
      var n = r(35),
        a = r(19),
        i = r(30),
        o = {};
      r(16)(o, r(5)('iterator'), function () {
        return this;
      }),
        (e.exports = function (e, t, r) {
          (e.prototype = n(o, { next: a(1, r) })), i(e, t + ' Iterator');
        });
    },
    function (e, t, r) {
      var n = r(37),
        a = r(36);
      e.exports = function (e) {
        return function (t, r) {
          var i,
            o,
            s = String(a(t)),
            l = n(r),
            u = s.length;
          return l < 0 || l >= u
            ? e
              ? ''
              : void 0
            : (i = s.charCodeAt(l)) < 55296 ||
              i > 56319 ||
              l + 1 === u ||
              (o = s.charCodeAt(l + 1)) < 56320 ||
              o > 57343
            ? e
              ? s.charAt(l)
              : i
            : e
            ? s.slice(l, l + 2)
            : o - 56320 + ((i - 55296) << 10) + 65536;
        };
      };
    },
    function (e, t, r) {
      r(23), r(105), (e.exports = r(2).Array.from);
    },
    function (e, t, r) {
      e.exports = { default: r(112), __esModule: !0 };
    },
    function (e, t, r) {
      var n = r(11),
        a = r(57).onFreeze;
      r(24)('freeze', function (e) {
        return function (t) {
          return e && n(t) ? e(a(t)) : t;
        };
      });
    },
    function (e, t, r) {
      r(114), (e.exports = r(2).Object.freeze);
    },
    function (e, t) {
      e.exports = function (e) {
        if ('function' != typeof e) throw TypeError(e + ' is not a function!');
        return e;
      };
    },
    function (e, t, r) {
      var n = r(8);
      n(n.S + n.F * !r(10), 'Object', { defineProperty: r(6).f });
    },
    function (e, t, r) {
      r(117);
      var n = r(2).Object;
      e.exports = function (e, t, r) {
        return n.defineProperty(e, t, r);
      };
    },
    ,
    function (e, t, r) {},
  ]).default;
});
